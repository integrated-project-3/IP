{"remainingRequest":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\chris\\Desktop\\aileron\\node_modules\\vue-loader\\lib\\selector.js?type=script&index=0!C:\\Users\\chris\\Desktop\\aileron\\src\\components\\Register.vue","dependencies":[{"path":"C:\\Users\\chris\\Desktop\\aileron\\src\\components\\Register.vue","mtime":1520945861857},{"path":"C:\\Users\\chris\\Desktop\\aileron\\package.json","mtime":1520865749549},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1520545180302},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\vue-loader\\lib\\selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SelectionHandler from './SelectionHandler.vue';\nimport axios from 'axios';\nvar fields = [{\n  key: 'title',\n  sortable: true\n}, {\n  key: 'date',\n  sortable: true,\n  formatter: 'dateFormatter'\n}];\nvar sort = {\n  by: 'date',\n  desc: false\n};\nvar selectCount = 0;\n\nfunction clearSelected(t) {\n  console.log(t);\n\n  for (var i = 0; i < timelines.length; i++) {\n    var timeline = timelines[i];\n    timeline.selected = false;\n    timeline._rowVariant = '';\n  }\n\n  t.selectCount = 0;\n}\n\nfunction selectRow(item, t) {\n  item.selected = true, item._rowVariant = 'select';\n  t.selectCount++;\n}\n\nfunction deselectRow(item, t) {\n  item.selected = false, item._rowVariant = '';\n  t.selectCount--;\n}\n\nfunction selectBetweenRows(newIndex, t) {\n  console.log(newIndex, t);\n}\n\nfunction deleteSelected(t) {\n  var sure = confirm(\"Delete?\");\n\n  if (sure != null) {\n    for (var i = timelines.length - 1; i >= 0; i--) {\n      var timeline = timelines[i];\n\n      if (timeline.selected) {\n        timelines.splice(i, 1);\n      }\n    }\n\n    t.selectCount = 0;\n  }\n}\n\nfunction setSort(by, desc) {\n  sort.by = by;\n  sort.desc = desc;\n}\n\nfunction clearSort() {\n  sort.by = '';\n  sort.desc = '';\n}\n\nexport default {\n  name: 'register',\n  components: {\n    SelectionHandler: SelectionHandler\n  },\n  data: function data() {\n    return {\n      fields: fields,\n      sort: sort,\n      selectCount: selectCount,\n      clearSelected: clearSelected\n    };\n  },\n  methods: {\n    cancel: function cancel() {\n      clearSelected(this);\n    },\n    delete: function _delete() {\n      deleteSelected(this);\n    },\n    sortChanged: function sortChanged(ctx) {\n      if (ctx.sortBy === sort.by && ctx.sortDesc === false && sort.desc === true) {\n        clearSort();\n      } else {\n        setSort(ctx.sortBy, ctx.sortDesc);\n      }\n    },\n    rowClicked: function rowClicked(item, index, event) {\n      if (item.selected) {\n        if (event.ctrlKey) {\n          deselectRow(item, this);\n        } else if (!event.shiftKey) {\n          if (this.selectCount > 1) {\n            clearSelected(this);\n            selectRow(item, this);\n          } else {\n            deselectRow(item, this);\n          }\n        }\n      } else {\n        if (event.ctrlKey) {\n          selectRow(item, this);\n        } else if (event.shiftKey) {\n          selectRow(item, this);\n\n          if (this.selectCount > 1) {\n            selectBetweenRows(index, this);\n          }\n        } else {\n          if (this.selectCount > 0) {\n            clearSelected(this);\n          }\n\n          selectRow(item, this);\n        }\n      }\n    },\n    openTimeline: function openTimeline(item) {\n      this.$router.push({\n        name: 'TIMELINE',\n        params: {\n          timeline: item\n        }\n      });\n    },\n    // getTimelines: function(ctx) {\n    //   let promise = axios.get('https://b0qss3eydk.execute-api.eu-west-2.amazonaws.com/prod/timelines', {\n    //     headers: {\n    //       'X-Api-Key': 'zQfYRHZ1vY3GFnvDZep8Z5KqlHsOKxgf1vnldchF'\n    //     }\n    //   })\n    //   return promise.then((data) => {\n    //     return data.data\n    //   }).catch(error => {\n    //     return []\n    //   })\n    // },\n    // dateFormatter: function(ticks) {\n    //   const epochTicks = 621355968000000000;\n    //   var ticksSinceEpoch = ticks - epochTicks;\n    //   var millisecondsSinceEpoch = ticksSinceEpoch / 10000;\n    //   var date = new Date(millisecondsSinceEpoch);\n    //   return date.toLocaleDateString()\n    // }\n    getTimelines: function getTimelines(ctx, callback) {\n      this.fetchData(\"https://b0qss3eydk.execute-api.eu-west-2.amazonaws.com/prod/timelines\", {\n        headers: {\n          'X-Api-Key': 'zQfYRHZ1vY3GFnvDZep8Z5KqlHsOKxgf1vnldchF'\n        }\n      }).then(function (data) {\n        var items = data.data;\n        callback(items);\n      }).catch(function (error) {\n        callback([]);\n      });\n      return null;\n    }\n  }\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AAEA;;YAEA;CADA;;;aAEA;;AACA;MAEA;QACA;AAFA;AAGA;;AAEA,0BACA;cACA;;6CACA;6BACA;wBACA;2BACA;AACA;;kBACA;;;AACA,4BACA;kBACA,yBACA;IACA;;;AACA,8BACA;kBACA,0BACA;IACA;;;AACA,wCACA;wBACA;;;AACA,2BACA;qBACA;;oBACA;oDACA;+BACA;;6BACA;4BACA;AACA;AACA;;oBACA;AACA;;;AAEA,2BACA;YACA;cACA;;;AACA,qBACA;YACA;cACA;;;AAEA;QAEA;;AAEA,AACA;AAFA;wBAGA;;AAEA;AACA;AACA;AACA,AACA;AALA;AAMA;;8BAEA;oBACA;AACA;+BACA;qBACA;AACA;2CACA;kFACA;AACA;aACA;gCACA;AACA;AACA;wDACA;yBACA;2BACA;4BACA;oCACA;oCACA;0BACA;4BACA;iBACA;8BACA;AACA;AACA;aACA;2BACA;0BACA;mCACA;0BACA;;oCACA;qCACA;AACA;eACA;oCACA;0BACA;AACA;;0BACA;AACA;AACA;AACA;8CACA;;;;oBACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;uDACA;;;uBAGA,AACA;AAFA;AADA,8BAIA;yBACA;iBACA;gCACA;iBACA;AACA;aACA;AACA,AACA;AA7EA;AAbA","sourceRoot":"src\\components","sourcesContent":["<template>\r\n  <div>\r\n    <b-row class=\"register\" align-v=\"center\">\r\n      <b-col></b-col>\r\n      <b-col md=\"11\">\r\n        <b-table :items=\"getTimelines\"\r\n                  bordered:false\r\n                  :sort-by.sync=\"sort.by\"\r\n                  :sort-desc.sync=\"sort.desc\"\r\n                  :fields=\"fields\"\r\n                  @row-clicked=\"rowClicked\"\r\n                  @sort-changed=\"sortChanged\"\r\n                  @row-dblclicked=\"openTimeline\"\r\n                  >\r\n        </b-table>\r\n      </b-col>\r\n      <b-col></b-col>\r\n    </b-row>\r\n    <SelectionHandler :select-count=\"selectCount\"></SelectionHandler>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport SelectionHandler from './SelectionHandler.vue'\r\nimport axios from 'axios'\r\n\r\nvar fields = [\r\n  { key: 'title', sortable: true},\r\n  { key: 'date', sortable: true, formatter: 'dateFormatter' }\r\n]\r\nvar sort = {\r\n  by: 'date',\r\n  desc: false\r\n}\r\nvar selectCount = 0\r\n\r\nfunction clearSelected(t) {\r\n  console.log(t)\r\n  for (var i = 0; i < timelines.length; i++) {\r\n    var timeline = timelines[i]\r\n    timeline.selected = false\r\n    timeline._rowVariant = ''\r\n  }\r\n  t.selectCount = 0\r\n}\r\nfunction selectRow(item, t) {\r\n  item.selected = true,\r\n  item._rowVariant = 'select'\r\n  t.selectCount++\r\n}\r\nfunction deselectRow(item, t) {\r\n  item.selected = false,\r\n  item._rowVariant = ''\r\n  t.selectCount--\r\n}\r\nfunction selectBetweenRows(newIndex, t) {\r\n  console.log(newIndex, t)\r\n}\r\nfunction deleteSelected(t) {\r\n  var sure = confirm(\"Delete?\")\r\n  if (sure != null) {\r\n    for (var i = timelines.length-1; i >= 0; i--) {\r\n      var timeline = timelines[i]\r\n      if (timeline.selected) {\r\n        timelines.splice(i,1)\r\n      }\r\n    }\r\n    t.selectCount = 0\r\n  }\r\n}\r\n\r\nfunction setSort(by, desc) {\r\n  sort.by = by\r\n  sort.desc = desc\r\n}\r\nfunction clearSort() {\r\n  sort.by = ''\r\n  sort.desc = ''\r\n}\r\n\r\nexport default {\r\n  name: 'register',\r\n  components: {\r\n    SelectionHandler\r\n  },\r\n  data() {\r\n    return {\r\n      fields,\r\n      sort,\r\n      selectCount,\r\n      clearSelected\r\n    }\r\n  },\r\n  methods: {\r\n    cancel: function() {\r\n      clearSelected(this)\r\n    },\r\n    delete: function() {\r\n      deleteSelected(this)\r\n    },\r\n    sortChanged: function(ctx) {\r\n      if (ctx.sortBy === sort.by && ctx.sortDesc === false && sort.desc === true) {\r\n        clearSort()\r\n      } else {\r\n        setSort(ctx.sortBy, ctx.sortDesc)\r\n      }\r\n    },\r\n    rowClicked: function(item, index, event) {\r\n      if (item.selected) {\r\n        if (event.ctrlKey) {\r\n          deselectRow(item, this)\r\n        } else if (!event.shiftKey) {\r\n          if (this.selectCount > 1) {\r\n            clearSelected(this)\r\n            selectRow(item, this)\r\n          } else {\r\n            deselectRow(item, this)\r\n          }\r\n        }\r\n      } else {\r\n        if (event.ctrlKey) {\r\n          selectRow(item, this)\r\n        } else if (event.shiftKey) {\r\n          selectRow(item, this)\r\n          if (this.selectCount > 1) {\r\n            selectBetweenRows(index, this)\r\n          }\r\n        } else {\r\n          if (this.selectCount > 0) {\r\n            clearSelected(this)\r\n          }\r\n          selectRow(item, this)\r\n        }\r\n      }\r\n    },\r\n    openTimeline: function(item) {\r\n      this.$router.push({name: 'TIMELINE', params: {timeline: item}} )\r\n    },\r\n    // getTimelines: function(ctx) {\r\n    //   let promise = axios.get('https://b0qss3eydk.execute-api.eu-west-2.amazonaws.com/prod/timelines', {\r\n    //     headers: {\r\n    //       'X-Api-Key': 'zQfYRHZ1vY3GFnvDZep8Z5KqlHsOKxgf1vnldchF'\r\n    //     }\r\n    //   })\r\n    //   return promise.then((data) => {\r\n    //     return data.data\r\n    //   }).catch(error => {\r\n    //     return []\r\n    //   })\r\n    // },\r\n    // dateFormatter: function(ticks) {\r\n    //   const epochTicks = 621355968000000000;\r\n    //   var ticksSinceEpoch = ticks - epochTicks;\r\n    //   var millisecondsSinceEpoch = ticksSinceEpoch / 10000;\r\n    //   var date = new Date(millisecondsSinceEpoch);\r\n    //   return date.toLocaleDateString()\r\n    // }\r\n    getTimelines: function(ctx, callback) {\r\n      this.fetchData(\"https://b0qss3eydk.execute-api.eu-west-2.amazonaws.com/prod/timelines\", {\r\n        headers: {\r\n          'X-Api-Key': 'zQfYRHZ1vY3GFnvDZep8Z5KqlHsOKxgf1vnldchF'\r\n        }\r\n      }).then((data) => {\r\n        let items = data.data\r\n        callback(items)\r\n      }).catch(error => {\r\n        callback([])\r\n      })\r\n      return null\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '../assets/styles/theme.scss';\r\n\r\n.register {\r\n  user-select: none; /* CSS3 (little to no support) */\r\n  -ms-user-select: none; /* IE 10+ */\r\n  -moz-user-select: none; /* Gecko (Firefox) */\r\n  -webkit-user-select: none; /* Webkit (Safari, Chrome) */\r\n  padding-top: 20px;\r\n  table {\r\n    background-color: $register-bg;\r\n    color: $text;\r\n    th {\r\n      background-color: $background;\r\n      border: none;\r\n      @media only screen and (max-width: 576px) {\r\n        font-size: 2em;\r\n      }\r\n      font-size: 3em;\r\n      outline: none;\r\n    }\r\n    td {\r\n      border: none;\r\n      font-size: 1.5em;\r\n    }\r\n    .table-select {\r\n      background-color: $select;\r\n      color: white;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}