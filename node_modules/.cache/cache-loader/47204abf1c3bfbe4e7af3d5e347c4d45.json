{"remainingRequest":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\chris\\Desktop\\aileron\\node_modules\\vue-loader\\lib\\selector.js?type=script&index=0!C:\\Users\\chris\\Desktop\\aileron\\src\\components\\timeline\\events.vue","dependencies":[{"path":"C:\\Users\\chris\\Desktop\\aileron\\src\\components\\timeline\\events.vue","mtime":1521757438988},{"path":"C:\\Users\\chris\\Desktop\\aileron\\package.json","mtime":1521671277546},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1520545180302},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\vue-loader\\lib\\selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { formatAttachmentTime } from '../../scripts/script';\nimport $ from 'jquery';\nvar _drag = false;\nvar lastPos = [];\nvar pos = [];\nvar difference = [];\nvar scale = 1;\nexport default {\n  name: 'aEvents',\n  data: function data() {\n    return {\n      formatAttachmentTime: formatAttachmentTime,\n      scale: scale\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var slider = document.getElementById(\"slider\");\n    slider.style.width = 375 * this.events.length + \"px\";\n\n    require('mouse-wheel')(function (dx, dy, dz, ev) {\n      if (dy > 0 && _this.scale > .2) {\n        _this.scale -= .1;\n      }\n\n      if (dy < 0) {\n        _this.scale += .1;\n      } // var windowHalfWidth = $(\"#container\").width()/2\n      // var minLeft = windowHalfWidth * 2 - slider.style.width.substring(0,slider.style.width.length-2) * this.scale\n      // var xSelf = ev.pageX - $(\"#container\").offset().left - parseFloat($(\"#slider\").css(\"left\"));\n      // var newLeft\n      // if (this.scale != 1) {\n      //   newLeft = Math.min(Math.max((-(xSelf / 0.55 - windowHalfWidth)), minLeft), 0);\n      // } else {\n      //   newLeft = Math.min(Math.max((-(xSelf * 0.55 - windowHalfWidth)), minLeft), 0);\n      // }\n      // slider.style.left = newLeft + \"px\"\n\n\n      slider.style.transform = \"scale(\" + _this.scale + \")\";\n    });\n  },\n  props: {\n    events: {\n      type: Array,\n      required: true\n    }\n  },\n  methods: {\n    drag: function drag(event, type) {\n      if (type === \"down\") {\n        _drag = true;\n        lastPos = [event.clientX, event.clientY];\n      }\n\n      if (type === \"up\") {\n        _drag = false;\n      }\n\n      if (type === \"drag\" && _drag) {\n        pos = [event.clientX, event.clientY];\n        difference = [pos[0] - lastPos[0], pos[1] - lastPos[1]];\n        event.srcElement.scrollLeft = event.srcElement.scrollLeft - difference[0] / 10;\n      }\n    },\n    clickedTitle: function clickedTitle(event) {\n      this.clearSelected();\n      event.srcElement.classList.add(\"selected\");\n    },\n    clearSelected: function clearSelected() {\n      var selected = document.getElementsByClassName(\"selected\");\n\n      for (var i = selected.length - 1; i >= 0; i--) {\n        selected[0].classList.remove(\"selected\");\n      }\n    }\n  }\n};",{"version":3,"sources":["events.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;QAEA;wBACA;;AAEA;AACA,AACA;AAHA;AAIA;;AACA;;yCACA;oDACA;;;sCAEA;uBACA;AACA;;kBACA;uBACA;AAEA,OAPA,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;wDACA;AACA;AACA;;;YAGA;gBACA,AACA,AACA;AAJA;AADA;;qCAOA;2BACA;gBACA;wCACA;AACA;;yBACA;gBACA;AACA;;oCACA;oCACA;4DACA;oFACA;AACA;AACA;+CACA;WACA;qCACA;AACA;4CACA;qDACA;;qDACA;qCACA;AACA;AACA,AACA;AAzBA;AAvCA","sourceRoot":"src\\components\\timeline","sourcesContent":["<template lang=\"html\">\r\n  <div class=\"events\" id=\"container\" @mousedown=\"drag($event, 'down')\" @mousemove=\"drag($event, 'drag')\" @mouseup=\"drag($event, 'up')\">\r\n    <div id=\"slider\">\r\n      <div class=\"event\" v-for=\"(e, index) in events\" :key=\"e.id\">\r\n        <div class=\"time\" v-if=\"index === 0 || index === events.length-1\">\r\n          <p>{{formatAttachmentTime(e.EventDateTime)}}</p>\r\n        </div>\r\n        <div class=\"title\" id=\"title\" @click=\"clickedTitle($event)\">\r\n          <p>{{e.Title}}</p>\r\n        </div>\r\n        <div v-if=\"index != events.length-1\" id=\"h-line\"></div>\r\n        <div v-if=\"index === 0 || index === events.length-1\" id=\"v-line\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {formatAttachmentTime} from '../../scripts/script'\r\nimport $ from 'jquery'\r\n\r\nvar drag = false\r\nvar lastPos = []\r\nvar pos = []\r\nvar difference = []\r\nvar scale = 1\r\n\r\nexport default {\r\n  name: 'aEvents',\r\n  data() {\r\n    return {\r\n      formatAttachmentTime,\r\n      scale\r\n    }\r\n  },\r\n  mounted() {\r\n    var slider = document.getElementById(\"slider\")\r\n    slider.style.width = 375 * this.events.length + \"px\"\r\n    require('mouse-wheel')((dx, dy, dz, ev) => {\r\n      if (dy > 0 && this.scale > .2) {\r\n        this.scale -= .1\r\n      }\r\n      if (dy < 0) {\r\n        this.scale += .1\r\n      }\r\n\r\n      // var windowHalfWidth = $(\"#container\").width()/2\r\n      // var minLeft = windowHalfWidth * 2 - slider.style.width.substring(0,slider.style.width.length-2) * this.scale\r\n      // var xSelf = ev.pageX - $(\"#container\").offset().left - parseFloat($(\"#slider\").css(\"left\"));\r\n      // var newLeft\r\n      // if (this.scale != 1) {\r\n      //   newLeft = Math.min(Math.max((-(xSelf / 0.55 - windowHalfWidth)), minLeft), 0);\r\n      // } else {\r\n      //   newLeft = Math.min(Math.max((-(xSelf * 0.55 - windowHalfWidth)), minLeft), 0);\r\n      // }\r\n      // slider.style.left = newLeft + \"px\"\r\n\r\n      slider.style.transform = \"scale(\"+this.scale+\")\"\r\n    })\r\n  },\r\n  props: {\r\n    events: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  methods: {\r\n    drag: function(event, type) {\r\n      if (type === \"down\") {\r\n        drag = true\r\n        lastPos = [event.clientX, event.clientY]\r\n      }\r\n      if (type === \"up\") {\r\n        drag = false\r\n      }\r\n      if (type === \"drag\" && drag) {\r\n        pos = [event.clientX, event.clientY]\r\n        difference = [ (pos[0]-lastPos[0]), (pos[1]-lastPos[1])]\r\n        event.srcElement.scrollLeft = event.srcElement.scrollLeft - (difference[0]/10)\r\n      }\r\n    },\r\n    clickedTitle: function(event) {\r\n      this.clearSelected()\r\n      event.srcElement.classList.add(\"selected\")\r\n    },\r\n    clearSelected: function() {\r\n      var selected = document.getElementsByClassName(\"selected\")\r\n      for (var i = selected.length-1; i >= 0; i--) {\r\n        selected[0].classList.remove(\"selected\")\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '../../assets/styles/theme.scss';\r\n@import '../../assets/styles/main.scss';\r\n.events {\r\n  overflow: hidden;\r\n  height: 500px;\r\n  cursor: pointer;\r\n  #slider {\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n    transform-origin: 0 0;\r\n  }\r\n  #h-line {\r\n    width: 75px;\r\n    border-bottom: 1px solid black;\r\n    position: relative;\r\n    top: -35px;\r\n    right: -300px;\r\n  }\r\n  #v-line {\r\n    height: 50px;\r\n    border-left: 1px solid black;\r\n    position: relative;\r\n    left: 150px;\r\n    top: -120px\r\n  }\r\n  .event {\r\n    margin-left: 37.5px;\r\n    margin-right: 37.5px;\r\n    display: inline-block;\r\n    text-align: center;\r\n    cursor: default;\r\n    p {\r\n      position: relative;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n      pointer-events: none;\r\n    }\r\n    .time {\r\n      background-color: $text;\r\n      color: white;\r\n      width: 200px;\r\n      height: 70px;\r\n      margin: auto;\r\n      transform: skewX(-10deg);\r\n    }\r\n    .title {\r\n      background-color: white;\r\n      margin-top: 50px;\r\n      position: relative;\r\n      top: 50%;\r\n      width: 300px;\r\n      height: 70px;\r\n      &.selected {\r\n        background-color: $select;\r\n        color: white;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}