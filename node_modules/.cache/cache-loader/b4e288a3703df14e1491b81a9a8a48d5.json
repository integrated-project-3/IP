{"remainingRequest":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\chris\\Desktop\\aileron\\node_modules\\vue-loader\\lib\\selector.js?type=script&index=0!C:\\Users\\chris\\Desktop\\aileron\\src\\components\\timeline\\timeline.vue","dependencies":[{"path":"C:\\Users\\chris\\Desktop\\aileron\\src\\components\\timeline\\timeline.vue","mtime":1523454192255},{"path":"C:\\Users\\chris\\Desktop\\aileron\\package.json","mtime":1523642910731},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1520545180302},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\vue-loader\\lib\\selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { formatDate, validTitle } from '../../scripts/script';\nimport aEvents from './timeline-events';\nexport default {\n  name: 'aTimeline',\n  data: function data() {\n    return {\n      modal: false,\n      modalTitle: '',\n      newEventTitle: '',\n      showTitleWarning: false,\n      modalType: '',\n      exactDateTime: false,\n      newEventDescription: '',\n      beforeAfterSelect: null,\n      beforeAfterOptions: [{\n        value: null,\n        text: 'Before/After',\n        disabled: true\n      }, {\n        value: 'before',\n        text: 'Before'\n      }, {\n        value: 'after',\n        text: 'After'\n      }],\n      eventSelect: null,\n      newEventDateTime: null,\n      newTimelineTitle: ''\n    };\n  },\n  components: {\n    aEvents: aEvents\n  },\n  computed: {\n    timeline: function timeline() {\n      return this.$store.state.currentTimeline;\n    },\n    title: function title() {\n      return this.timeline.title;\n    },\n    date: function date() {\n      return formatDate(this.timeline.date);\n    },\n    events: function events() {\n      return this.timeline.timelineEvents || [];\n    },\n    eventOptions: function eventOptions() {\n      var options = [{\n        value: null,\n        text: 'Select an event',\n        disabled: true\n      }];\n\n      for (var i = 0; i < this.events.length; i++) {\n        var option = {\n          value: this.events[i].Id,\n          text: this.events[i].Title\n        };\n        options.push(option);\n      }\n\n      return options;\n    },\n    startTime: function startTime() {\n      return this.timeFromDateTime(this.events[0].EventDateTime);\n    },\n    endTime: function endTime() {\n      return this.timeFromDateTime(this.events[this.events.length - 1].EventDateTime);\n    }\n  },\n  methods: {\n    back: function back() {\n      this.$router.push({\n        name: 'REGISTER'\n      });\n    },\n    timeFromDateTime: function timeFromDateTime(dateTime) {\n      return dateTime.substring(11, 16);\n    },\n    deleteTimeline: function deleteTimeline() {\n      this.closeModal();\n      this.$store.dispatch('deleteTimeline', this.timeline.id); // this.$store.commit('clearCurrentTimeline')\n\n      this.back();\n    },\n    openModal: function openModal(type) {\n      this.modal = true;\n      this.modalType = type;\n    },\n    closeModal: function closeModal() {\n      this.modal = !this.modal;\n    },\n    modalOpened: function modalOpened() {\n      if (this.modalType === \"createEvent\") {\n        document.getElementById('title-input').focus();\n        this.modalTitle = \"Create\";\n      } else if (this.modalType === \"deleteTimeline\") {\n        this.modalTitle = \"Delete\";\n      } else if (this.modalType === \"editTimelineTitle\") {\n        document.getElementById('title-input').focus();\n        this.modalTitle = \"Edit\";\n        this.newTimelineTitle = this.title;\n      }\n    },\n    modalClosed: function modalClosed() {\n      if (this.modalType === \"createEvent\") {\n        this.newEventTitle = '';\n        this.newEventDescription = '';\n        this.exactDateTime = false;\n        this.showTitleWarning = false;\n        this.beforeAfterSelect = null;\n        this.eventSelect = null;\n        this.newEventDateTime = null;\n        this.$refs.events.clearSelected();\n      } else if (this.modalType === \"editTimelineTitle\") {\n        this.newTimelineTitle = '';\n        this.showTitleWarning = false;\n      }\n\n      this.modalType = '';\n      this.modalTitle = '';\n    },\n    createEvent: function createEvent() {\n      var _this = this;\n\n      if (!validTitle(this.newEventTitle)) {\n        document.getElementById('title-input').focus();\n        this.showTitleWarning = true;\n        return;\n      }\n\n      if (!this.exactDateTime) {\n        if (this.beforeAfterSelect === null) {\n          var select = document.getElementById(\"beforeAfterSelect\");\n          select.focus();\n          select.style.border = \"1px solid red\";\n          return;\n        }\n\n        if (this.eventSelect === null) {\n          var eselect = document.getElementById(\"eventSelect\");\n          eselect.focus();\n          eselect.style.border = \"1px solid red\";\n          return;\n        }\n      } else {\n        if (this.newEventDateTime === null) {\n          var datetime = document.getElementById(\"newEventDateTime\");\n          datetime.focus();\n          datetime.style.border = \"1px solid red\";\n          return;\n        }\n      }\n\n      this.closeModal();\n      var payload = {\n        title: this.newEventTitle,\n        description: this.newEventDescription\n      };\n\n      if (!this.exactDateTime) {\n        payload.beforeAfter = this.beforeAfterSelect;\n        payload.eventId = this.eventSelect;\n        payload.dateTime = this.events.filter(function (event) {\n          return event.Id === _this.eventSelect;\n        })[0].EventDateTime; // if (payload.dateTime.slice(-2) !== 'BA')\n        //   payload.dateTime = payload.dateTime + 'BA'\n\n        this.$store.dispatch('createEventBA', payload);\n      } else {\n        payload.dateTime = this.newEventDateTime;\n        this.$store.dispatch('createEventExact', payload);\n      }\n    },\n\n    /* Called when a key is pressed on the create modal input. */\n    checkTitleInput: function checkTitleInput() {\n      /*\r\n        If the user has tried to create a timeline that has less than 5 characters\r\n        then the warning gets shown.\r\n        This automatically hides the warning once they have entered at least 5 characters.\r\n      */\n      if (this.showTitleWarning === true) {\n        if (validTitle(this.newEventTitle)) {\n          this.showTitleWarning = false;\n        }\n      }\n    },\n    checkInput: function checkInput(id) {\n      var el = document.getElementById(id);\n\n      if (el.style.border === \"1px solid red\") {\n        el.style.border = \"\";\n      }\n    },\n    changeTimelineTitle: function changeTimelineTitle() {\n      if (!validTitle(this.newTimelineTitle)) {\n        document.getElementById('title-input').focus();\n        this.showTitleWarning = true;\n        return;\n      }\n\n      this.closeModal();\n      var payload = {\n        id: this.timeline.id,\n        title: this.newTimelineTitle\n      };\n      this.$store.dispatch('changeTimelineTitle', payload);\n    }\n  }\n};",{"version":3,"sources":["timeline.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AAEA;QAEA;wBACA;;aAEA;kBACA;qBACA;wBACA;iBACA;qBACA;2BACA;yBACA;;;;kBAEA;OADA;;cAEA;;;cACA,AACA;;mBACA;wBACA;wBACA,AACA;AAjBA;AAkBA;;AAEA,AACA;AAFA;;kCAIA;+BACA;AACA;4BACA;2BACA;AACA;0BACA;sCACA;AACA;8BACA;6CACA;AACA;0CACA;;;;kBAEA,AACA;OAFA;;mDAGA;;gCAEA;+BACA,AACA;AAHA;qBAIA;AACA;;aACA;AACA;oCACA;kDACA;AACA;gCACA;uEACA;AACA,AACA;AAhCA;;0BAkCA;;cACA;;AACA;0DACA;oCACA;AACA;8CACA;WACA;2DACA,KACA;;WACA;AACA;wCACA;mBACA;uBACA;AACA;sCACA;yBACA;AACA;wCACA;4CACA;+CACA;0BACA;sDACA;0BACA;yDACA;+CACA;0BACA;qCACA;AACA;AACA;wCACA;4CACA;6BACA;mCACA;6BACA;gCACA;iCACA;2BACA;gCACA;0BACA;yDACA;gCACA;gCACA;AACA;;uBACA;wBACA;AACA;;AACA;;2CACA;+CACA;gCACA;AACA;AACA;;+BACA;6CACA;+CACA;iBACA;gCACA;AACA;AACA;;uCACA;gDACA;kBACA;iCACA;AACA;AACA;aACA;4CACA;iDACA;mBACA;kCACA;AACA;AACA;AACA;;WACA;;oBAEA;0BACA,AAEA;AAJA;;;mCAMA;+BACA;;;cACA,cAHA,CAIA;AACA;;8CACA;aACA;gCACA;iDACA;AACA;AACA;;AACA;gDACA;AACA,AACA,AACA,AACA,AACA;;;;;0CACA;4CACA;kCACA;AACA;AACA;AACA;wCACA;uCACA;;+CACA;0BACA;AACA;AACA;wDACA;8CACA;+CACA;gCACA;AACA;AACA;;WACA;;0BAEA;oBACA,AACA;AAHA;kDAIA;AACA,AACA;AA9HA;AA1DA","sourceRoot":"src\\components\\timeline","sourcesContent":["<template >\r\n  <div>\r\n    <div v-if=\"timeline != null\">\r\n      <div class=\"timeline\">\r\n        <b-row class=\"head\" align-v=\"start\">\r\n          <b-col sm=\"12\" lg=\"2\" class=\"timeline-buttons\">\r\n            <b-btn variant=\"select\" @click=\"back\" id=\"timeline-back-button\">Back</b-btn>\r\n          </b-col>\r\n          <b-col sm=\"12\" lg=\"6\" class=\"timeline-details\">\r\n            <h1 v-on:click=\"openModal('editTimelineTitle')\" style=\"cursor: pointer;\">{{title}}</h1>\r\n            <h3>{{date}}</h3>\r\n          </b-col>\r\n          <b-col sm=\"6\" lg=\"2\" class=\"timeline-buttons\">\r\n            <b-btn variant=\"delete\" @click=\"openModal('deleteTimeline')\" id=\"timeline-delete-button\">Delete timeline</b-btn>\r\n          </b-col>\r\n          <b-col sm=\"6\" lg=\"2\" class=\"timeline-buttons\" id=\"timeline-create-div\">\r\n            <b-btn variant=\"create\" @click=\"openModal('createEvent')\" style=\"float: right;\" id=\"timeline-create-button\">Create new event</b-btn>\r\n          </b-col>\r\n        </b-row>\r\n        <b-row align-v=\"center\">\r\n          <a-events ref=\"events\" :events=\"events\"></a-events>\r\n        </b-row>\r\n      </div>\r\n      <b-modal  v-model=\"modal\" :title=\"modalTitle\" @shown=\"modalOpened\" @hidden=\"modalClosed\" size=\"lg\" id=\"timeline-modal\">\r\n        <b-container fluid>\r\n          <b-row v-if=\"modalType === 'createEvent'\">\r\n            <b-col md=\"6\" class=\"modal-half\">\r\n              <b-row>\r\n                <input type=\"text\" v-model=\"newEventTitle\" @keyup.enter=\"createEvent\" @keyup=\"checkTitleInput\" placeholder=\"Enter title\" id=\"title-input\"/>\r\n                <b-alert variant=\"danger\" :show=\"showTitleWarning\" id=\"title-alert\">Title must be at least 5 characters long</b-alert>\r\n              </b-row>\r\n              <b-row>\r\n                <b-form-textarea id=\"description-input\" v-model=\"newEventDescription\" placeholder=\"Enter description\" :rows=\"8\" no-resize/>\r\n              </b-row>\r\n            </b-col>\r\n            <b-col md=\"6\" class=\"modal-half\">\r\n              <b-row id=\"checkBoxCol\">\r\n                <b-form-checkbox id=\"exactDateTime\" v-model=\"exactDateTime\">Exact date and time</b-form-checkbox>\r\n              </b-row>\r\n              <b-row v-if=\"!exactDateTime\">\r\n                <b-form-select v-model=\"beforeAfterSelect\" :options=\"beforeAfterOptions\" class=\"mb-3\" id=\"beforeAfterSelect\" @change=\"checkInput('beforeAfterSelect')\"/>\r\n                <b-form-select v-model=\"eventSelect\" :options=\"eventOptions\" class=\"mb-3\" id=\"eventSelect\" @change=\"checkInput('eventSelect')\"/>\r\n              </b-row>\r\n              <b-row v-if=\"exactDateTime\">\r\n                <input type=\"datetime-local\" v-model=\"newEventDateTime\" id=\"newEventDateTime\" @change=\"checkInput('newEventDateTime')\"/>\r\n              </b-row>\r\n            </b-col>\r\n          </b-row>\r\n          <b-row v-else-if=\"modalType === 'deleteTimeline'\">\r\n            <b-col>\r\n              <p>\r\n                Are you sure you wish to delete this timeline?\r\n              </p>\r\n            </b-col>\r\n          </b-row>\r\n          <b-row v-else-if=\"modalType === 'editTimelineTitle'\">\r\n            <b-col>\r\n              <input type=\"text\" v-model=\"newTimelineTitle\" @keyup.enter=\"changeTimelineTitle\" @keyup=\"checkTitleInput\" placeholder=\"Enter new title\" id=\"title-input\" />\r\n              <b-alert variant=\"danger\" :show=\"showTitleWarning\">Title must be at least 5 characters long</b-alert>\r\n            </b-col>\r\n          </b-row>\r\n        </b-container>\r\n        <div slot=\"modal-footer\" class=\"w-100\">\r\n          <b-btn class=\"float-left\" @click=\"closeModal\">CANCEL</b-btn>\r\n          <b-btn v-if=\"modalType === 'createEvent'\" class=\"float-right\" @click=\"createEvent\">CREATE</b-btn>\r\n          <b-btn v-else-if=\"modalType === 'deleteTimeline'\" class=\"float-right\" @click=\"deleteTimeline\">DELETE</b-btn>\r\n          <b-btn v-else-if=\"modalType === 'editTimelineTitle'\" class=\"float-right\" @click=\"changeTimelineTitle\">SAVE</b-btn>\r\n        </div>\r\n      </b-modal>\r\n    </div>\r\n    <div v-else>\r\n      <h2>\r\n        No timeline selected. Click <router-link to=\"/\">here</router-link> to return to timeline register.\r\n      </h2>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {formatDate, validTitle} from '../../scripts/script'\r\nimport aEvents from './timeline-events'\r\n\r\nexport default {\r\n  name: 'aTimeline',\r\n  data() {\r\n    return {\r\n      modal: false,\r\n      modalTitle: '',\r\n      newEventTitle: '',\r\n      showTitleWarning: false,\r\n      modalType: '',\r\n      exactDateTime: false,\r\n      newEventDescription: '',\r\n      beforeAfterSelect: null,\r\n      beforeAfterOptions: [\r\n        { value: null, text: 'Before/After', disabled: true},\r\n        { value: 'before', text: 'Before'},\r\n        { value: 'after', text: 'After'}\r\n      ],\r\n      eventSelect: null,\r\n      newEventDateTime: null,\r\n      newTimelineTitle: ''\r\n    }\r\n  },\r\n  components: {\r\n    aEvents\r\n  },\r\n  computed: {\r\n    timeline() {\r\n      return this.$store.state.currentTimeline\r\n    },\r\n    title() {\r\n      return this.timeline.title\r\n    },\r\n    date() {\r\n      return formatDate(this.timeline.date)\r\n    },\r\n    events() {\r\n      return this.timeline.timelineEvents || []\r\n    },\r\n    eventOptions() {\r\n      var options = [\r\n        { value: null, text: 'Select an event', disabled : true}\r\n      ]\r\n      for (var i = 0; i < this.events.length; i++) {\r\n        var option = {\r\n          value: this.events[i].Id,\r\n          text: this.events[i].Title\r\n        }\r\n        options.push(option)\r\n      }\r\n      return options\r\n    },\r\n    startTime() {\r\n      return this.timeFromDateTime(this.events[0].EventDateTime)\r\n    },\r\n    endTime() {\r\n      return this.timeFromDateTime(this.events[this.events.length-1].EventDateTime)\r\n    }\r\n  },\r\n  methods: {\r\n    back() {\r\n      this.$router.push({name: 'REGISTER'})\r\n    },\r\n    timeFromDateTime(dateTime) {\r\n      return dateTime.substring(11, 16)\r\n    },\r\n    deleteTimeline() {\r\n      this.closeModal()\r\n      this.$store.dispatch('deleteTimeline', this.timeline.id)\r\n      // this.$store.commit('clearCurrentTimeline')\r\n      this.back()\r\n    },\r\n    openModal(type) {\r\n      this.modal = true\r\n      this.modalType = type\r\n    },\r\n    closeModal() {\r\n      this.modal = !this.modal\r\n    },\r\n    modalOpened() {\r\n      if (this.modalType === \"createEvent\") {\r\n        document.getElementById('title-input').focus()\r\n        this.modalTitle = \"Create\"\r\n      } else if (this.modalType === \"deleteTimeline\") {\r\n        this.modalTitle = \"Delete\"\r\n      } else if (this.modalType === \"editTimelineTitle\") {\r\n        document.getElementById('title-input').focus()\r\n        this.modalTitle = \"Edit\"\r\n        this.newTimelineTitle = this.title\r\n      }\r\n    },\r\n    modalClosed() {\r\n      if (this.modalType === \"createEvent\") {\r\n        this.newEventTitle = ''\r\n        this.newEventDescription = ''\r\n        this.exactDateTime = false\r\n        this.showTitleWarning = false\r\n        this.beforeAfterSelect = null\r\n        this.eventSelect = null\r\n        this.newEventDateTime = null\r\n        this.$refs.events.clearSelected()\r\n      } else if (this.modalType === \"editTimelineTitle\") {\r\n        this.newTimelineTitle = ''\r\n        this.showTitleWarning = false\r\n      }\r\n      this.modalType = ''\r\n      this.modalTitle = ''\r\n    },\r\n    createEvent() {\r\n      if (!validTitle(this.newEventTitle)) {\r\n        document.getElementById('title-input').focus()\r\n        this.showTitleWarning = true\r\n        return\r\n      }\r\n      if (!this.exactDateTime) {\r\n        if(this.beforeAfterSelect === null) {\r\n          var select = document.getElementById(\"beforeAfterSelect\")\r\n          select.focus()\r\n          select.style.border = \"1px solid red\"\r\n          return\r\n        }\r\n        if(this.eventSelect === null) {\r\n          var eselect = document.getElementById(\"eventSelect\")\r\n          eselect.focus()\r\n          eselect.style.border = \"1px solid red\"\r\n          return\r\n        }\r\n      } else {\r\n        if (this.newEventDateTime === null) {\r\n          var datetime = document.getElementById(\"newEventDateTime\")\r\n          datetime.focus()\r\n          datetime.style.border = \"1px solid red\"\r\n          return\r\n        }\r\n      }\r\n      this.closeModal()\r\n      var payload = {\r\n        title: this.newEventTitle,\r\n        description: this.newEventDescription\r\n      }\r\n\r\n      if (!this.exactDateTime) {\r\n        payload.beforeAfter = this.beforeAfterSelect\r\n        payload.eventId = this.eventSelect\r\n        payload.dateTime = this.events.filter(event => event.Id === this.eventSelect)[0].EventDateTime\r\n        // if (payload.dateTime.slice(-2) !== 'BA')\r\n        //   payload.dateTime = payload.dateTime + 'BA'\r\n        this.$store.dispatch('createEventBA', payload)\r\n      } else {\r\n        payload.dateTime = this.newEventDateTime\r\n        this.$store.dispatch('createEventExact', payload)\r\n      }\r\n    },\r\n    /* Called when a key is pressed on the create modal input. */\r\n    checkTitleInput: function() {\r\n      /*\r\n        If the user has tried to create a timeline that has less than 5 characters\r\n        then the warning gets shown.\r\n        This automatically hides the warning once they have entered at least 5 characters.\r\n      */\r\n      if (this.showTitleWarning === true) {\r\n        if (validTitle(this.newEventTitle)) {\r\n          this.showTitleWarning = false\r\n        }\r\n      }\r\n    },\r\n    checkInput(id) {\r\n      var el = document.getElementById(id)\r\n      if (el.style.border === \"1px solid red\") {\r\n        el.style.border = \"\"\r\n      }\r\n    },\r\n    changeTimelineTitle() {\r\n      if (!validTitle(this.newTimelineTitle)) {\r\n        document.getElementById('title-input').focus()\r\n        this.showTitleWarning = true\r\n        return\r\n      }\r\n      this.closeModal()\r\n      var payload = {\r\n        id: this.timeline.id,\r\n        title: this.newTimelineTitle\r\n      }\r\n      this.$store.dispatch('changeTimelineTitle', payload)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '../../assets/styles/theme.scss';\r\n@import '../../assets/styles/main.scss';\r\n\r\n.timeline {\r\n  padding-top: 20px;\r\n  @media screen and (max-width: 720px) {\r\n    .timeline-buttons {\r\n      &:nth-child(n+2) {margin-top: 10px;}\r\n    }\r\n    .timeline-details {overflow: auto;}\r\n  }\r\n  @media screen and (min-width: 720px) {\r\n    .timeline-details {overflow: hidden;}\r\n  }\r\n  .timeline-buttons button {width: 100%;}\r\n  .timeline-details {\r\n    h1, h3 {\r\n      // font-size: 2.5em;\r\n      display:inline;\r\n      &:last-child {\r\n        &::before{\r\n          content: ' - '\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n#timeline-modal {\r\n  #title-input {\r\n    background-color: white;\r\n    border-bottom: 2px solid #EEEEEE;\r\n  }\r\n  #title-alert {\r\n    width: 100%;\r\n  }\r\n  #description-input {\r\n    margin-top: 20px;\r\n    border: 1px solid #38474E;\r\n  }\r\n  .modal-half {padding: 30px;}\r\n}\r\n</style>\r\n"]}]}