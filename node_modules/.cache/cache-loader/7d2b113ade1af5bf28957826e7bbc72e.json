{"remainingRequest":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\chris\\Desktop\\aileron\\node_modules\\vue-loader\\lib\\selector.js?type=script&index=0!C:\\Users\\chris\\Desktop\\aileron\\src\\components\\register\\register.vue","dependencies":[{"path":"C:\\Users\\chris\\Desktop\\aileron\\src\\components\\register\\register.vue","mtime":1522242524633},{"path":"C:\\Users\\chris\\Desktop\\aileron\\package.json","mtime":1522176194972},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1520545180302},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\vue-loader\\lib\\selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport aSelectionHandler from '../selection-handler/selection-handler.vue';\nimport { formatDate, validTitle } from '../../scripts/script';\n/*\r\n  The columns of the table.\r\n*/\n\nvar fields = [{\n  key: 'title',\n  sortable: true\n}, {\n  key: 'date',\n  sortable: true,\n  formatter: 'formatDate'\n}];\n/*\r\nDefault sort.\r\n*/\n\nvar sort = {\n  by: 'date',\n  desc: false\n};\n\nfunction setSort(by, desc) {\n  sort.by = by;\n  sort.desc = desc;\n}\n\nfunction clearSort() {\n  sort.by = '';\n  sort.desc = '';\n}\n\nvar lastSelected = {};\n\nfunction selectRow(item) {\n  item.selected = true, item._rowVariant = 'select';\n  lastSelected = item;\n}\n\nfunction deselectRow(item) {\n  item.selected = false, item._rowVariant = '';\n}\n\nexport default {\n  name: 'aRegister',\n  components: {\n    aSelectionHandler: aSelectionHandler\n  },\n  data: function data() {\n    return {\n      fields: fields,\n      sort: sort,\n      newTimelineTitle: '',\n      showTitleWarning: false,\n      modal: false,\n      modalTitle: '',\n      modalType: '',\n      formatDate: formatDate\n    };\n  },\n  computed: {\n    timelines: function timelines() {\n      return this.$store.state.timelines;\n    },\n    selectCount: function selectCount() {\n      return this.$store.getters.selectedTimelines.length;\n    }\n  },\n  methods: {\n    /* Clear all selected. */\n    clearSelected: function clearSelected() {\n      for (var i = 0; i < this.$store.state.timelines.length; i++) {\n        var timeline = this.$store.state.timelines[i];\n        timeline.selected = false;\n        timeline._rowVariant = '';\n      }\n    },\n\n    /* Select rows between 2 rows when shift click. */\n    selectBetweenRows: function selectBetweenRows(iStart) {\n      var timelines = this.$store.state.timelines;\n      var iEnd = timelines.indexOf(lastSelected);\n\n      for (var i = Math.min(iStart, iEnd); i < Math.max(iStart, iEnd); i++) {\n        timelines[i].selected = true;\n        timelines[i]._rowVariant = 'select';\n      }\n    },\n\n    /* Called when the cancel button is clicked on the selection-handler. */\n    cancel: function cancel() {\n      this.clearSelected();\n    },\n\n    /*\r\n      By default the b-table sort just loops between ascending and descending.\r\n      By checking when sorted this can turn sorting off on a column every third click.\r\n    */\n    sortChanged: function sortChanged(ctx) {\n      if (ctx.sortBy === sort.by && ctx.sortDesc === false && sort.desc === true) {\n        clearSort();\n      } else {\n        setSort(ctx.sortBy, ctx.sortDesc);\n      }\n    },\n\n    /*\r\n      Deals with selection and deselction of rows.\r\n      There must have been an easier way to do this.\r\n    */\n    rowClicked: function rowClicked(item, index, event) {\n      if (item.selected) {\n        if (event.ctrlKey) {\n          deselectRow(item);\n        } else if (!event.shiftKey) {\n          if (this.selectCount > 1) {\n            this.clearSelected();\n            selectRow(item);\n          } else {\n            deselectRow(item);\n          }\n        }\n      } else {\n        if (event.ctrlKey) {\n          selectRow(item);\n        } else if (event.shiftKey) {\n          if (this.selectCount > 0) {\n            this.selectBetweenRows(index);\n          }\n\n          selectRow(item);\n        } else {\n          if (this.selectCount > 0) {\n            this.clearSelected();\n          }\n\n          selectRow(item);\n        }\n      }\n    },\n\n    /* When a row is doulbe clicked, open that timeline. */\n    openTimeline: function openTimeline(item) {\n      this.$store.commit('setCurrentTimeline', item);\n      this.$router.push({\n        name: 'TIMELINE'\n      });\n    },\n    createTimeline: function createTimeline() {\n      var _this = this;\n\n      if (!validTitle(this.newTimelineTitle)) {\n        document.getElementById('titleInput').focus();\n        this.showTitleWarning = true;\n        return;\n      }\n\n      this.closeModal();\n      this.$store.dispatch('createTimeline', this.newTimelineTitle).then(function (item) {\n        _this.openTimeline(item);\n      });\n    },\n    deleteTimeline: function deleteTimeline() {\n      this.closeModal();\n      this.$store.dispatch('deleteSelectedTimelines');\n    },\n    changeTitle: function changeTitle() {\n      if (!validTitle(this.newTimelineTitle)) {\n        document.getElementById('titleInput').focus();\n        this.showTitleWarning = true;\n        return;\n      }\n\n      this.closeModal();\n      this.$store.dispatch('changeTimelineTitle', this.newTimelineTitle);\n    },\n\n    /* Called when a key is pressed on the create modal input. */\n    checkTitleInput: function checkTitleInput() {\n      /*\r\n        If the user has tried to create a timeline that has less than 5 characters\r\n        then the warning gets shown.\r\n        This automatically hides the warning once they have entered at least 5 characters.\r\n      */\n      if (this.showTitleWarning === true) {\n        if (validTitle(this.newTimelineTitle)) {\n          this.showTitleWarning = false;\n        }\n      }\n    },\n    openModal: function openModal(type) {\n      this.modal = true;\n      this.modalType = type;\n    },\n    closeModal: function closeModal() {\n      this.modal = !this.modal;\n    },\n    modalOpened: function modalOpened() {\n      if (this.modalType === \"createTimeline\") {\n        document.getElementById('titleInput').focus();\n        this.modalTitle = \"Create\";\n      } else if (this.modalType === \"deleteTimeline\") {\n        this.modalTitle = \"Delete\";\n      } else if (this.modalType === \"editTitle\") {\n        document.getElementById('titleInput').focus();\n        this.modalTitle = \"Edit\";\n      }\n    },\n    modalClosed: function modalClosed() {\n      if (this.modalType === \"createTimeline\" || this.modalType === \"editTitle\") {\n        this.clearSelected();\n        this.newTimelineTitle = '';\n        this.showTitleWarning = false;\n      }\n\n      this.modalType = '';\n      this.modalTitle = '';\n    }\n  }\n};",{"version":3,"sources":["register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AAEA,AACA,AACA;;;;AACA;;YAEA;CADA;;;aAEA;;AACA,AACA,AACA;;;;AACA;MAEA;QACA;AAFA;;AAGA,2BACA;YACA;cACA;;;AACA,qBACA;YACA;cACA;;;AAEA;;AAEA,yBACA;kBACA,yBACA;iBACA;;;AACA,2BACA;kBACA,0BACA;;;AAEA;QAEA;;AAEA,AACA;AAFA;wBAGA;;AAEA;AACA;wBACA;wBACA;aACA;kBACA;iBACA;AACA,AACA;AATA;AAUA;;oCAEA;+BACA;AACA;wCACA;mDACA;AACA,AACA;AAPA;;AASA;4CACA;mEACA;mDACA;4BACA;+BACA;AACA;AACA;;AACA;0DACA;wCACA;mCACA;;4EACA;gCACA;mCACA;AACA;AACA;;AACA;8BACA;WACA;AACA;;AACA,AACA,AACA,AACA;;;;2CACA;kFACA;AACA;aACA;gCACA;AACA;AACA;;AACA,AACA,AACA,AACA;;;;wDACA;yBACA;2BACA;sBACA;oCACA;oCACA;iBACA;sBACA;iBACA;wBACA;AACA;AACA;aACA;2BACA;oBACA;mCACA;oCACA;mCACA;AACA;;oBACA;eACA;oCACA;iBACA;AACA;;oBACA;AACA;AACA;AACA;;AACA;8CACA;+CACA;;cACA;;AACA;;AACA;;8CACA;8CACA;gCACA;AACA;AACA;;WACA;yFACA;2BACA;AACA;AACA;8CACA;WACA;2BACA;AACA;wCACA;8CACA;8CACA;gCACA;AACA;AACA;;WACA;uDACA;AACA;;AACA;gDACA;AACA,AACA,AACA,AACA,AACA;;;;;0CACA;+CACA;kCACA;AACA;AACA;AACA;wCACA;mBACA;uBACA;AACA;sCACA;yBACA;AACA;wCACA;+CACA;8CACA;0BACA;sDACA;0BACA;iDACA;8CACA;0BACA;AACA;AACA;wCACA;iFACA;aACA;gCACA;gCACA;AACA;;uBACA;wBACA;AACA,AACA;AAtIA;AAzBA","sourceRoot":"src\\components\\register","sourcesContent":["<template lang=\"html\">\r\n  <div>\r\n    <b-row class=\"register\" align-v=\"center\">\r\n      <b-col></b-col> <!-- used to center the table -->\r\n      <b-col md=\"11\">\r\n        <b-btn class=\"btn-round\" variant=\"create\" @click=\"openModal('createTimeline')\" style=\"float: right;\">+</b-btn>\r\n        <b-table :items=\"timelines\"\r\n                  bordered:false\r\n                  :sort-by.sync=\"sort.by\"\r\n                  :sort-desc.sync=\"sort.desc\"\r\n                  :fields=\"fields\"\r\n                  @row-clicked=\"rowClicked\"\r\n                  @sort-changed=\"sortChanged\"\r\n                  @row-dblclicked=\"openTimeline\"\r\n                  >\r\n        </b-table>\r\n      </b-col>\r\n      <b-col></b-col> <!-- used to center the table -->\r\n    </b-row>\r\n    <a-selection-handler :select-count=\"selectCount\" @del=\"openModal('deleteTimeline')\" @cancel=\"cancel\" @edit=\"openModal('editTitle')\"></a-selection-handler>\r\n    <b-modal  v-model=\"modal\" :title=\"modalTitle\" @shown=\"modalOpened\" @hidden=\"modalClosed\">\r\n      <b-container fluid>\r\n        <b-row>\r\n          <b-col v-if=\"modalType === 'createTimeline'\">\r\n            <input type=\"text\" v-model=\"newTimelineTitle\" @keyup.enter=\"createTimeline\" @keyup=\"checkTitleInput\" placeholder=\"Enter title\" id=\"titleInput\" />\r\n            <b-alert variant=\"danger\" :show=\"showTitleWarning\">Title must be at least 5 characters long</b-alert>\r\n          </b-col>\r\n          <b-col v-else-if=\"modalType === 'deleteTimeline'\">\r\n            <p>\r\n              Are you sure you wish to delete selected timelines?\r\n            </p>\r\n          </b-col>\r\n          <b-col v-else-if=\"modalType === 'editTitle'\">\r\n            <input type=\"text\" v-model=\"newTimelineTitle\" @keyup.enter=\"changeTitle\" @keyup=\"checkTitleInput\" placeholder=\"Enter new title\" id=\"titleInput\" />\r\n            <b-alert variant=\"danger\" :show=\"showTitleWarning\">Title must be at least 5 characters long</b-alert>\r\n          </b-col>\r\n        </b-row>\r\n      </b-container>\r\n      <div slot=\"modal-footer\" class=\"w-100\">\r\n        <b-btn class=\"float-left\" @click=\"closeModal\">CANCEL</b-btn>\r\n        <b-btn v-if=\"modalType === 'createTimeline'\" class=\"float-right\" @click=\"createTimeline\">CREATE</b-btn>\r\n        <b-btn v-else-if=\"modalType === 'deleteTimeline'\" class=\"float-right\" @click=\"deleteTimeline\">DELETE</b-btn>\r\n        <b-btn v-else-if=\"modalType === 'editTitle'\" class=\"float-right\" @click=\"changeTitle\">SAVE</b-btn>\r\n      </div>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport aSelectionHandler from '../selection-handler/selection-handler.vue'\r\nimport {formatDate, validTitle} from '../../scripts/script'\r\n\r\n/*\r\n  The columns of the table.\r\n*/\r\nconst fields = [\r\n  { key: 'title', sortable: true},\r\n  { key: 'date', sortable: true, formatter: 'formatDate' }\r\n]\r\n/*\r\nDefault sort.\r\n*/\r\nvar sort = {\r\n  by: 'date',\r\n  desc: false\r\n}\r\nfunction setSort(by, desc) {\r\n  sort.by = by\r\n  sort.desc = desc\r\n}\r\nfunction clearSort() {\r\n  sort.by = ''\r\n  sort.desc = ''\r\n}\r\n\r\nvar lastSelected = {}\r\n\r\nfunction selectRow(item) {\r\n  item.selected = true,\r\n  item._rowVariant = 'select'\r\n  lastSelected = item\r\n}\r\nfunction deselectRow(item) {\r\n  item.selected = false,\r\n  item._rowVariant = ''\r\n}\r\n\r\nexport default {\r\n  name: 'aRegister',\r\n  components: {\r\n    aSelectionHandler\r\n  },\r\n  data() {\r\n    return {\r\n      fields,\r\n      sort,\r\n      newTimelineTitle: '',\r\n      showTitleWarning: false,\r\n      modal: false,\r\n      modalTitle: '',\r\n      modalType: '',\r\n      formatDate\r\n    }\r\n  },\r\n  computed: {\r\n    timelines() {\r\n      return this.$store.state.timelines\r\n    },\r\n    selectCount() {\r\n      return this.$store.getters.selectedTimelines.length\r\n    }\r\n  },\r\n  methods: {\r\n    /* Clear all selected. */\r\n    clearSelected: function() {\r\n      for (var i = 0; i < this.$store.state.timelines.length; i++) {\r\n        var timeline = this.$store.state.timelines[i]\r\n        timeline.selected = false\r\n        timeline._rowVariant = ''\r\n      }\r\n    },\r\n    /* Select rows between 2 rows when shift click. */\r\n    selectBetweenRows: function(iStart) {\r\n      let timelines = this.$store.state.timelines\r\n      var iEnd = timelines.indexOf(lastSelected)\r\n      for (var i = Math.min(iStart, iEnd); i < Math.max(iStart, iEnd); i++) {\r\n        timelines[i].selected = true\r\n        timelines[i]._rowVariant = 'select'\r\n      }\r\n    },\r\n    /* Called when the cancel button is clicked on the selection-handler. */\r\n    cancel: function() {\r\n      this.clearSelected()\r\n    },\r\n    /*\r\n      By default the b-table sort just loops between ascending and descending.\r\n      By checking when sorted this can turn sorting off on a column every third click.\r\n    */\r\n    sortChanged: function(ctx) {\r\n      if (ctx.sortBy === sort.by && ctx.sortDesc === false && sort.desc === true) {\r\n        clearSort()\r\n      } else {\r\n        setSort(ctx.sortBy, ctx.sortDesc)\r\n      }\r\n    },\r\n    /*\r\n      Deals with selection and deselction of rows.\r\n      There must have been an easier way to do this.\r\n    */\r\n    rowClicked: function(item, index, event) {\r\n      if (item.selected) {\r\n        if (event.ctrlKey) {\r\n          deselectRow(item)\r\n        } else if (!event.shiftKey) {\r\n          if (this.selectCount > 1) {\r\n            this.clearSelected()\r\n            selectRow(item)\r\n          } else {\r\n            deselectRow(item)\r\n          }\r\n        }\r\n      } else {\r\n        if (event.ctrlKey) {\r\n          selectRow(item)\r\n        } else if (event.shiftKey) {\r\n          if (this.selectCount > 0) {\r\n            this.selectBetweenRows(index)\r\n          }\r\n          selectRow(item)\r\n        } else {\r\n          if (this.selectCount > 0) {\r\n            this.clearSelected()\r\n          }\r\n          selectRow(item)\r\n        }\r\n      }\r\n    },\r\n    /* When a row is doulbe clicked, open that timeline. */\r\n    openTimeline: function(item) {\r\n      this.$store.commit('setCurrentTimeline', item)\r\n      this.$router.push({name: 'TIMELINE'})\r\n    },\r\n    createTimeline() {\r\n      if (!validTitle(this.newTimelineTitle)) {\r\n        document.getElementById('titleInput').focus()\r\n        this.showTitleWarning = true\r\n        return\r\n      }\r\n      this.closeModal()\r\n      this.$store.dispatch('createTimeline', this.newTimelineTitle).then(item => {\r\n        this.openTimeline(item)\r\n      })\r\n    },\r\n    deleteTimeline: function() {\r\n      this.closeModal()\r\n      this.$store.dispatch('deleteSelectedTimelines')\r\n    },\r\n    changeTitle: function() {\r\n      if (!validTitle(this.newTimelineTitle)) {\r\n        document.getElementById('titleInput').focus()\r\n        this.showTitleWarning = true\r\n        return\r\n      }\r\n      this.closeModal()\r\n      this.$store.dispatch('changeTimelineTitle', this.newTimelineTitle)\r\n    },\r\n    /* Called when a key is pressed on the create modal input. */\r\n    checkTitleInput: function() {\r\n      /*\r\n        If the user has tried to create a timeline that has less than 5 characters\r\n        then the warning gets shown.\r\n        This automatically hides the warning once they have entered at least 5 characters.\r\n      */\r\n      if (this.showTitleWarning === true) {\r\n        if (validTitle(this.newTimelineTitle)) {\r\n          this.showTitleWarning = false\r\n        }\r\n      }\r\n    },\r\n    openModal: function(type) {\r\n      this.modal = true\r\n      this.modalType = type\r\n    },\r\n    closeModal: function() {\r\n      this.modal = !this.modal\r\n    },\r\n    modalOpened: function() {\r\n      if (this.modalType === \"createTimeline\") {\r\n        document.getElementById('titleInput').focus()\r\n        this.modalTitle = \"Create\"\r\n      } else if (this.modalType === \"deleteTimeline\") {\r\n        this.modalTitle = \"Delete\"\r\n      } else if (this.modalType === \"editTitle\") {\r\n        document.getElementById('titleInput').focus()\r\n        this.modalTitle = \"Edit\"\r\n      }\r\n    },\r\n    modalClosed: function() {\r\n      if (this.modalType === \"createTimeline\" || this.modalType === \"editTitle\") {\r\n        this.clearSelected()\r\n        this.newTimelineTitle = ''\r\n        this.showTitleWarning = false\r\n      }\r\n      this.modalType = ''\r\n      this.modalTitle = ''\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '../../assets/styles/theme.scss';\r\n@import '../../assets/styles/main.scss';\r\n\r\n.register {\r\n  padding-top: 20px;\r\n  table {\r\n    background-color: $register-bg;\r\n    color: $text;\r\n    th {\r\n      background-color: $background;\r\n      border: none;\r\n      @media only screen and (max-width: 576px) {\r\n        font-size: 2em;\r\n      }\r\n      font-size: 3em;\r\n      outline: none;\r\n    }\r\n    td {\r\n      border: none;\r\n      font-size: 1.5em;\r\n    }\r\n    .table-select {\r\n      background-color: $select;\r\n      color: white;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}