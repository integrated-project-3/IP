{"remainingRequest":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\chris\\Desktop\\aileron\\node_modules\\eslint-loader\\index.js??ref--18-0!C:\\Users\\chris\\Desktop\\aileron\\src\\scripts\\script.js","dependencies":[{"path":"C:\\Users\\chris\\Desktop\\aileron\\src\\scripts\\script.js","mtime":1521668954817},{"path":"C:\\Users\\chris\\Desktop\\aileron\\package.json","mtime":1521671277546},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1520545180302},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\eslint-loader\\index.js","mtime":1519638534000}],"contextDependencies":[],"result":["function formatDate(ticks) {\n  var epochTicks = 621355968000000000;\n  var ticksSinceEpoch = ticks - epochTicks;\n  var millisecondsSinceEpoch = ticksSinceEpoch / 10000;\n  var date = new Date(millisecondsSinceEpoch);\n  return date.toLocaleDateString();\n}\n\nfunction formatAttachmentTime(dateTime) {\n  if (dateTime.length === 16) {\n    return dateTime.substring(11, 17);\n  }\n\n  return \"Time not available\";\n}\n\nexport { formatDate, formatAttachmentTime };",{"version":3,"sources":["src\\scripts\\script.js"],"names":["formatDate","ticks","epochTicks","ticksSinceEpoch","millisecondsSinceEpoch","date","Date","toLocaleDateString","formatAttachmentTime","dateTime","length","substring"],"mappings":"AAAA,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAMC,aAAa,kBAAnB;AACA,MAAMC,kBAAkBF,QAAQC,UAAhC;AACA,MAAME,yBAAyBD,kBAAkB,KAAjD;AACA,MAAME,OAAO,IAAIC,IAAJ,CAASF,sBAAT,CAAb;AACA,SAAOC,KAAKE,kBAAL,EAAP;AACD;;AAED,SAASC,oBAAT,CAA8BC,QAA9B,EAAwC;AACtC,MAAIA,SAASC,MAAT,KAAoB,EAAxB,EAA4B;AAC1B,WAAOD,SAASE,SAAT,CAAmB,EAAnB,EAAsB,EAAtB,CAAP;AACD;;AACD,SAAO,oBAAP;AACD;;AAED,SAAQX,UAAR,EAAoBQ,oBAApB","file":"C:\\Users\\chris\\Desktop\\aileron\\src\\scripts\\script.js","sourceRoot":"C:\\Users\\chris\\Desktop\\aileron","sourcesContent":["function formatDate(ticks) {\r\n  const epochTicks = 621355968000000000;\r\n  const ticksSinceEpoch = ticks - epochTicks;\r\n  const millisecondsSinceEpoch = ticksSinceEpoch / 10000;\r\n  const date = new Date(millisecondsSinceEpoch);\r\n  return date.toLocaleDateString()\r\n}\r\n\r\nfunction formatAttachmentTime(dateTime) {\r\n  if (dateTime.length === 16) {\r\n    return dateTime.substring(11,17)\r\n  }\r\n  return \"Time not available\"\r\n}\r\n\r\nexport {formatDate, formatAttachmentTime}\r\n"]}]}