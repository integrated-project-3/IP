{"remainingRequest":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\chris\\Desktop\\aileron\\node_modules\\eslint-loader\\index.js??ref--18-0!C:\\Users\\chris\\Desktop\\aileron\\src\\scripts\\script.js","dependencies":[{"path":"C:\\Users\\chris\\Desktop\\aileron\\src\\scripts\\script.js","mtime":1522779772783},{"path":"C:\\Users\\chris\\Desktop\\aileron\\package.json","mtime":1522176194972},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1520545180302},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\eslint-loader\\index.js","mtime":1519638534000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.regexp.replace\";\nexport function formatDate(ticks) {\n  var epochTicks = 621355968000000000;\n  var ticksSinceEpoch = ticks - epochTicks;\n  var millisecondsSinceEpoch = ticksSinceEpoch / 10000;\n  var date = new Date(millisecondsSinceEpoch);\n  return date.toLocaleDateString();\n}\nexport function formatEventTime(dateTime) {\n  if (dateTime.length === 16) {\n    return dateTime.substring(11, 17);\n  }\n\n  return \"Time not available\";\n}\nexport function formatEventDate(dateTime) {\n  if (dateTime.length === 16) {\n    var day = dateTime.substr(8, 2);\n    var month = dateTime.substr(5, 2);\n    var year = dateTime.substr(0, 4);\n    return day + '/' + month + '/' + year;\n  }\n\n  return \"Date not available\";\n}\nexport function validTitle(str) {\n  var s = str.replace(/\\s/g, '');\n\n  if (s.length >= 5) {\n    return true;\n  }\n\n  return false;\n}\n\nArray.prototype.diff = function (a) {\n  return this.filter(function (i) {\n    return a.indexOf(i) < 0;\n  });\n};\n\nexport function sortEvents(events) {\n  // seperate events into 2 lists, one for events with times, one for the rest.\n  // need this for sorting by time.\n  var eventsWithTime = events.filter(function (event) {\n    return event.EventDateTime != 'n/a';\n  });\n  var eventsWithoutTime = events.diff(eventsWithTime); // events = []\n\n  var sortedEvents = eventsWithTime.sort(function (a, b) {\n    a = new Date(a.EventDateTime);\n    b = new Date(b.EventDateTime);\n    return a - b;\n  }); // for (var i = 0; i < eventsWithoutTime.length; i++) {\n  //   var index = sortedEvents.map(function(e) {if (e.LinkedTimelineEventIds != null) if(e.LinkedTimelineEventIds[0] != null) return e.LinkedTimelineEventIds[0]}).indexOf(eventsWithoutTime[i].Id) +1\n  //   if (index === 0) index = sortedEvents.map(function(e) {return e.Id}).indexOf(eventsWithoutTime[i].LinkedTimelineEventIds[0])\n  //   sortedEvents.splice(index, 0, eventsWithoutTime[i])\n  // }\n  // for (var i = 0; i < eventsWithoutTime.length; i++) {\n  //   var index = sortedEvents.map(function(e) {if (e.LinkedTimelineEventIds != null) if(e.LinkedTimelineEventIds[0] != null) return e.LinkedTimelineEventIds[0]}).indexOf(eventsWithoutTime[i].Id) +1\n  //   if (index === 0) {\n  //     if (eventsWithoutTime[i].LinkedTimelineEventIds != null) {\n  //       if (eventsWithoutTime[i].LinkedTimelineEventIds[0] != null) {\n  //         index = sortedEvents.map(function(e) {return e.Id}).indexOf(eventsWithoutTime[i].LinkedTimelineEventIds[0])\n  //       } else {\n  //         break\n  //       }\n  //     } else {\n  //       break\n  //     }\n  //   }\n  //   // if (index != -1)\n  //     sortedEvents.splice(index, 0, eventsWithoutTime[i])\n  // }\n  // var i = 0\n  // while (eventsWithoutTime.length > 0) {\n  //   console.log(\"1: \" + i)\n  //   console.log(\"1: \" + eventsWithoutTime)\n  //   for (var j = 0; j < sortedEvents.length; j++) {\n  //     var index = sortedEvents.map(function(e) {if (e.LinkedTimelineEventIds != null) if(e.LinkedTimelineEventIds[0] != null) return e.LinkedTimelineEventIds[0]}).indexOf(eventsWithoutTime[i].Id) +1\n  //     if (index === 0) {\n  //       if (eventsWithoutTime[i].LinkedTimelineEventIds != null) {\n  //         if (eventsWithoutTime[i].LinkedTimelineEventIds[0] != null) {\n  //           index = sortedEvents.map(function(e) {return e.Id}).indexOf(eventsWithoutTime[i].LinkedTimelineEventIds[0])\n  //         }\n  //       }\n  //     }\n  //     if (index != -1) {\n  //       sortedEvents.splice(index, 0, eventsWithoutTime.splice(i,1))\n  //       break\n  //     }\n  //   }\n  //   // i += 1\n  //   console.log(\"2: \" + i)\n  //   console.log(\"2: \" + eventsWithoutTime)\n  //   // if (i === eventsWithoutTime.length) i = 0\n  // }\n\n  while (eventsWithoutTime.length != 0) {\n    for (var i = eventsWithoutTime.length - 1; i >= 0; i--) {\n      var index = sortedEvents.map(function (e) {\n        if (e.LinkedTimelineEventIds != null) if (e.LinkedTimelineEventIds[0] != null) return e.LinkedTimelineEventIds[0];\n      }).indexOf(eventsWithoutTime[i].Id) + 1;\n\n      if (index === 0) {\n        if (eventsWithoutTime[i].LinkedTimelineEventIds != null) {\n          if (eventsWithoutTime[i].LinkedTimelineEventIds[0] != null) {\n            index = sortedEvents.map(function (e) {\n              return e.Id;\n            }).indexOf(eventsWithoutTime[i].LinkedTimelineEventIds[0]);\n          } else {\n            index = -1;\n          }\n        } else {\n          index = -1;\n        }\n      }\n\n      if (index != -1) {\n        var ev = eventsWithoutTime.splice(i, 1)[0];\n        sortedEvents.splice(index, 0, ev);\n      }\n    }\n  }\n\n  return sortedEvents;\n}",{"version":3,"sources":["src\\scripts\\script.js"],"names":["formatDate","ticks","epochTicks","ticksSinceEpoch","millisecondsSinceEpoch","date","Date","toLocaleDateString","formatEventTime","dateTime","length","substring","formatEventDate","day","substr","month","year","validTitle","str","s","replace","Array","prototype","diff","a","filter","i","indexOf","sortEvents","events","eventsWithTime","event","EventDateTime","eventsWithoutTime","sortedEvents","sort","b","index","map","e","LinkedTimelineEventIds","Id","ev","splice"],"mappings":";;AAAA,OAAO,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AAChC,MAAMC,aAAa,kBAAnB;AACA,MAAMC,kBAAkBF,QAAQC,UAAhC;AACA,MAAME,yBAAyBD,kBAAkB,KAAjD;AACA,MAAME,OAAO,IAAIC,IAAJ,CAASF,sBAAT,CAAb;AACA,SAAOC,KAAKE,kBAAL,EAAP;AACD;AAED,OAAO,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AACxC,MAAIA,SAASC,MAAT,KAAoB,EAAxB,EAA4B;AAC1B,WAAOD,SAASE,SAAT,CAAmB,EAAnB,EAAsB,EAAtB,CAAP;AACD;;AACD,SAAO,oBAAP;AACD;AAED,OAAO,SAASC,eAAT,CAAyBH,QAAzB,EAAmC;AACxC,MAAIA,SAASC,MAAT,KAAoB,EAAxB,EAA4B;AAC1B,QAAIG,MAAMJ,SAASK,MAAT,CAAgB,CAAhB,EAAkB,CAAlB,CAAV;AACA,QAAIC,QAAQN,SAASK,MAAT,CAAgB,CAAhB,EAAkB,CAAlB,CAAZ;AACA,QAAIE,OAAOP,SAASK,MAAT,CAAgB,CAAhB,EAAkB,CAAlB,CAAX;AACA,WAAOD,MAAM,GAAN,GAAYE,KAAZ,GAAoB,GAApB,GAA0BC,IAAjC;AACD;;AACD,SAAO,oBAAP;AACD;AAED,OAAO,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AAC9B,MAAIC,IAAID,IAAIE,OAAJ,CAAY,KAAZ,EAAkB,EAAlB,CAAR;;AACA,MAAID,EAAET,MAAF,IAAY,CAAhB,EAAmB;AACjB,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD;;AAEDW,MAAMC,SAAN,CAAgBC,IAAhB,GAAuB,UAASC,CAAT,EAAY;AACjC,SAAO,KAAKC,MAAL,CAAY,UAASC,CAAT,EAAY;AAAC,WAAOF,EAAEG,OAAF,CAAUD,CAAV,IAAe,CAAtB;AAAwB,GAAjD,CAAP;AACD,CAFD;;AAIA,OAAO,SAASE,UAAT,CAAoBC,MAApB,EAA4B;AAEjC;AACA;AACA,MAAIC,iBAAiBD,OAAOJ,MAAP,CAAc;AAAA,WAASM,MAAMC,aAAN,IAAuB,KAAhC;AAAA,GAAd,CAArB;AACA,MAAIC,oBAAoBJ,OAAON,IAAP,CAAYO,cAAZ,CAAxB,CALiC,CAMjC;;AAEA,MAAII,eAAeJ,eAAeK,IAAf,CAAoB,UAASX,CAAT,EAAWY,CAAX,EAAc;AACnDZ,QAAI,IAAIlB,IAAJ,CAASkB,EAAEQ,aAAX,CAAJ;AACAI,QAAI,IAAI9B,IAAJ,CAAS8B,EAAEJ,aAAX,CAAJ;AACA,WAAOR,IAAIY,CAAX;AACD,GAJkB,CAAnB,CARiC,CAcjC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAOH,kBAAkBvB,MAAlB,IAA4B,CAAnC,EAAsC;AACpC,SAAK,IAAIgB,IAAIO,kBAAkBvB,MAAlB,GAAyB,CAAtC,EAAyCgB,KAAK,CAA9C,EAAiDA,GAAjD,EAAsD;AACpD,UAAIW,QAAQH,aAAaI,GAAb,CAAiB,UAASC,CAAT,EAAY;AAAC,YAAIA,EAAEC,sBAAF,IAA4B,IAAhC,EAAsC,IAAGD,EAAEC,sBAAF,CAAyB,CAAzB,KAA+B,IAAlC,EAAwC,OAAOD,EAAEC,sBAAF,CAAyB,CAAzB,CAAP;AAAmC,OAA/I,EAAiJb,OAAjJ,CAAyJM,kBAAkBP,CAAlB,EAAqBe,EAA9K,IAAmL,CAA/L;;AACA,UAAIJ,UAAU,CAAd,EAAiB;AACf,YAAIJ,kBAAkBP,CAAlB,EAAqBc,sBAArB,IAA+C,IAAnD,EAAyD;AACvD,cAAIP,kBAAkBP,CAAlB,EAAqBc,sBAArB,CAA4C,CAA5C,KAAkD,IAAtD,EAA4D;AAC1DH,oBAAQH,aAAaI,GAAb,CAAiB,UAASC,CAAT,EAAY;AAAC,qBAAOA,EAAEE,EAAT;AAAY,aAA1C,EAA4Cd,OAA5C,CAAoDM,kBAAkBP,CAAlB,EAAqBc,sBAArB,CAA4C,CAA5C,CAApD,CAAR;AACD,WAFD,MAEO;AACLH,oBAAQ,CAAC,CAAT;AACD;AACF,SAND,MAMO;AACLA,kBAAQ,CAAC,CAAT;AACD;AACF;;AACD,UAAIA,SAAS,CAAC,CAAd,EAAiB;AACf,YAAIK,KAAKT,kBAAkBU,MAAlB,CAAyBjB,CAAzB,EAA2B,CAA3B,EAA8B,CAA9B,CAAT;AACAQ,qBAAaS,MAAb,CAAoBN,KAApB,EAA2B,CAA3B,EAA8BK,EAA9B;AACD;AACF;AACF;;AAED,SAAOR,YAAP;AACD","file":"C:\\Users\\chris\\Desktop\\aileron\\src\\scripts\\script.js","sourceRoot":"C:\\Users\\chris\\Desktop\\aileron","sourcesContent":["export function formatDate(ticks) {\r\n  const epochTicks = 621355968000000000;\r\n  const ticksSinceEpoch = ticks - epochTicks;\r\n  const millisecondsSinceEpoch = ticksSinceEpoch / 10000;\r\n  const date = new Date(millisecondsSinceEpoch);\r\n  return date.toLocaleDateString()\r\n}\r\n\r\nexport function formatEventTime(dateTime) {\r\n  if (dateTime.length === 16) {\r\n    return dateTime.substring(11,17)\r\n  }\r\n  return \"Time not available\"\r\n}\r\n\r\nexport function formatEventDate(dateTime) {\r\n  if (dateTime.length === 16) {\r\n    var day = dateTime.substr(8,2)\r\n    var month = dateTime.substr(5,2)\r\n    var year = dateTime.substr(0,4)\r\n    return day + '/' + month + '/' + year\r\n  }\r\n  return \"Date not available\"\r\n}\r\n\r\nexport function validTitle(str) {\r\n  var s = str.replace(/\\s/g,'')\r\n  if (s.length >= 5) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nArray.prototype.diff = function(a) {\r\n  return this.filter(function(i) {return a.indexOf(i) < 0})\r\n}\r\n\r\nexport function sortEvents(events) {\r\n\r\n  // seperate events into 2 lists, one for events with times, one for the rest.\r\n  // need this for sorting by time.\r\n  var eventsWithTime = events.filter(event => event.EventDateTime != 'n/a')\r\n  var eventsWithoutTime = events.diff(eventsWithTime)\r\n  // events = []\r\n\r\n  var sortedEvents = eventsWithTime.sort(function(a,b) {\r\n    a = new Date(a.EventDateTime)\r\n    b = new Date(b.EventDateTime)\r\n    return a - b\r\n  })\r\n\r\n  // for (var i = 0; i < eventsWithoutTime.length; i++) {\r\n  //   var index = sortedEvents.map(function(e) {if (e.LinkedTimelineEventIds != null) if(e.LinkedTimelineEventIds[0] != null) return e.LinkedTimelineEventIds[0]}).indexOf(eventsWithoutTime[i].Id) +1\r\n  //   if (index === 0) index = sortedEvents.map(function(e) {return e.Id}).indexOf(eventsWithoutTime[i].LinkedTimelineEventIds[0])\r\n  //   sortedEvents.splice(index, 0, eventsWithoutTime[i])\r\n  // }\r\n\r\n  // for (var i = 0; i < eventsWithoutTime.length; i++) {\r\n  //   var index = sortedEvents.map(function(e) {if (e.LinkedTimelineEventIds != null) if(e.LinkedTimelineEventIds[0] != null) return e.LinkedTimelineEventIds[0]}).indexOf(eventsWithoutTime[i].Id) +1\r\n  //   if (index === 0) {\r\n  //     if (eventsWithoutTime[i].LinkedTimelineEventIds != null) {\r\n  //       if (eventsWithoutTime[i].LinkedTimelineEventIds[0] != null) {\r\n  //         index = sortedEvents.map(function(e) {return e.Id}).indexOf(eventsWithoutTime[i].LinkedTimelineEventIds[0])\r\n  //       } else {\r\n  //         break\r\n  //       }\r\n  //     } else {\r\n  //       break\r\n  //     }\r\n  //   }\r\n  //   // if (index != -1)\r\n  //     sortedEvents.splice(index, 0, eventsWithoutTime[i])\r\n  // }\r\n\r\n  // var i = 0\r\n  // while (eventsWithoutTime.length > 0) {\r\n  //   console.log(\"1: \" + i)\r\n  //   console.log(\"1: \" + eventsWithoutTime)\r\n  //   for (var j = 0; j < sortedEvents.length; j++) {\r\n  //     var index = sortedEvents.map(function(e) {if (e.LinkedTimelineEventIds != null) if(e.LinkedTimelineEventIds[0] != null) return e.LinkedTimelineEventIds[0]}).indexOf(eventsWithoutTime[i].Id) +1\r\n  //     if (index === 0) {\r\n  //       if (eventsWithoutTime[i].LinkedTimelineEventIds != null) {\r\n  //         if (eventsWithoutTime[i].LinkedTimelineEventIds[0] != null) {\r\n  //           index = sortedEvents.map(function(e) {return e.Id}).indexOf(eventsWithoutTime[i].LinkedTimelineEventIds[0])\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //     if (index != -1) {\r\n  //       sortedEvents.splice(index, 0, eventsWithoutTime.splice(i,1))\r\n  //       break\r\n  //     }\r\n  //   }\r\n  //   // i += 1\r\n  //   console.log(\"2: \" + i)\r\n  //   console.log(\"2: \" + eventsWithoutTime)\r\n  //   // if (i === eventsWithoutTime.length) i = 0\r\n  // }\r\n  while (eventsWithoutTime.length != 0) {\r\n    for (var i = eventsWithoutTime.length-1; i >= 0; i--) {\r\n      var index = sortedEvents.map(function(e) {if (e.LinkedTimelineEventIds != null) if(e.LinkedTimelineEventIds[0] != null) return e.LinkedTimelineEventIds[0]}).indexOf(eventsWithoutTime[i].Id) +1\r\n      if (index === 0) {\r\n        if (eventsWithoutTime[i].LinkedTimelineEventIds != null) {\r\n          if (eventsWithoutTime[i].LinkedTimelineEventIds[0] != null) {\r\n            index = sortedEvents.map(function(e) {return e.Id}).indexOf(eventsWithoutTime[i].LinkedTimelineEventIds[0])\r\n          } else {\r\n            index = -1\r\n          }\r\n        } else {\r\n          index = -1\r\n        }\r\n      }\r\n      if (index != -1) {\r\n        var ev = eventsWithoutTime.splice(i,1)[0]\r\n        sortedEvents.splice(index, 0, ev)\r\n      }\r\n    }\r\n  }\r\n\r\n  return sortedEvents\r\n}\r\n"]}]}