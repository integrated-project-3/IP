{"remainingRequest":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\chris\\Desktop\\aileron\\node_modules\\eslint-loader\\index.js??ref--18-0!C:\\Users\\chris\\Desktop\\aileron\\src\\scripts\\script.js","dependencies":[{"path":"C:\\Users\\chris\\Desktop\\aileron\\src\\scripts\\script.js","mtime":1521200819348},{"path":"C:\\Users\\chris\\Desktop\\aileron\\package.json","mtime":1521302404735},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1520545180302},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\eslint-loader\\index.js","mtime":1519638534000}],"contextDependencies":[],"result":["/*\r\n  Used to format the ticks returned by the API to readable string.\r\n  Could be done in the lambda before returning the data, however keeping the ticks\r\n  means that the date can be sorted correctly.\r\n*/\nfunction formatDate(ticks) {\n  var epochTicks = 621355968000000000;\n  var ticksSinceEpoch = ticks - epochTicks;\n  var millisecondsSinceEpoch = ticksSinceEpoch / 10000;\n  var date = new Date(millisecondsSinceEpoch);\n  return date.toLocaleDateString();\n}\n\nexport { formatDate };",{"version":3,"sources":["src\\scripts\\script.js"],"names":["formatDate","ticks","epochTicks","ticksSinceEpoch","millisecondsSinceEpoch","date","Date","toLocaleDateString"],"mappings":"AAAA;;;;;AAKA,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAMC,aAAa,kBAAnB;AACA,MAAMC,kBAAkBF,QAAQC,UAAhC;AACA,MAAME,yBAAyBD,kBAAkB,KAAjD;AACA,MAAME,OAAO,IAAIC,IAAJ,CAASF,sBAAT,CAAb;AACA,SAAOC,KAAKE,kBAAL,EAAP;AACD;;AAED,SAAQP,UAAR","file":"C:\\Users\\chris\\Desktop\\aileron\\src\\scripts\\script.js","sourceRoot":"C:\\Users\\chris\\Desktop\\aileron","sourcesContent":["/*\r\n  Used to format the ticks returned by the API to readable string.\r\n  Could be done in the lambda before returning the data, however keeping the ticks\r\n  means that the date can be sorted correctly.\r\n*/\r\nfunction formatDate(ticks) {\r\n  const epochTicks = 621355968000000000;\r\n  const ticksSinceEpoch = ticks - epochTicks;\r\n  const millisecondsSinceEpoch = ticksSinceEpoch / 10000;\r\n  const date = new Date(millisecondsSinceEpoch);\r\n  return date.toLocaleDateString()\r\n}\r\n\r\nexport {formatDate}\r\n"]}]}