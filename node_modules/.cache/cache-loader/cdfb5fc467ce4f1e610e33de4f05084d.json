{"remainingRequest":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\chris\\Desktop\\aileron\\node_modules\\vue-loader\\lib\\selector.js?type=script&index=0!C:\\Users\\chris\\Desktop\\aileron\\src\\components\\timeline\\timeline-events.vue","dependencies":[{"path":"C:\\Users\\chris\\Desktop\\aileron\\src\\components\\timeline\\timeline-events.vue","mtime":1522894104597},{"path":"C:\\Users\\chris\\Desktop\\aileron\\package.json","mtime":1522176194972},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1520545180302},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\vue-loader\\lib\\selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { formatEventTime, formatEventDate, sortEvents, validTitle } from '../../scripts/script';\nvar _drag = false;\nvar lastPos = [];\nvar pos = [];\nvar difference = [];\nvar scale = 1;\nexport default {\n  name: 'aEvents',\n  data: function data() {\n    return {\n      formatEventTime: formatEventTime,\n      formatEventDate: formatEventDate,\n      scale: scale,\n      selectedEvent: {\n        'Id': '',\n        'Title': '',\n        'EventDateTime': '',\n        'Description': '',\n        'IsDeleted': '',\n        'Location': '',\n        'LinkedTimelineEventIds': [],\n        'Attachments': []\n      },\n      modal: false,\n      modalTitle: '',\n      newEventTitle: '',\n      showTitleWarning: false,\n      modalType: ''\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var slider = document.getElementById(\"slider\"); // slider.style.width = this.sliderWidth()\n\n    require('mouse-wheel')(function (dx, dy, dz, ev) {\n      if (ev.ctrlKey) {\n        ev.preventDefault();\n\n        if (dy > 0 && _this.scale > .2) {\n          _this.scale -= .1;\n        }\n\n        if (dy < 1.2) {\n          _this.scale += .1;\n        }\n\n        slider.style.transform = \"scale(\" + _this.scale + \")\";\n      }\n    });\n  },\n  computed: {\n    sliderWidth: function sliderWidth() {\n      return 375 * this.events.length + \"px\";\n    },\n    eventsInOrder: function eventsInOrder() {\n      return sortEvents(this.events);\n    },\n    selectedTitle: function selectedTitle() {\n      if (this.selectedEvent.Title != null) return this.selectedEvent.Title;\n      return \"\";\n    },\n    selectedTime: function selectedTime() {\n      if (this.selectedEvent.EventDateTime != null) return formatEventTime(this.selectedEvent.EventDateTime);\n      return \"\";\n    },\n    selectedDate: function selectedDate() {\n      if (this.selectedEvent.EventDateTime != null) return formatEventDate(this.selectedEvent.EventDateTime);\n      return \"\";\n    },\n    selectedDescription: function selectedDescription() {\n      if (this.selectedEvent.Description != null) return this.selectedEvent.Description.substr(0, 90) + '...';\n      return \"\";\n    }\n  },\n  props: {\n    events: {\n      type: Array,\n      required: true\n    }\n  },\n  methods: {\n    drag: function drag(event, type) {\n      if (type === \"down\") {\n        _drag = true;\n        lastPos = [event.clientX, event.clientY];\n      }\n\n      if (type === \"up\") {\n        _drag = false;\n      }\n\n      if (type === \"drag\" && _drag) {\n        pos = [event.clientX, event.clientY];\n        difference = [pos[0] - lastPos[0], pos[1] - lastPos[1]];\n        event.srcElement.scrollLeft = event.srcElement.scrollLeft - difference[0] / 10;\n      }\n    },\n    clickedTitle: function clickedTitle(event) {\n      if (event.srcElement.classList.contains(\"selected\")) {\n        this.clearSelected();\n        return;\n      }\n\n      this.clearSelected();\n      event.srcElement.classList.add(\"selected\");\n      this.selectedEvent = this.getEventFromId(event.srcElement.id);\n      var eventX = event.srcElement.offsetLeft;\n      var info = document.getElementById(\"event-info\");\n      info.style.left = eventX + \"px\";\n    },\n    clearSelected: function clearSelected() {\n      var selected = document.getElementsByClassName(\"selected\");\n\n      for (var i = selected.length - 1; i >= 0; i--) {\n        selected[0].classList.remove(\"selected\");\n      }\n\n      this.selectedEvent = {\n        'Id': '',\n        'Title': '',\n        'EventDateTime': '',\n        'Description': '',\n        'IsDeleted': '',\n        'Location': '',\n        'LinkedTimelineEventIds': [],\n        'Attachments': []\n      };\n    },\n    getEventFromId: function getEventFromId(id) {\n      return this.events.filter(function (event) {\n        return event.Id === id;\n      })[0];\n    },\n    editEventTitle: function editEventTitle() {},\n    openEvent: function openEvent() {\n      this.$store.commit('setCurrentEvent', this.selectedEvent);\n      this.$router.push({\n        name: 'EVENT'\n      });\n    },\n    deleteEvent: function deleteEvent() {\n      this.closeModal();\n      this.$store.dispatch('deleteEvent', this.selectedEvent.Id);\n      this.clearSelected();\n    },\n    dateFromDateTime: function dateFromDateTime(dateTime) {\n      return dateTime.substr(0, 10);\n    },\n    timeFromDateTime: function timeFromDateTime(dateTime) {\n      return dateTime.substr(11, 16);\n    },\n    openModal: function openModal(type) {\n      this.modal = true;\n      this.modalType = type;\n    },\n    closeModal: function closeModal() {\n      this.modal = !this.modal;\n    },\n    modalOpened: function modalOpened() {\n      if (this.modalType === \"deleteEvent\") {\n        this.modalTitle = \"Delete\";\n      } else if (this.modalType === \"editEventTitle\") {\n        document.getElementById('titleInput').focus();\n        this.modalTitle = \"Edit\";\n        this.newEventTitle = this.selectedEvent.Title;\n      }\n    },\n    modalClosed: function modalClosed() {\n      if (this.modalType === \"editEventTitle\") {\n        this.newEventTitle = '';\n        this.showTitleWarning = false;\n      }\n\n      this.modalType = '';\n      this.modalTitle = '';\n    },\n\n    /* Called when a key is pressed on the create modal input. */\n    checkTitleInput: function checkTitleInput() {\n      /*\r\n        If the user has tried to create a timeline that has less than 5 characters\r\n        then the warning gets shown.\r\n        This automatically hides the warning once they have entered at least 5 characters.\r\n      */\n      if (this.showTitleWarning === true) {\n        if (validTitle(this.newEventTitle)) {\n          this.showTitleWarning = false;\n        }\n      }\n    },\n    changeEventTitle: function changeEventTitle() {\n      if (!validTitle(this.newEventTitle)) {\n        document.getElementById('titleInput').focus();\n        this.showTitleWarning = true;\n        return;\n      }\n\n      this.closeModal();\n      var payload = {\n        id: this.selectedEvent.Id,\n        title: this.newEventTitle\n      };\n      this.$store.dispatch('changeEventTitle', payload);\n    }\n  }\n};",{"version":3,"sources":["timeline-events.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AAEA;AACA;AACA;AACA;AACA;AAEA;QAEA;wBACA;;AAEA;AACA;AACA;;cAEA;iBACA;yBACA;uBACA;qBACA;oBACA;kCACA;uBACA,AACA;AATA;aAUA;kBACA;qBACA;wBACA;iBACA,AACA;AAnBA;AAoBA;;AACA;;yCACA,WACA;;qDACA;sBACA;WACA;;wCACA;yBACA;AACA;;sBACA;yBACA;AACA;;0DACA;AACA;AACA;AACA;;wCAEA;wCACA;AACA;4CACA;6BACA;AACA;4CACA;sCACA,gCACA;aACA;AACA;0CACA;8CACA,gDACA;aACA;AACA;0CACA;8CACA,gDACA;aACA;AACA;wDACA;4CACA,4DACA;aACA;AACA,AACA;AA3BA;;;YA8BA;gBACA,AACA,AACA;AAJA;AADA;;qCAOA;2BACA;gBACA;wCACA;AACA;;yBACA;gBACA;AACA;;oCACA;oCACA;4DACA;oFACA;AACA;AACA;+CACA;2DACA;aACA;AACA;AACA;;WACA;qCACA;gEAEA;oCAEA;yCACA;iCAEA;AACA;4CACA;qDACA;;qDACA;qCACA;AACA;;;cAEA;iBACA;yBACA;uBACA;qBACA;oBACA;kCACA;uBACA,AACA;AATA;AAUA;gDACA;;;SACA;AACA;8CAEA,CACA;oCACA;iDACA;;cACA;;AACA;wCACA;WACA;6DACA;WACA;AACA;0DACA;gCACA;AACA;0DACA;iCACA;AACA;wCACA;mBACA;uBACA;AACA;sCACA;yBACA;AACA;wCACA;4CACA;0BACA;sDACA;8CACA;0BACA;gDACA;AACA;AACA;wCACA;+CACA;6BACA;gCACA;AACA;;uBACA;wBACA;AACA;;AACA;gDACA;AACA,AACA,AACA,AACA,AACA;;;;;0CACA;4CACA;kCACA;AACA;AACA;AACA;kDACA;2CACA;8CACA;gCACA;AACA;AACA;;WACA;;+BAEA;oBACA,AACA;AAHA;+CAIA;AACA,AACA;AArHA;AA1EA","sourceRoot":"src\\components\\timeline","sourcesContent":["<template lang=\"html\">\r\n  <div>\r\n    <div class=\"events\" id=\"container\" @mousedown=\"drag($event, 'down')\" @mousemove=\"drag($event, 'drag')\" @mouseup=\"drag($event, 'up')\">\r\n      <div id=\"slider\" :style=\"{width: sliderWidth}\">\r\n        <div class=\"event\" v-for=\"(e, index) in eventsInOrder\" :key=\"e.id\">\r\n          <div class=\"time\" v-if=\"index === 0 || index === events.length-1\">\r\n            <p>{{formatEventTime(e.EventDateTime)}}</p>\r\n          </div>\r\n          <div class=\"title\" :id=\"e.Id\" @click=\"clickedTitle($event)\">\r\n            <p>{{e.Title}}</p>\r\n          </div>\r\n          <div v-if=\"index != events.length-1\" id=\"h-line\"></div>\r\n          <div v-if=\"index === 0 || index === events.length-1\" id=\"v-line-time\" class=\"v-line\"></div>\r\n          <div v-if=\"selectedEvent.Id === e.Id\" id=\"v-line-title\" class=\"v-line\"></div>\r\n        </div>\r\n        <div class=\"info\" id=\"event-info\">\r\n          <div v-if=\"selectedEvent.Id != ''\" >\r\n            <h2>{{selectedTitle}}<i class=\"material-icons icon\" style=\"padding-left: 5px;\" @click=\"openModal('editEventTitle')\">edit</i></h2>\r\n            <h4>{{selectedTime}} - {{selectedDate}}</h4>\r\n            <p>\r\n              {{selectedDescription}}\r\n            </p>\r\n            <b-btn variant=\"create\" @click=\"openEvent\">More</b-btn>\r\n            <b-btn variant=\"delete\" @click=\"openModal('deleteEvent')\" style=\"float: right;\">Delete</b-btn>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <b-modal  v-model=\"modal\" :title=\"modalTitle\" @shown=\"modalOpened\" @hidden=\"modalClosed\" size=\"lg\">\r\n      <b-container fluid>\r\n        <b-row v-if=\"modalType === 'deleteEvent'\">\r\n          <b-col>\r\n            <p>\r\n              Are you sure you wish to delete this event?\r\n            </p>\r\n          </b-col>\r\n        </b-row>\r\n        <b-row v-else-if=\"modalType === 'editEventTitle'\">\r\n          <b-col>\r\n            <input type=\"text\" v-model=\"newEventTitle\" @keyup.enter=\"changeEventTitle\" @keyup=\"checkTitleInput\" placeholder=\"Enter new title\" id=\"titleInput\" />\r\n            <b-alert variant=\"danger\" :show=\"showTitleWarning\">Title must be at least 5 characters long</b-alert>\r\n          </b-col>\r\n        </b-row>\r\n      </b-container>\r\n      <div slot=\"modal-footer\" class=\"w-100\">\r\n        <b-btn class=\"float-left\" @click=\"closeModal\">CANCEL</b-btn>\r\n        <b-btn v-if=\"modalType === 'deleteEvent'\" class=\"float-right\" @click=\"deleteEvent\">DELETE</b-btn>\r\n        <b-btn v-else-if=\"modalType === 'editEventTitle'\" class=\"float-right\" @click=\"changeEventTitle\">SAVE</b-btn>\r\n      </div>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {formatEventTime, formatEventDate, sortEvents, validTitle} from '../../scripts/script'\r\n\r\nvar drag = false\r\nvar lastPos = []\r\nvar pos = []\r\nvar difference = []\r\nvar scale = 1\r\n\r\nexport default {\r\n  name: 'aEvents',\r\n  data() {\r\n    return {\r\n      formatEventTime,\r\n      formatEventDate,\r\n      scale,\r\n      selectedEvent: {\r\n        'Id': '',\r\n        'Title': '',\r\n        'EventDateTime': '',\r\n        'Description': '',\r\n        'IsDeleted': '',\r\n        'Location': '',\r\n        'LinkedTimelineEventIds': [],\r\n        'Attachments': []\r\n      },\r\n      modal: false,\r\n      modalTitle: '',\r\n      newEventTitle: '',\r\n      showTitleWarning: false,\r\n      modalType: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    var slider = document.getElementById(\"slider\")\r\n    // slider.style.width = this.sliderWidth()\r\n    require('mouse-wheel')((dx, dy, dz, ev) => {\r\n      if (ev.ctrlKey) {\r\n        ev.preventDefault()\r\n        if (dy > 0 && this.scale > .2) {\r\n          this.scale -= .1\r\n        }\r\n        if (dy < 1.2) {\r\n          this.scale += .1\r\n        }\r\n        slider.style.transform = \"scale(\"+this.scale+\")\"\r\n      }\r\n    })\r\n  },\r\n  computed: {\r\n    sliderWidth() {\r\n      return 375 * this.events.length + \"px\"\r\n    },\r\n    eventsInOrder() {\r\n      return sortEvents(this.events)\r\n    },\r\n    selectedTitle() {\r\n      if (this.selectedEvent.Title != null)\r\n        return this.selectedEvent.Title\r\n      return \"\"\r\n    },\r\n    selectedTime() {\r\n      if (this.selectedEvent.EventDateTime != null)\r\n        return formatEventTime(this.selectedEvent.EventDateTime)\r\n      return \"\"\r\n    },\r\n    selectedDate() {\r\n      if (this.selectedEvent.EventDateTime != null)\r\n        return formatEventDate(this.selectedEvent.EventDateTime)\r\n      return \"\"\r\n    },\r\n    selectedDescription() {\r\n      if (this.selectedEvent.Description != null)\r\n        return this.selectedEvent.Description.substr(0,90) + '...'\r\n      return \"\"\r\n    }\r\n  },\r\n  props: {\r\n    events: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  methods: {\r\n    drag: function(event, type) {\r\n      if (type === \"down\") {\r\n        drag = true\r\n        lastPos = [event.clientX, event.clientY]\r\n      }\r\n      if (type === \"up\") {\r\n        drag = false\r\n      }\r\n      if (type === \"drag\" && drag) {\r\n        pos = [event.clientX, event.clientY]\r\n        difference = [ (pos[0]-lastPos[0]), (pos[1]-lastPos[1])]\r\n        event.srcElement.scrollLeft = event.srcElement.scrollLeft - (difference[0]/10)\r\n      }\r\n    },\r\n    clickedTitle: function(event) {\r\n      if (event.srcElement.classList.contains(\"selected\")) {\r\n        this.clearSelected()\r\n        return\r\n      }\r\n      this.clearSelected()\r\n      event.srcElement.classList.add(\"selected\")\r\n      this.selectedEvent = this.getEventFromId(event.srcElement.id)\r\n\r\n      var eventX = event.srcElement.offsetLeft\r\n\r\n      var info = document.getElementById(\"event-info\")\r\n      info.style.left = eventX + \"px\"\r\n\r\n    },\r\n    clearSelected: function() {\r\n      var selected = document.getElementsByClassName(\"selected\")\r\n      for (var i = selected.length-1; i >= 0; i--) {\r\n        selected[0].classList.remove(\"selected\")\r\n      }\r\n      this.selectedEvent = {\r\n        'Id': '',\r\n        'Title': '',\r\n        'EventDateTime': '',\r\n        'Description': '',\r\n        'IsDeleted': '',\r\n        'Location': '',\r\n        'LinkedTimelineEventIds': [],\r\n        'Attachments': []\r\n      }\r\n    },\r\n    getEventFromId: function(id) {\r\n      return this.events.filter(event => event.Id === id)[0]\r\n    },\r\n    editEventTitle: function() {\r\n\r\n    },\r\n    openEvent: function() {\r\n      this.$store.commit('setCurrentEvent', this.selectedEvent)\r\n      this.$router.push({name: 'EVENT'})\r\n    },\r\n    deleteEvent: function() {\r\n      this.closeModal()\r\n      this.$store.dispatch('deleteEvent', this.selectedEvent.Id)\r\n      this.clearSelected()\r\n    },\r\n    dateFromDateTime(dateTime) {\r\n      return dateTime.substr(0,10)\r\n    },\r\n    timeFromDateTime(dateTime) {\r\n      return dateTime.substr(11,16)\r\n    },\r\n    openModal(type) {\r\n      this.modal = true\r\n      this.modalType = type\r\n    },\r\n    closeModal() {\r\n      this.modal = !this.modal\r\n    },\r\n    modalOpened() {\r\n      if (this.modalType === \"deleteEvent\") {\r\n        this.modalTitle = \"Delete\"\r\n      } else if (this.modalType === \"editEventTitle\") {\r\n        document.getElementById('titleInput').focus()\r\n        this.modalTitle = \"Edit\"\r\n        this.newEventTitle = this.selectedEvent.Title\r\n      }\r\n    },\r\n    modalClosed() {\r\n      if (this.modalType === \"editEventTitle\") {\r\n        this.newEventTitle = ''\r\n        this.showTitleWarning = false\r\n      }\r\n      this.modalType = ''\r\n      this.modalTitle = ''\r\n    },\r\n    /* Called when a key is pressed on the create modal input. */\r\n    checkTitleInput: function() {\r\n      /*\r\n        If the user has tried to create a timeline that has less than 5 characters\r\n        then the warning gets shown.\r\n        This automatically hides the warning once they have entered at least 5 characters.\r\n      */\r\n      if (this.showTitleWarning === true) {\r\n        if (validTitle(this.newEventTitle)) {\r\n          this.showTitleWarning = false\r\n        }\r\n      }\r\n    },\r\n    changeEventTitle() {\r\n      if (!validTitle(this.newEventTitle)) {\r\n        document.getElementById('titleInput').focus()\r\n        this.showTitleWarning = true\r\n        return\r\n      }\r\n      this.closeModal()\r\n      var payload = {\r\n        id: this.selectedEvent.Id,\r\n        title: this.newEventTitle\r\n      }\r\n      this.$store.dispatch('changeEventTitle', payload)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '../../assets/styles/theme.scss';\r\n@import '../../assets/styles/main.scss';\r\n\r\n.events {\r\n  overflow: hidden;\r\n  height: 500px;\r\n  cursor: pointer;\r\n  width: 100vw;\r\n  height: 500px;\r\n  // box-shadow: 0 0 5px 5px rgba(0, 0, 0, .1);\r\n  padding-top: 10px;\r\n  #slider {\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n    transform-origin: 0 0;\r\n    pointer-events: none;\r\n  }\r\n  #h-line {\r\n    width: 75px;\r\n    border-bottom: 1px solid black;\r\n    position: relative;\r\n    top: -35px;\r\n    right: -300px;\r\n  }\r\n  .v-line {\r\n    height: 50px;\r\n    border-left: 1px solid black;\r\n    &#v-line-title {\r\n      position: relative;\r\n      left: 150px;\r\n    }\r\n    &#v-line-time {\r\n      position: absolute;\r\n      margin-left: 150px;\r\n      margin-top: -120px;\r\n    }\r\n  }\r\n  .event {\r\n    margin-left: 37.5px;\r\n    margin-right: 37.5px;\r\n    display: inline-block;\r\n    text-align: center;\r\n    cursor: default;\r\n    pointer-events: all;\r\n    p {\r\n      position: relative;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n      pointer-events: none;\r\n    }\r\n    .time {\r\n      background-color: $text;\r\n      color: white;\r\n      width: 200px;\r\n      height: 70px;\r\n      margin: auto;\r\n      transform: skewX(-10deg);\r\n    }\r\n    .title {\r\n      background-color: white;\r\n      margin-top: 50px;\r\n      position: relative;\r\n      top: 50%;\r\n      width: 300px;\r\n      height: 70px;\r\n      &.selected {\r\n        background-color: $select;\r\n        color: white;\r\n      }\r\n    }\r\n  }\r\n  .info {\r\n    position: absolute;\r\n    pointer-events: all;\r\n    cursor: default;\r\n  }\r\n  .info div{\r\n    background-color: white;\r\n    box-shadow: 0 16px 16px rgba(0, 0, 0, .16);\r\n    width: 300px;\r\n    max-height: 200px;\r\n    padding: 10px;\r\n    .icon {\r\n      cursor: pointer;\r\n    }\r\n    #delete-event {\r\n      font-size: 19px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}