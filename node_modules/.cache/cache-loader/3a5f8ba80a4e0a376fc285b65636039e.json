{"remainingRequest":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\chris\\Desktop\\aileron\\node_modules\\vue-loader\\lib\\selector.js?type=script&index=0!C:\\Users\\chris\\Desktop\\aileron\\src\\components\\event\\event.vue","dependencies":[{"path":"C:\\Users\\chris\\Desktop\\aileron\\src\\components\\event\\event.vue","mtime":1523389519777},{"path":"C:\\Users\\chris\\Desktop\\aileron\\package.json","mtime":1522176194972},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1520545180302},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\vue-loader\\lib\\selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { formatEventDate, formatEventTime } from '../../scripts/script';\nimport $ from 'jquery';\nexport default {\n  name: 'aTimeline',\n  data: function data() {\n    return {\n      newEventDescription: ''\n    };\n  },\n  mounted: function mounted() {\n    this.newEventDescription = this.description;\n  },\n  computed: {\n    timeline: function timeline() {\n      return this.$store.state.currentTimeline;\n    },\n    event: function event() {\n      return this.$store.state.currentEvent;\n    },\n    id: function id() {\n      return this.event.Id;\n    },\n    title: function title() {\n      return this.event.Title;\n    },\n    date: function date() {\n      var date = formatEventDate(this.event.EventDateTime);\n      if (date === 'Date not available') return '';\n      return date;\n    },\n    time: function time() {\n      var time = formatEventTime(this.event.EventDateTime);\n      if (time === 'Time not available') return '';\n      return time;\n    },\n    description: function description() {\n      return this.event.Description;\n    }\n  },\n  methods: {\n    back: function back() {\n      this.$router.push({\n        name: 'TIMELINE'\n      });\n    },\n    cancelDescription: function cancelDescription() {\n      this.newEventDescription = this.description;\n    },\n    saveDescription: function saveDescription() {\n      var payload = {\n        id: this.id,\n        description: this.newEventDescription\n      };\n      this.$store.dispatch('changeEventDescription', payload);\n    }\n  }\n};",{"version":3,"sources":["event.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AAEA;QAEA;wBACA;;2BAEA,AACA;AAFA;AAGA;8BACA;oCACA;AACA;;kCAEA;+BACA;AACA;4BACA;+BACA;AACA;sBACA;wBACA;AACA;4BACA;wBACA;AACA;0BACA;4CACA;mBACA,6BACA;aACA;AACA;0BACA;4CACA;mBACA,6BACA;aACA;AACA;wCACA;wBACA;AACA,AACA;AA5BA;;0BA8BA;;cACA;;AACA;oDACA;sCACA;AACA;gDACA;;iBAEA;0BACA,AACA;AAHA;qDAIA;AACA,AACA;AAdA;AAvCA","sourceRoot":"src\\components\\event","sourcesContent":["<template lang=\"html\">\r\n  <div>\r\n    <div v-if=\"event != null\">\r\n      <b-row>\r\n        <b-col md=\"10\" offset-md=\"1\" class=\"event-page\" id=\"event-page\">\r\n          <b-row class=\"head\" align-v=\"start\">\r\n            <b-col sm=\"12\" lg=\"2\" class=\"event-buttons\">\r\n              <b-btn variant=\"select\" @click=\"back\" id=\"event-back-button\">Back</b-btn>\r\n            </b-col>\r\n            <b-col sm=\"12\" lg=\"8\" class=\"event-details\">\r\n              <h1>{{title}}<i v-on:click=\"openModal('editEventTitle')\" class=\"material-icons icon\">edit</i></h1>\r\n              <h3>{{date}} - {{time}}<i class=\"material-icons date-range\">date_range</i></h3>\r\n            </b-col>\r\n            <b-col sm=\"12\" lg=\"2\" class=\"event-buttons\">\r\n              <b-btn variant=\"delete\" @click=\"openModal('deleteEvent')\" id=\"event-delete-button\">Delete event</b-btn>\r\n            </b-col>\r\n          </b-row>\r\n          <b-row class=\"event-main\" align-v=\"center\">\r\n            <b-col sm=\"12\">\r\n              <h1>Description</h1>\r\n              <i class=\"material-icons description-controls\" id=\"save-description\" v-if=\"description !== newEventDescription\" @click=\"saveDescription\">done</i>\r\n              <i class=\"material-icons description-controls\" id=\"cancel-description\" v-if=\"description !== newEventDescription\" @click=\"cancelDescription\">close</i>\r\n              <b-form-textarea id=\"event-description\" v-model=\"newEventDescription\" style=\"cursor: pointer;\" no-resize/>\r\n            </b-col>\r\n          </b-row>\r\n        </b-col>\r\n      </b-row>\r\n    </div>\r\n    <div v-else>\r\n      <div v-if=\"timeline != null\">\r\n        <h2>\r\n          No event selected. Click <router-link to=\"/timeline\">here</router-link> to return to timeline.\r\n        </h2>\r\n      </div>\r\n      <div v-else>\r\n        <h2>\r\n          No event or timeline selected. Click <router-link to=\"/\">here</router-link> to return to timeline register.\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {formatEventDate, formatEventTime} from '../../scripts/script'\r\nimport $ from 'jquery'\r\n\r\nexport default {\r\n  name: 'aTimeline',\r\n  data() {\r\n    return {\r\n      newEventDescription: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.newEventDescription = this.description\r\n  },\r\n  computed: {\r\n    timeline() {\r\n      return this.$store.state.currentTimeline\r\n    },\r\n    event() {\r\n      return this.$store.state.currentEvent\r\n    },\r\n    id() {\r\n      return this.event.Id\r\n    },\r\n    title() {\r\n      return this.event.Title\r\n    },\r\n    date() {\r\n      let date = formatEventDate(this.event.EventDateTime)\r\n      if (date === 'Date not available')\r\n        return ''\r\n      return date\r\n    },\r\n    time() {\r\n      let time = formatEventTime(this.event.EventDateTime)\r\n      if (time === 'Time not available')\r\n        return ''\r\n      return time\r\n    },\r\n    description() {\r\n      return this.event.Description\r\n    }\r\n  },\r\n  methods: {\r\n    back() {\r\n      this.$router.push({name: 'TIMELINE'})\r\n    },\r\n    cancelDescription() {\r\n      this.newEventDescription = this.description\r\n    },\r\n    saveDescription() {\r\n      var payload = {\r\n        id: this.id,\r\n        description: this.newEventDescription\r\n      }\r\n      this.$store.dispatch('changeEventDescription', payload)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '../../assets/styles/theme.scss';\r\n@import '../../assets/styles/main.scss';\r\n\r\n.event-page {\r\n  background-color: $event-bg;\r\n  margin-top: 20px;\r\n  // .event-header {\r\n    // padding: 20px;\r\n    // @media screen and (max-width: 720px) {\r\n    //   text-align: center;\r\n    // }\r\n    // .btn-round {\r\n    //   position: relative;\r\n    //   bottom: 50%;\r\n    //   transform: translateY(50%);\r\n    //   font-size: 1px;\r\n    //   padding: 0;\r\n    //   @media screen and (max-width: 720px) {\r\n    //     width: 100%;\r\n    //     border-radius: 2px;\r\n    //   }\r\n    // }\r\n    // #delete {\r\n    //   @media screen and (min-width: 720px) {\r\n    //     position: absolute;\r\n    //     right: 0;\r\n    //     top: 0;\r\n    //   }\r\n    //   @media screen and (max-width: 720px) {\r\n    //     margin-top: 20px;\r\n    //   }\r\n    // }\r\n    // h1 {\r\n    //   display: inline;\r\n    // }\r\n    // i.date-range {\r\n    //   font-size: 0.9em;\r\n    // }\r\n  // }\r\n  @media screen and (max-width: 720px) {\r\n    .event-buttons {\r\n      &:nth-child(n+2) {margin-top: 10px;}\r\n    }\r\n    .event-details {overflow: auto;}\r\n  }\r\n  @media screen and (min-width: 720px) {\r\n    .event-details {overflow: hidden;}\r\n  }\r\n  .event-buttons button {width: 100%;}\r\n  .event-details {\r\n    h1, h3 {\r\n      // font-size: 2.5em;\r\n      display:inline-block;\r\n      &:last-child {\r\n        &::before{\r\n          content: ' - '\r\n        }\r\n      }\r\n    }\r\n    i {font-size: 0.7em;}\r\n  }\r\n  .event-main {\r\n    h1 {\r\n      display: inline;\r\n    }\r\n    #event-description {\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}