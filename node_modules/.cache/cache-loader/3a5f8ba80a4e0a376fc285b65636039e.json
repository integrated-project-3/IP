{"remainingRequest":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\chris\\Desktop\\aileron\\node_modules\\vue-loader\\lib\\selector.js?type=script&index=0!C:\\Users\\chris\\Desktop\\aileron\\src\\components\\event\\event.vue","dependencies":[{"path":"C:\\Users\\chris\\Desktop\\aileron\\src\\components\\event\\event.vue","mtime":1522769979449},{"path":"C:\\Users\\chris\\Desktop\\aileron\\package.json","mtime":1522176194972},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1520545180302},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\vue-loader\\lib\\selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { formatEventDate, formatEventTime } from '../../scripts/script';\nexport default {\n  name: 'aTimeline',\n  computed: {\n    timeline: function timeline() {\n      return this.$store.state.currentTimeline;\n    },\n    event: function event() {\n      return this.$store.state.currentEvent;\n    },\n    title: function title() {\n      return this.event.Title;\n    },\n    date: function date() {\n      var date = formatEventDate(this.event.EventDateTime);\n      if (date === 'Date not available') return '';\n      return date;\n    },\n    time: function time() {\n      var time = formatEventTime(this.event.EventDateTime);\n      if (time === 'Time not available') return '';\n      return time;\n    }\n  },\n  methods: {\n    back: function back() {\n      this.$router.push({\n        name: 'TIMELINE'\n      });\n    },\n    openModal: function openModal(type) {\n      console.log(type);\n    }\n  }\n};",{"version":3,"sources":["event.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AAEA;QAEA;;kCAEA;+BACA;AACA;4BACA;+BACA;AACA;4BACA;wBACA;AACA;0BACA;4CACA;mBACA,6BACA;aACA;AACA;0BACA;4CACA;mBACA,6BACA;aACA;AACA,AACA;AAtBA;;0BAwBA;;cACA;;AACA;wCACA;kBACA;AACA,AACA;AAPA;AAzBA","sourceRoot":"src\\components\\event","sourcesContent":["<template lang=\"html\">\r\n  <div>\r\n    <div v-if=\"event != null\">\r\n      <b-row>\r\n        <b-col md=\"10\" offset-md=\"1\" class=\"event-page\" id=\"event-page\">\r\n          <b-row class=\"event-header\">\r\n            <b-col md=\"1\">\r\n              <b-btn class=\"btn-round\" variant=\"create\" @click=\"back\"><i class=\"material-icons\">arrow_back</i></b-btn>\r\n            </b-col>\r\n            <b-col md=\"1\" id=\"delete\">\r\n              <b-btn class=\"btn-round\" variant=\"delete\" @click=\"openModal('deleteEvent')\"><i class=\"material-icons\">delete</i></b-btn>\r\n            </b-col>\r\n            <b-col md=\"5\">\r\n              <h1>{{title}}</h1>\r\n            </b-col>\r\n            <b-col md=\"5\">\r\n              <h1 v-if=\"this.event.EventDateTime === 'n/a'\"></h1>\r\n              <h1 v-else>{{date}} - {{time}} <i class=\"material-icons date-range\">date_range</i></h1>\r\n            </b-col>\r\n          </b-row>\r\n        </b-col>\r\n      </b-row>\r\n    </div>\r\n    <div v-else>\r\n      <div v-if=\"timeline != null\">\r\n        <h2>\r\n          No event selected. Click <router-link to=\"/timeline\">here</router-link> to return to timeline.\r\n        </h2>\r\n      </div>\r\n      <div v-else>\r\n        <h2>\r\n          No event or timeline selected. Click <router-link to=\"/\">here</router-link> to return to timeline register.\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {formatEventDate, formatEventTime} from '../../scripts/script'\r\n\r\nexport default {\r\n  name: 'aTimeline',\r\n  computed: {\r\n    timeline() {\r\n      return this.$store.state.currentTimeline\r\n    },\r\n    event() {\r\n      return this.$store.state.currentEvent\r\n    },\r\n    title() {\r\n      return this.event.Title\r\n    },\r\n    date() {\r\n      let date = formatEventDate(this.event.EventDateTime)\r\n      if (date === 'Date not available')\r\n        return ''\r\n      return date\r\n    },\r\n    time() {\r\n      let time = formatEventTime(this.event.EventDateTime)\r\n      if (time === 'Time not available')\r\n        return ''\r\n      return time\r\n    }\r\n  },\r\n  methods: {\r\n    back() {\r\n      this.$router.push({name: 'TIMELINE'})\r\n    },\r\n    openModal(type) {\r\n      console.log(type)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '../../assets/styles/theme.scss';\r\n@import '../../assets/styles/main.scss';\r\n\r\n.event-page {\r\n  background-color: $event-bg;\r\n  margin-top: 20px;\r\n  .event-header {\r\n    padding: 20px;\r\n    @media screen and (max-width: 720px) {\r\n      text-align: center;\r\n    }\r\n    .btn-round {\r\n      position: relative;\r\n      bottom: 50%;\r\n      transform: translateY(50%);\r\n      font-size: 1px;\r\n      padding: 0;\r\n      @media screen and (max-width: 720px) {\r\n        width: 100%;\r\n        border-radius: 2px;\r\n      }\r\n    }\r\n    #delete {\r\n      @media screen and (min-width: 720px) {\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n      }\r\n      @media screen and (max-width: 720px) {\r\n        margin-top: 20px;\r\n      }\r\n    }\r\n    h1 {\r\n      display: inline;\r\n    }\r\n    i.date-range {\r\n      font-size: 0.9em;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}