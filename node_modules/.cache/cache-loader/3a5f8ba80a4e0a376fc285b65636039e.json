{"remainingRequest":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\chris\\Desktop\\aileron\\node_modules\\vue-loader\\lib\\selector.js?type=script&index=0!C:\\Users\\chris\\Desktop\\aileron\\src\\components\\event\\event.vue","dependencies":[{"path":"C:\\Users\\chris\\Desktop\\aileron\\src\\components\\event\\event.vue","mtime":1523887049507},{"path":"C:\\Users\\chris\\Desktop\\aileron\\package.json","mtime":1523642910731},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1520545180302},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\vue-loader\\lib\\selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { formatEventDate, formatEventTime, validTitle } from '../../scripts/script';\nexport default {\n  name: 'aTimeline',\n  data: function data() {\n    return {\n      newEventDescription: '',\n      modal: false,\n      modalTitle: '',\n      showTitleWarning: false,\n      modalType: '',\n      newEventTitle: '',\n      selectedAttachmentId: ''\n    };\n  },\n  mounted: function mounted() {\n    this.newEventDescription = this.description;\n  },\n  computed: {\n    timeline: function timeline() {\n      return this.$store.state.currentTimeline;\n    },\n    event: function event() {\n      return this.$store.state.currentEvent;\n    },\n    id: function id() {\n      return this.event.Id;\n    },\n    title: function title() {\n      return this.event.Title;\n    },\n    date: function date() {\n      var date = formatEventDate(this.event.EventDateTime);\n      if (date === 'Date not available') return '';\n      return date;\n    },\n    time: function time() {\n      var time = formatEventTime(this.event.EventDateTime);\n      if (time === 'Time not available') return '';\n      return time;\n    },\n    description: function description() {\n      return this.event.Description;\n    },\n    attachments: function attachments() {\n      return this.event.Attachments;\n    }\n  },\n  methods: {\n    back: function back() {\n      this.$router.push({\n        name: 'TIMELINE'\n      });\n    },\n    cancelDescription: function cancelDescription() {\n      this.newEventDescription = this.description;\n    },\n    saveDescription: function saveDescription() {\n      var payload = {\n        id: this.id,\n        description: this.newEventDescription\n      };\n      this.$store.dispatch('changeEventDescription', payload);\n    },\n    openModal: function openModal(type) {\n      this.modal = true;\n      this.modalType = type;\n    },\n    closeModal: function closeModal() {\n      this.modal = !this.modal;\n    },\n    modalOpened: function modalOpened() {\n      if (this.modalType === \"editEventTitle\") {\n        document.getElementById('title-input').focus();\n        this.modalTitle = \"Edit\";\n        this.newEventTitle = this.title;\n      } else if (this.modalType === \"createAttachment\") {\n        this.modalTitle = \"Create\";\n      } else if (this.modalType === \"deleteAttachment\") {\n        this.modalTitle = \"Delete\";\n      }\n    },\n    modalClosed: function modalClosed() {\n      if (this.modalType === \"editEventTitle\") {\n        this.newEventTitle = '';\n        this.showTitleWarning = false;\n      }\n\n      this.modalType = '';\n      this.modalTitle = '';\n    },\n\n    /* Called when a key is pressed on the create modal input. */\n    checkTitleInput: function checkTitleInput() {\n      /*\r\n        If the user has tried to create a timeline that has less than 5 characters\r\n        then the warning gets shown.\r\n        This automatically hides the warning once they have entered at least 5 characters.\r\n      */\n      if (this.showTitleWarning === true) {\n        if (this.modalType === \"editEventTitle\") {\n          if (validTitle(this.newEventTitle)) {\n            this.showTitleWarning = false;\n          }\n        } else if (this.modalType === \"createAttachment\") {\n          if (validTitle(this.newAttachmentTitle)) {\n            this.showTitleWarning = false;\n          }\n        }\n      }\n    },\n    changeEventTitle: function changeEventTitle() {\n      if (!validTitle(this.newEventTitle)) {\n        document.getElementById('title-input').focus();\n        this.showTitleWarning = true;\n        return;\n      }\n\n      this.closeModal();\n      var payload = {\n        id: this.id,\n        title: this.newEventTitle\n      };\n      this.$store.dispatch('changeEventTitle', payload);\n    },\n    createAttachment: function createAttachment() {\n      var fileInput = document.getElementById('newAttachmentInput');\n      var file = fileInput.files[0];\n      if (file === '') return;\n      this.closeModal();\n      this.$store.dispatch('createAttachment', file);\n    },\n    clickedAttachment: function clickedAttachment(event) {\n      if (event.target.classList.contains(\"selected\") && event.button !== 2) {\n        this.clearSelected();\n        return;\n      }\n\n      this.clearSelected();\n      event.target.classList.add(\"selected\");\n      this.selectedAttachmentId = event.target.children[0].id;\n\n      if (event.button === 2) {\n        var contextmenu = document.getElementById('contextmenu');\n        contextmenu.style.display = 'inherit';\n        contextmenu.style.top = event.clientY + \"px\";\n        contextmenu.style.left = event.clientX + \"px\";\n\n        contextmenu.onmouseleave = function () {\n          contextmenu.style.display = \"none\";\n        };\n      }\n    },\n    clearSelected: function clearSelected() {\n      var selected = document.getElementsByClassName(\"selected\");\n\n      for (var i = selected.length - 1; i >= 0; i--) {\n        selected[0].classList.remove(\"selected\");\n      }\n\n      this.selectedAttachmentId = '';\n    },\n    deleteAttachment: function deleteAttachment() {\n      this.closeModal();\n      this.$store.dispatch('deleteAttachment', this.selectedAttachmentId);\n      this.clearSelected();\n    },\n    openAttachment: function openAttachment() {\n      this.$store.dispatch('getAttachment', this.selectedAttachmentId);\n    }\n  }\n};",{"version":3,"sources":["event.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AAEA;QAEA;wBACA;;2BAEA;aACA;kBACA;wBACA;iBACA;qBACA;4BACA,AACA;AARA;AASA;8BACA;oCACA;AACA;;kCAEA;+BACA;AACA;4BACA;+BACA;AACA;sBACA;wBACA;AACA;4BACA;wBACA;AACA;0BACA;4CACA;mBACA,6BACA;aACA;AACA;0BACA;4CACA;mBACA,6BACA;aACA;AACA;wCACA;wBACA;AACA;wCACA;wBACA;AACA,AACA;AA/BA;;0BAiCA;;cACA;;AACA;oDACA;sCACA;AACA;gDACA;;iBAEA;0BACA,AACA;AAHA;qDAIA;AACA;wCACA;mBACA;uBACA;AACA;sCACA;yBACA;AACA;wCACA;+CACA;+CACA;0BACA;kCACA;wDACA;0BACA;wDACA;0BACA;AACA;AACA;wCACA;+CACA;6BACA;gCACA;AACA;;uBACA;wBACA;AACA;;AACA;gDACA;AACA,AACA,AACA,AACA,AACA;;;;;0CACA;iDACA;8CACA;oCACA;AACA;0DACA;mDACA;oCACA;AACA;AACA;AACA;AACA;kDACA;2CACA;+CACA;gCACA;AACA;AACA;;WACA;;iBAEA;oBACA,AACA;AAHA;+CAIA;AACA;kDACA;8CACA;iCACA;uBACA;WACA;+CACA;AACA;yDACA;6EACA;aACA;AACA;AACA;;WACA;iCACA;2DAEA;;8BACA;kDAEA;oCACA;gDACA;iDAEA;;+CACA;sCACA;AACA;AACA;AACA;4CACA;qDACA;;qDACA;qCACA;AACA;;kCACA;AACA;kDACA;WACA;oDACA;WACA;AACA;8CACA;iDACA;AACA,AACA;AAnHA;AAhDA","sourceRoot":"src\\components\\event","sourcesContent":["<template lang=\"html\">\r\n  <div>\r\n    <div v-if=\"event != null\">\r\n      <b-row>\r\n        <b-col md=\"10\" offset-md=\"1\" class=\"event-page\" id=\"event-page\">\r\n          <b-row class=\"event-head\" align-v=\"start\">\r\n            <b-col sm=\"12\" lg=\"2\" class=\"event-buttons\">\r\n              <b-btn variant=\"select\" @click=\"back\" id=\"event-back-button\">Back</b-btn>\r\n            </b-col>\r\n            <b-col sm=\"12\" lg=\"8\" class=\"event-details\">\r\n              <h1 @click=\"openModal('editEventTitle')\" style=\"cursor: pointer;\">{{title}}</h1>\r\n              <h3>{{date}} - {{time}}</h3>\r\n            </b-col>\r\n            <b-col sm=\"12\" lg=\"2\" class=\"event-buttons\">\r\n              <b-btn variant=\"delete\" @click=\"openModal('deleteEvent')\" id=\"event-delete-button\">Delete event</b-btn>\r\n            </b-col>\r\n          </b-row>\r\n          <b-row class=\"event-main\" align-v=\"center\">\r\n            <b-col sm=\"12\">\r\n              <b-row>\r\n                <b-col sm=\"12\" class=\"description\">\r\n                  <h1>Description</h1>\r\n                  <span id=\"controls\">\r\n                    <b-btn id=\"cancel-description\" variant=\"cancel-edit\" v-if=\"description !== newEventDescription\" @click=\"cancelDescription\">Cancel</b-btn>\r\n                    <b-btn id=\"save-description\" variant=\"save\" v-if=\"description !== newEventDescription\" @click=\"saveDescription\">Save</b-btn>\r\n                  </span>\r\n                  <b-form-textarea id=\"event-description\" placeholder=\"Enter description\" v-model=\"newEventDescription\" style=\"cursor: pointer;\" no-resize/>\r\n                </b-col>\r\n              </b-row>\r\n              <b-row>\r\n                <b-col sm=\"12\" md=\"6\" class=\"attachments\">\r\n                  <h1>Attachments</h1>\r\n                  <ul id=\"attachment-list\">\r\n                    <li v-for=\"attachment in attachments\" :key=\"attachment.Id\" @click=\"clickedAttachment($event)\" @contextmenu.prevent=\"clickedAttachment($event)\">\r\n                      <span :id=\"attachment.Id\">{{attachment.Title}}</span>\r\n                    </li>\r\n                  </ul>\r\n                  <span id=\"controls\">\r\n                    <b-btn id=\"delete-attachment\" variant=\"delete\" @click=\"openModal('deleteAttachment')\" :disabled=\"selectedAttachmentId === ''\">Delete</b-btn>\r\n                    <b-btn id=\"create-attachment\" variant=\"create\" @click=\"openModal('createAttachment')\">Create</b-btn>\r\n                  </span>\r\n                </b-col>\r\n              </b-row>\r\n            </b-col>\r\n          </b-row>\r\n        </b-col>\r\n      </b-row>\r\n      <div id=\"contextmenu\">\r\n        <ul>\r\n          <li @click=\"openAttachment\">Open</li>\r\n          <li @click=\"openModal('deleteAttachment')\">Delete</li>\r\n        </ul>\r\n      </div>\r\n      <b-modal  v-model=\"modal\" :title=\"modalTitle\" @shown=\"modalOpened\" @hidden=\"modalClosed\" size=\"lg\" id=\"timeline-modal\">\r\n        <b-container fluid>\r\n          <b-row v-if=\"modalType === 'editEventTitle'\">\r\n            <b-col>\r\n              <input type=\"text\" v-model=\"newEventTitle\" @keyup.enter=\"changeEventTitle\" @keyup=\"checkTitleInput\" placeholder=\"Enter new title\" id=\"title-input\" />\r\n              <b-alert variant=\"danger\" :show=\"showTitleWarning\">Title must be at least 5 characters long</b-alert>\r\n            </b-col>\r\n          </b-row>\r\n          <b-row v-else-if=\"modalType === 'createAttachment'\">\r\n            <input type=\"file\" id=\"newAttachmentInput\"/>\r\n          </b-row>\r\n          <b-row v-else-if=\"modalType === 'deleteAttachment'\">\r\n            <b-col>\r\n              <p>\r\n                Are you sure you wish to delete this attachment?\r\n              </p>\r\n            </b-col>\r\n          </b-row>\r\n        </b-container>\r\n        <div slot=\"modal-footer\" class=\"w-100\">\r\n          <b-btn class=\"float-left\" @click=\"closeModal\">CANCEL</b-btn>\r\n          <b-btn v-if=\"modalType === 'editEventTitle'\" class=\"float-right\" @click=\"changeEventTitle\">SAVE</b-btn>\r\n          <b-btn v-else-if=\"modalType === 'createAttachment'\" class=\"float-right\" @click=\"createAttachment\">Create</b-btn>\r\n          <b-btn v-else-if=\"modalType === 'deleteAttachment'\" class=\"float-right\" @click=\"deleteAttachment\">Delete</b-btn>\r\n        </div>\r\n      </b-modal>\r\n    </div>\r\n    <div v-else>\r\n      <div v-if=\"timeline != null\">\r\n        <h2>\r\n          No event selected. Click <router-link to=\"/timeline\">here</router-link> to return to timeline.\r\n        </h2>\r\n      </div>\r\n      <div v-else>\r\n        <h2>\r\n          No event or timeline selected. Click <router-link to=\"/\">here</router-link> to return to timeline register.\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {formatEventDate, formatEventTime, validTitle} from '../../scripts/script'\r\n\r\nexport default {\r\n  name: 'aTimeline',\r\n  data() {\r\n    return {\r\n      newEventDescription: '',\r\n      modal: false,\r\n      modalTitle: '',\r\n      showTitleWarning: false,\r\n      modalType: '',\r\n      newEventTitle: '',\r\n      selectedAttachmentId: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.newEventDescription = this.description\r\n  },\r\n  computed: {\r\n    timeline() {\r\n      return this.$store.state.currentTimeline\r\n    },\r\n    event() {\r\n      return this.$store.state.currentEvent\r\n    },\r\n    id() {\r\n      return this.event.Id\r\n    },\r\n    title() {\r\n      return this.event.Title\r\n    },\r\n    date() {\r\n      let date = formatEventDate(this.event.EventDateTime)\r\n      if (date === 'Date not available')\r\n        return ''\r\n      return date\r\n    },\r\n    time() {\r\n      let time = formatEventTime(this.event.EventDateTime)\r\n      if (time === 'Time not available')\r\n        return ''\r\n      return time\r\n    },\r\n    description() {\r\n      return this.event.Description\r\n    },\r\n    attachments() {\r\n      return this.event.Attachments\r\n    }\r\n  },\r\n  methods: {\r\n    back() {\r\n      this.$router.push({name: 'TIMELINE'})\r\n    },\r\n    cancelDescription() {\r\n      this.newEventDescription = this.description\r\n    },\r\n    saveDescription() {\r\n      var payload = {\r\n        id: this.id,\r\n        description: this.newEventDescription\r\n      }\r\n      this.$store.dispatch('changeEventDescription', payload)\r\n    },\r\n    openModal(type) {\r\n      this.modal = true\r\n      this.modalType = type\r\n    },\r\n    closeModal() {\r\n      this.modal = !this.modal\r\n    },\r\n    modalOpened() {\r\n      if (this.modalType === \"editEventTitle\") {\r\n        document.getElementById('title-input').focus()\r\n        this.modalTitle = \"Edit\"\r\n        this.newEventTitle = this.title\r\n      } else if (this.modalType === \"createAttachment\") {\r\n        this.modalTitle = \"Create\"\r\n      } else if (this.modalType === \"deleteAttachment\") {\r\n        this.modalTitle = \"Delete\"\r\n      }\r\n    },\r\n    modalClosed() {\r\n      if (this.modalType === \"editEventTitle\") {\r\n        this.newEventTitle = ''\r\n        this.showTitleWarning = false\r\n      }\r\n      this.modalType = ''\r\n      this.modalTitle = ''\r\n    },\r\n    /* Called when a key is pressed on the create modal input. */\r\n    checkTitleInput: function() {\r\n      /*\r\n        If the user has tried to create a timeline that has less than 5 characters\r\n        then the warning gets shown.\r\n        This automatically hides the warning once they have entered at least 5 characters.\r\n      */\r\n      if (this.showTitleWarning === true) {\r\n        if (this.modalType === \"editEventTitle\") {\r\n          if (validTitle(this.newEventTitle)) {\r\n            this.showTitleWarning = false\r\n          }\r\n        } else if (this.modalType === \"createAttachment\") {\r\n          if (validTitle(this.newAttachmentTitle)) {\r\n            this.showTitleWarning = false\r\n          }\r\n        }\r\n      }\r\n    },\r\n    changeEventTitle() {\r\n      if (!validTitle(this.newEventTitle)) {\r\n        document.getElementById('title-input').focus()\r\n        this.showTitleWarning = true\r\n        return\r\n      }\r\n      this.closeModal()\r\n      var payload = {\r\n        id: this.id,\r\n        title: this.newEventTitle\r\n      }\r\n      this.$store.dispatch('changeEventTitle', payload)\r\n    },\r\n    createAttachment() {\r\n      var fileInput = document.getElementById('newAttachmentInput')\r\n      var file = fileInput.files[0]\r\n      if (file === '') return\r\n      this.closeModal()\r\n      this.$store.dispatch('createAttachment', file)\r\n    },\r\n    clickedAttachment(event) {\r\n      if (event.target.classList.contains(\"selected\") && event.button !== 2) {\r\n        this.clearSelected()\r\n        return\r\n      }\r\n      this.clearSelected()\r\n      event.target.classList.add(\"selected\")\r\n      this.selectedAttachmentId = event.target.children[0].id\r\n\r\n      if(event.button === 2) {\r\n        var contextmenu = document.getElementById('contextmenu')\r\n\r\n        contextmenu.style.display = 'inherit'\r\n        contextmenu.style.top = event.clientY + \"px\"\r\n        contextmenu.style.left = event.clientX + \"px\"\r\n\r\n        contextmenu.onmouseleave = function() {\r\n          contextmenu.style.display = \"none\"\r\n        }\r\n      }\r\n    },\r\n    clearSelected() {\r\n      var selected = document.getElementsByClassName(\"selected\")\r\n      for (var i = selected.length-1; i >= 0; i--) {\r\n        selected[0].classList.remove(\"selected\")\r\n      }\r\n      this.selectedAttachmentId = ''\r\n    },\r\n    deleteAttachment() {\r\n      this.closeModal()\r\n      this.$store.dispatch('deleteAttachment', this.selectedAttachmentId)\r\n      this.clearSelected()\r\n    },\r\n    openAttachment() {\r\n      this.$store.dispatch('getAttachment', this.selectedAttachmentId)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '../../assets/styles/theme.scss';\r\n@import '../../assets/styles/main.scss';\r\n\r\n.event-page {\r\n  background-color: $event-bg;\r\n  margin-top: 20px;\r\n  // height: stretch;\r\n  .event-head {\r\n    padding: 20px;\r\n    box-shadow: 0 3px 6px rgba(0,0,0,.16);\r\n    @media screen and (max-width: 720px) {\r\n      .event-buttons {\r\n        &:nth-child(n+2) {margin-top: 10px;}\r\n      }\r\n      .event-details {overflow: auto;}\r\n    }\r\n    @media screen and (min-width: 720px) {\r\n      .event-details {overflow: hidden;}\r\n    }\r\n    .event-buttons button {width: 100%;}\r\n    .event-details {\r\n      h1, h3 {\r\n        // font-size: 2.5em;\r\n        display:inline-block;\r\n        &:last-child {\r\n          &::before{\r\n            content: ' - '\r\n          }\r\n        }\r\n      }\r\n      i {font-size: 0.7em;}\r\n    }\r\n  }\r\n  .event-main {\r\n    padding: 20px;\r\n    h1 {display: inline;}\r\n    #controls {\r\n      @media screen and (max-width: 500px) {width: 100%;}\r\n      button {\r\n        &:not(:last-child) {margin-right: 5px;}\r\n        @media screen and (max-width: 500px) {width: 49%;}\r\n      }\r\n    }\r\n    .description {\r\n      #controls {\r\n        float: right;\r\n      }\r\n      textarea {\r\n        border: none;\r\n        overflow: auto;\r\n        -webkit-box-shadow: none;\r\n        -moz-box-shadow: none;\r\n        box-shadow: none;\r\n        &:focus {\r\n          background-color: $edit-description;\r\n          outline: 1px solid gray;\r\n        }\r\n      }\r\n    }\r\n    .attachments {\r\n      ul {\r\n        list-style-type: none;\r\n        padding: 0;\r\n        width: 65%;\r\n        @media screen and (max-width: 768px) {\r\n          width: 100%;\r\n        }\r\n        max-height: 120px;\r\n        overflow-y: auto;\r\n        li {\r\n          span {\r\n            pointer-events: none;\r\n          }\r\n          &:hover {background-color: $attachment-hover;}\r\n          &.selected {\r\n            background-color: $select;\r\n            color: white;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}