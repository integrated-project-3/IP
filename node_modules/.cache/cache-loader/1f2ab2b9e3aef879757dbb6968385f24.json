{"remainingRequest":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\chris\\Desktop\\aileron\\node_modules\\eslint-loader\\index.js??ref--18-0!C:\\Users\\chris\\Desktop\\aileron\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\chris\\Desktop\\aileron\\src\\store\\index.js","mtime":1521570147866},{"path":"C:\\Users\\chris\\Desktop\\aileron\\package.json","mtime":1521302404735},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1520545180302},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\eslint-loader\\index.js","mtime":1519638534000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport mutations from './mutations';\nimport actions from './actions';\nimport getters from './getters';\nimport createPersistedState from 'vuex-persistedstate';\nVue.use(Vuex);\nvar timelines = [];\n\nfunction fetchTimelines() {\n  timelines.splice(0, timelines.length);\n  axios.get('https://b0qss3eydk.execute-api.eu-west-2.amazonaws.com/aileron/GetAllTimelinesAndEvents', {\n    headers: {\n      'X-Api-Key': 'zQfYRHZ1vY3GFnvDZep8Z5KqlHsOKxgf1vnldchF'\n    }\n  }).then(function (data) {\n    for (var i = 0; i < data.data.length; i++) {\n      var item = data.data[i];\n      var timeline = {\n        title: item.Title,\n        date: item.CreationTimeStamp,\n        isDeleted: item.isDeleted,\n        id: item.Id,\n        timelineEvents: item.TimelineEvents,\n        selected: false,\n        _rowVariant: ''\n      };\n      timelines.push(timeline);\n    }\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n\nfetchTimelines();\nvar store = new Vuex.Store({\n  state: {\n    timelines: timelines,\n    currentTimeline: null\n  },\n  mutations: {\n    addTimeline: function addTimeline(state, timeline) {\n      state.timelines.push(timeline);\n    },\n    removeTimeline: function removeTimeline(state, id) {\n      for (var i = 0; i < state.timelines.length; i++) {\n        if (state.timelines[i].id === id) {\n          state.timelines.splice(i, 1);\n          return;\n        }\n      }\n    },\n    setCurrentTimeline: function setCurrentTimeline(state, timeline) {\n      state.currentTimeline = timeline;\n    }\n  },\n  actions: actions,\n  getters: getters,\n  plugins: [createPersistedState({\n    paths: ['currentTimeline']\n  })]\n});\nexport default store;",{"version":3,"sources":["src\\store\\index.js"],"names":["Vue","Vuex","axios","mutations","actions","getters","createPersistedState","use","timelines","fetchTimelines","splice","length","get","headers","then","data","i","item","timeline","title","Title","date","CreationTimeStamp","isDeleted","id","Id","timelineEvents","TimelineEvents","selected","_rowVariant","push","catch","console","log","error","store","Store","state","currentTimeline","addTimeline","removeTimeline","setCurrentTimeline","plugins","paths"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,oBAAP,MAAiC,qBAAjC;AAEAN,IAAIO,GAAJ,CAAQN,IAAR;AAEA,IAAIO,YAAY,EAAhB;;AAEA,SAASC,cAAT,GAA0B;AACxBD,YAAUE,MAAV,CAAiB,CAAjB,EAAoBF,UAAUG,MAA9B;AACAT,QAAMU,GAAN,CAAU,yFAAV,EAAqG;AACnGC,aAAS;AACP,mBAAa;AADN;AAD0F,GAArG,EAKCC,IALD,CAKM,UAACC,IAAD,EAAU;AACd,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,KAAKA,IAAL,CAAUJ,MAA9B,EAAsCK,GAAtC,EAA2C;AACzC,UAAIC,OAAOF,KAAKA,IAAL,CAAUC,CAAV,CAAX;AACA,UAAIE,WAAW;AACZC,eAAOF,KAAKG,KADA;AAEZC,cAAMJ,KAAKK,iBAFC;AAGZC,mBAAWN,KAAKM,SAHJ;AAIZC,YAAIP,KAAKQ,EAJG;AAKZC,wBAAgBT,KAAKU,cALT;AAMZC,kBAAU,KANE;AAOZC,qBAAa;AAPD,OAAf;AASArB,gBAAUsB,IAAV,CAAeZ,QAAf;AACD;AACF,GAnBD,EAoBCa,KApBD,CAoBO,iBAAS;AACdC,YAAQC,GAAR,CAAYC,KAAZ;AACD,GAtBD;AAuBD;;AAEDzB;AAEA,IAAM0B,QAAQ,IAAIlC,KAAKmC,KAAT,CAAe;AAC3BC,SAAO;AACL7B,wBADK;AAEL8B,qBAAiB;AAFZ,GADoB;AAK3BnC,aAAW;AACToC,eADS,uBACIF,KADJ,EACWnB,QADX,EACqB;AAC5BmB,YAAM7B,SAAN,CAAgBsB,IAAhB,CAAqBZ,QAArB;AACD,KAHQ;AAITsB,kBAJS,0BAIMH,KAJN,EAIab,EAJb,EAIiB;AACxB,WAAK,IAAIR,IAAI,CAAb,EAAgBA,IAAIqB,MAAM7B,SAAN,CAAgBG,MAApC,EAA4CK,GAA5C,EAAiD;AAC/C,YAAIqB,MAAM7B,SAAN,CAAgBQ,CAAhB,EAAmBQ,EAAnB,KAA0BA,EAA9B,EAAkC;AAChCa,gBAAM7B,SAAN,CAAgBE,MAAhB,CAAuBM,CAAvB,EAAyB,CAAzB;AACA;AACD;AACF;AACF,KAXQ;AAYTyB,sBAZS,8BAYUJ,KAZV,EAYiBnB,QAZjB,EAY2B;AAClCmB,YAAMC,eAAN,GAAwBpB,QAAxB;AACD;AAdQ,GALgB;AAqB3Bd,kBArB2B;AAsB3BC,kBAtB2B;AAuB3BqC,WAAS,CAACpC,qBAAqB;AAC7BqC,WAAO,CAAC,iBAAD;AADsB,GAArB,CAAD;AAvBkB,CAAf,CAAd;AA4BA,eAAeR,KAAf","file":"C:\\Users\\chris\\Desktop\\aileron\\src\\store\\index.js","sourceRoot":"C:\\Users\\chris\\Desktop\\aileron","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport axios from 'axios'\r\nimport mutations from './mutations'\r\nimport actions from './actions'\r\nimport getters from './getters'\r\nimport createPersistedState from 'vuex-persistedstate'\r\n\r\nVue.use(Vuex)\r\n\r\nvar timelines = []\r\n\r\nfunction fetchTimelines() {\r\n  timelines.splice(0, timelines.length)\r\n  axios.get('https://b0qss3eydk.execute-api.eu-west-2.amazonaws.com/aileron/GetAllTimelinesAndEvents', {\r\n    headers: {\r\n      'X-Api-Key': 'zQfYRHZ1vY3GFnvDZep8Z5KqlHsOKxgf1vnldchF'\r\n    }\r\n  })\r\n  .then((data) => {\r\n    for (var i = 0; i < data.data.length; i++) {\r\n      var item = data.data[i]\r\n      var timeline = {\r\n         title: item.Title,\r\n         date: item.CreationTimeStamp,\r\n         isDeleted: item.isDeleted,\r\n         id: item.Id,\r\n         timelineEvents: item.TimelineEvents,\r\n         selected: false,\r\n         _rowVariant: ''\r\n      }\r\n      timelines.push(timeline)\r\n    }\r\n  })\r\n  .catch(error => {\r\n    console.log(error)\r\n  })\r\n}\r\n\r\nfetchTimelines()\r\n\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    timelines,\r\n    currentTimeline: null\r\n  },\r\n  mutations: {\r\n    addTimeline (state, timeline) {\r\n      state.timelines.push(timeline)\r\n    },\r\n    removeTimeline(state, id) {\r\n      for (var i = 0; i < state.timelines.length; i++) {\r\n        if (state.timelines[i].id === id) {\r\n          state.timelines.splice(i,1)\r\n          return\r\n        }\r\n      }\r\n    },\r\n    setCurrentTimeline(state, timeline) {\r\n      state.currentTimeline = timeline\r\n    }\r\n  },\r\n  actions,\r\n  getters,\r\n  plugins: [createPersistedState({\r\n    paths: ['currentTimeline']\r\n })]\r\n})\r\n\r\nexport default store\r\n"]}]}