{"remainingRequest":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\chris\\Desktop\\aileron\\node_modules\\eslint-loader\\index.js??ref--18-0!C:\\Users\\chris\\Desktop\\aileron\\src\\scripts\\init-aws.js","dependencies":[{"path":"C:\\Users\\chris\\Desktop\\aileron\\src\\scripts\\init-aws.js","mtime":1520620691498},{"path":"C:\\Users\\chris\\Desktop\\aileron\\package.json","mtime":1520566757197},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1520545180302},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\eslint-loader\\index.js","mtime":1519638534000}],"contextDependencies":[],"result":["var aws = require('aws-sdk/dist/aws-sdk-react-native');\n\nvar region = 'eu-west-2';\nvar identityPoolId = 'eu-west-2:08d581de-ebd5-4b08-9a05-a19aadcca3bc';\naws.config.update({\n  region: region\n});\naws.config.credentials = new aws.CognitoIdentityCredentials({\n  IdentityPoolId: identityPoolId\n});\nvar lambda = new aws.Lambda({\n  region: region,\n  apiVersion: '2015-03-31'\n});\nvar pullParams = {\n  FunctionName: 'Aileron-GetTimelines',\n  InvocationType: 'RequestResponse',\n  LogType: 'None'\n};\nvar response = '';\nlambda.invoke(pullParams, function (error, data) {\n  if (error) {\n    console.log(error);\n  } else {\n    response = JSON.parse(data.Payload);\n    console.log(\"inside else\", response);\n  }\n\n  response = JSON.parse(data.Payload);\n});\nconsole.log(response);",{"version":3,"sources":["src\\scripts\\init-aws.js"],"names":["aws","require","region","identityPoolId","config","update","credentials","CognitoIdentityCredentials","IdentityPoolId","lambda","Lambda","apiVersion","pullParams","FunctionName","InvocationType","LogType","response","invoke","error","data","console","log","JSON","parse","Payload"],"mappings":"AAAA,IAAIA,MAAMC,QAAQ,mCAAR,CAAV;;AAEA,IAAMC,SAAS,WAAf;AACA,IAAMC,iBAAiB,gDAAvB;AAEAH,IAAII,MAAJ,CAAWC,MAAX,CAAkB;AAACH,UAAQA;AAAT,CAAlB;AACAF,IAAII,MAAJ,CAAWE,WAAX,GAAyB,IAAIN,IAAIO,0BAAR,CAAmC;AAACC,kBAAgBL;AAAjB,CAAnC,CAAzB;AAEA,IAAIM,SAAS,IAAIT,IAAIU,MAAR,CAAe;AAACR,UAAQA,MAAT;AAAiBS,cAAY;AAA7B,CAAf,CAAb;AAEA,IAAIC,aAAa;AACfC,gBAAc,sBADC;AAEfC,kBAAgB,iBAFD;AAGfC,WAAS;AAHM,CAAjB;AAMA,IAAIC,WAAW,EAAf;AAEAP,OAAOQ,MAAP,CAAcL,UAAd,EAA0B,UAASM,KAAT,EAAgBC,IAAhB,EAAsB;AAC9C,MAAID,KAAJ,EAAW;AACTE,YAAQC,GAAR,CAAYH,KAAZ;AACD,GAFD,MAEO;AACLF,eAAWM,KAAKC,KAAL,CAAWJ,KAAKK,OAAhB,CAAX;AACAJ,YAAQC,GAAR,CAAY,aAAZ,EAA2BL,QAA3B;AACD;;AACDA,aAAWM,KAAKC,KAAL,CAAWJ,KAAKK,OAAhB,CAAX;AACD,CARD;AAUAJ,QAAQC,GAAR,CAAYL,QAAZ","file":"C:\\Users\\chris\\Desktop\\aileron\\src\\scripts\\init-aws.js","sourceRoot":"C:\\Users\\chris\\Desktop\\aileron","sourcesContent":["var aws = require('aws-sdk/dist/aws-sdk-react-native');\r\n\r\nconst region = 'eu-west-2'\r\nconst identityPoolId = 'eu-west-2:08d581de-ebd5-4b08-9a05-a19aadcca3bc'\r\n\r\naws.config.update({region: region})\r\naws.config.credentials = new aws.CognitoIdentityCredentials({IdentityPoolId: identityPoolId});\r\n\r\nvar lambda = new aws.Lambda({region: region, apiVersion: '2015-03-31'})\r\n\r\nvar pullParams = {\r\n  FunctionName: 'Aileron-GetTimelines',\r\n  InvocationType: 'RequestResponse',\r\n  LogType: 'None'\r\n}\r\n\r\nvar response = ''\r\n\r\nlambda.invoke(pullParams, function(error, data) {\r\n  if (error) {\r\n    console.log(error)\r\n  } else {\r\n    response = JSON.parse(data.Payload)\r\n    console.log(\"inside else\", response)\r\n  }\r\n  response = JSON.parse(data.Payload)\r\n})\r\n\r\nconsole.log(response)\r\n"]}]}