{"remainingRequest":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\chris\\Desktop\\aileron\\node_modules\\eslint-loader\\index.js??ref--18-0!C:\\Users\\chris\\Desktop\\aileron\\src\\main.js","dependencies":[{"path":"C:\\Users\\chris\\Desktop\\aileron\\src\\main.js","mtime":1522167598666},{"path":"C:\\Users\\chris\\Desktop\\aileron\\package.json","mtime":1521860414338},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1520545180302},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\eslint-loader\\index.js","mtime":1519638534000}],"contextDependencies":[],"result":["import Vue from 'vue/dist/vue.js';\nimport app from './app.vue';\nimport BootstrapVue from 'bootstrap-vue';\nimport VueRouter from 'vue-router';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-vue/dist/bootstrap-vue.css';\nimport Vuex from 'vuex';\nimport createPersistedState from 'vuex-persistedstate';\nimport router from './router'; // import store from './store'\n// import VueMaterial from 'vue-material'\n// import 'vue-material/dist/vue-material.min.css'\n\nimport { getAll, createTimeline as _createTimeline, deleteTimeline as _deleteTimeline, changeTimelineTitle as _changeTimelineTitle, createEvent, linkEventToTimeline, unlinkEventFromEvent, linkEventToEvent } from './scripts/api';\nVue.use(BootstrapVue);\nVue.use(VueRouter);\nVue.use(Vuex); // Vue.use(VueMaterial)\n\nVue.config.productionTip = false;\nvar timelines = [];\nvar store = new Vuex.Store({\n  state: {\n    timelines: timelines,\n    currentTimeline: null\n  },\n  mutations: {\n    addTimeline: function addTimeline(state, timeline) {\n      state.timelines.push(timeline);\n    },\n    addEvent: function addEvent(state, event) {\n      // state.timelines[state.timelines.indexOf(state.currentTimeline)].TimelineEvents.push(event)\n      state.currentTimeline.timelineEvents.push(event); // console.log(state.currentTimeline)\n      // console.log(event)\n    },\n    removeTimeline: function removeTimeline(state, id) {\n      for (var i = 0; i < state.timelines.length; i++) {\n        if (state.timelines[i].id === id) {\n          state.timelines.splice(i, 1);\n          return;\n        }\n      }\n    },\n    setCurrentTimeline: function setCurrentTimeline(state, timeline) {\n      state.currentTimeline = timeline;\n    },\n    updateTimelineTitle: function updateTimelineTitle(state, payload) {\n      for (var i = 0; i < state.timelines.length; i++) {\n        if (state.timelines[i].id === payload.id) {\n          state.timelines[i].title = payload.title;\n          return;\n        }\n      }\n    }\n  },\n  actions: {\n    createTimeline: function createTimeline(_ref, title) {\n      var commit = _ref.commit;\n\n      _createTimeline(title).then(function (response) {\n        var item = response.data;\n        var timeline = {\n          title: item.Title,\n          date: item.CreationTimeStamp,\n          isDeleted: item.IsDeleted,\n          id: item.Id,\n          selected: false,\n          _rowVariant: ''\n        };\n        timeline.timelineEvents = [];\n        commit('addTimeline', timeline);\n      });\n    },\n    deleteTimeline: function deleteTimeline(_ref2, id) {\n      var commit = _ref2.commit;\n\n      _deleteTimeline(id).then(function () {\n        commit('removeTimeline', id);\n      });\n    },\n    deleteSelectedTimelines: function deleteSelectedTimelines(_ref3) {\n      var state = _ref3.state;\n\n      /*\n        Filter returns an array of all selected timelines.\n        Foreach loops through that returned array,\n        using 'e' as the current timline.\n        Dispatch calls deleteTimeline action.\n        This at the end allows the use of this inside the forEach function.\n      */\n      state.timelines.filter(function (t) {\n        return t.selected;\n      }).forEach(function (e) {\n        this.dispatch('deleteTimeline', e.id);\n      }, this);\n    },\n    changeTimelineTitle: function changeTimelineTitle(_ref4, title) {\n      var commit = _ref4.commit;\n      var id = this.getters.selectedTimelines[0].id;\n\n      _changeTimelineTitle(id, title).then(function () {\n        commit('updateTimelineTitle', {\n          id: id,\n          title: title\n        });\n      });\n    },\n    createEventExact: function createEventExact(_ref5, payload) {\n      var state = _ref5.state,\n          commit = _ref5.commit;\n      var newEvent = {};\n      createEvent(payload).then(function (response) {\n        newEvent = response.data;\n        newEvent.LinkedTimelineEventIds = [];\n        linkEventToTimeline(newEvent.Id, state.currentTimeline.id).then(function () {\n          commit('addEvent', newEvent);\n        });\n      });\n    },\n    createEventBA: function createEventBA(_ref6, payload) {\n      var state = _ref6.state,\n          commit = _ref6.commit;\n      var newEvent = {};\n      createEvent(payload).then(function (response) {\n        newEvent = response.data;\n        linkEventToTimeline(newEvent.Id, state.currentTimeline.id).then(function () {\n          if (payload.beforeAfter === 'before') {\n            var index = state.currentTimeline.timelineEvents.map(function (e) {\n              if (e.LinkedTimelineEventIds != null) if (e.LinkedTimelineEventIds[0] != null) return e.LinkedTimelineEventIds[0];\n            }).indexOf(payload.eventId);\n\n            if (index != -1) {\n              unlinkEventFromEvent(state.currentTimeline.timelineEvents[index].Id, payload.eventId);\n              linkEventToEvent(state.currentTimeline.timelineEvents[index].Id, newEvent.Id);\n              state.currentTimeline.timelineEvents[index].LinkedTimelineEventIds[0] = newEvent.Id;\n            }\n\n            linkEventToEvent(newEvent.Id, payload.eventId).then(function () {\n              newEvent.LinkedTimelineEventIds = [];\n              newEvent.LinkedTimelineEventIds.push(payload.eventId);\n              commit('addEvent', newEvent);\n            });\n          } else if (payload.beforeAfter === 'after') {\n            var _index = state.currentTimeline.timelineEvents.map(function (e) {\n              return e.Id;\n            }).indexOf(payload.eventId);\n\n            var item = state.currentTimeline.timelineEvents[_index];\n\n            if (item.LinkedTimelineEventIds != null) {\n              if (item.LinkedTimelineEventIds[0] != null) {\n                unlinkEventFromEvent(item.Id, item.LinkedTimelineEventIds[0]);\n                linkEventToEvent(newEvent.Id, item.Id);\n              }\n            }\n\n            linkEventToEvent(item.Id, newEvent.Id).then(function () {\n              item.LinkedTimelineEventIds = [];\n              item.LinkedTimelineEventIds.push(newEvent.Id);\n              commit('addEvent', newEvent);\n            });\n          }\n        });\n      });\n    }\n  },\n  getters: {\n    selectedTimelines: function selectedTimelines(state) {\n      return state.timelines.filter(function (t) {\n        return t.selected;\n      });\n    }\n  },\n  plugins: [createPersistedState({\n    paths: ['currentTimeline']\n  })]\n});\nnew Vue({\n  render: function render(h) {\n    return h(app);\n  },\n  router: router,\n  store: store,\n  methods: {\n    fetchTimelines: function fetchTimelines() {\n      timelines.splice(0, timelines.length);\n      var get = getAll();\n      get.then(function (data) {\n        for (var i = 0; i < data.data.Timelines.length; i++) {\n          var item = data.data.Timelines[i];\n          var timeline = {\n            title: item.Title,\n            date: item.CreationTimeStamp,\n            isDeleted: item.isDeleted,\n            id: item.Id,\n            timelineEvents: item.TimelineEvents,\n            selected: false,\n            _rowVariant: ''\n          };\n          timelines.push(timeline);\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.fetchTimelines();\n  }\n}).$mount('#app');",{"version":3,"sources":["src\\main.js"],"names":["Vue","app","BootstrapVue","VueRouter","Vuex","createPersistedState","router","getAll","createTimeline","deleteTimeline","changeTimelineTitle","createEvent","linkEventToTimeline","unlinkEventFromEvent","linkEventToEvent","use","config","productionTip","timelines","store","Store","state","currentTimeline","mutations","addTimeline","timeline","push","addEvent","event","timelineEvents","removeTimeline","id","i","length","splice","setCurrentTimeline","updateTimelineTitle","payload","title","actions","commit","then","item","response","data","Title","date","CreationTimeStamp","isDeleted","IsDeleted","Id","selected","_rowVariant","deleteSelectedTimelines","filter","t","forEach","e","dispatch","getters","selectedTimelines","createEventExact","newEvent","LinkedTimelineEventIds","createEventBA","beforeAfter","index","map","indexOf","eventId","plugins","paths","render","h","methods","fetchTimelines","get","Timelines","TimelineEvents","mounted","$mount"],"mappings":"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","file":"C:\\Users\\chris\\Desktop\\aileron\\src\\main.js","sourceRoot":"C:\\Users\\chris\\Desktop\\aileron","sourcesContent":["import Vue from 'vue/dist/vue.js'\nimport app from './app.vue'\nimport BootstrapVue from 'bootstrap-vue'\nimport VueRouter from 'vue-router'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\nimport Vuex from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\nimport router from './router'\n// import store from './store'\n// import VueMaterial from 'vue-material'\n// import 'vue-material/dist/vue-material.min.css'\nimport {getAll, createTimeline, deleteTimeline, changeTimelineTitle, createEvent, linkEventToTimeline, unlinkEventFromEvent, linkEventToEvent} from './scripts/api'\n\nVue.use(BootstrapVue)\nVue.use(VueRouter)\nVue.use(Vuex)\n// Vue.use(VueMaterial)\n\nVue.config.productionTip = false\n\nvar timelines = []\n\nconst store = new Vuex.Store({\n  state: {\n    timelines,\n    currentTimeline: null\n  },\n  mutations: {\n    addTimeline (state, timeline) {\n      state.timelines.push(timeline)\n    },\n    addEvent(state, event) {\n      // state.timelines[state.timelines.indexOf(state.currentTimeline)].TimelineEvents.push(event)\n      state.currentTimeline.timelineEvents.push(event)\n      // console.log(state.currentTimeline)\n      // console.log(event)\n    },\n    removeTimeline(state, id) {\n      for (var i = 0; i < state.timelines.length; i++) {\n        if (state.timelines[i].id === id) {\n          state.timelines.splice(i,1)\n          return\n        }\n      }\n    },\n    setCurrentTimeline(state, timeline) {\n      state.currentTimeline = timeline\n    },\n    updateTimelineTitle(state, payload) {\n      for (var i = 0; i < state.timelines.length; i++) {\n        if (state.timelines[i].id === payload.id) {\n          state.timelines[i].title = payload.title\n          return\n        }\n      }\n    }\n  },\n  actions: {\n    createTimeline ({ commit }, title) {\n      createTimeline(title).then(response => {\n        var item = response.data\n        var timeline = {\n           title: item.Title,\n           date: item.CreationTimeStamp,\n           isDeleted: item.IsDeleted,\n           id: item.Id,\n           selected: false,\n           _rowVariant: ''\n        }\n        timeline.timelineEvents = []\n        commit('addTimeline', timeline)\n      })\n    },\n    deleteTimeline({ commit }, id) {\n      deleteTimeline(id).then(() => {\n        commit('removeTimeline', id)\n      })\n    },\n    deleteSelectedTimelines({ state }) {\n      /*\n        Filter returns an array of all selected timelines.\n        Foreach loops through that returned array,\n        using 'e' as the current timline.\n        Dispatch calls deleteTimeline action.\n        This at the end allows the use of this inside the forEach function.\n      */\n      state.timelines.filter(t => t.selected).forEach(function(e){this.dispatch('deleteTimeline',e.id)}, this)\n    },\n    changeTimelineTitle({ commit }, title) {\n      var id = this.getters.selectedTimelines[0].id\n      changeTimelineTitle(id, title).then(() => {\n        commit('updateTimelineTitle', {id, title})\n      })\n    },\n    createEventExact ({state, commit}, payload) {\n      var newEvent = {}\n      createEvent(payload).then(response => {\n        newEvent = response.data\n        newEvent.LinkedTimelineEventIds = []\n        linkEventToTimeline(newEvent.Id, state.currentTimeline.id).then(() => {\n          commit('addEvent', newEvent)\n        })\n      })\n    },\n    createEventBA({state, commit}, payload) {\n      var newEvent = {}\n      createEvent(payload).then(response => {\n        newEvent = response.data\n        linkEventToTimeline(newEvent.Id, state.currentTimeline.id).then(() => {\n          if (payload.beforeAfter === 'before') {\n            let index = state.currentTimeline.timelineEvents.map(function(e) {if(e.LinkedTimelineEventIds != null)if(e.LinkedTimelineEventIds[0] != null)return e.LinkedTimelineEventIds[0]}).indexOf(payload.eventId)\n            if (index != -1) {\n              unlinkEventFromEvent(state.currentTimeline.timelineEvents[index].Id, payload.eventId)\n              linkEventToEvent(state.currentTimeline.timelineEvents[index].Id, newEvent.Id)\n              state.currentTimeline.timelineEvents[index].LinkedTimelineEventIds[0] = newEvent.Id\n            }\n            linkEventToEvent(newEvent.Id, payload.eventId).then(() => {\n              newEvent.LinkedTimelineEventIds = []\n              newEvent.LinkedTimelineEventIds.push(payload.eventId)\n              commit('addEvent', newEvent)\n            })\n          } else if (payload.beforeAfter === 'after') {\n            let index = state.currentTimeline.timelineEvents.map(function(e) {return e.Id}).indexOf(payload.eventId)\n            let item = state.currentTimeline.timelineEvents[index]\n            if (item.LinkedTimelineEventIds != null) {\n              if (item.LinkedTimelineEventIds[0] != null) {\n                unlinkEventFromEvent(item.Id, item.LinkedTimelineEventIds[0])\n                linkEventToEvent(newEvent.Id, item.Id)\n              }\n            }\n            linkEventToEvent(item.Id, newEvent.Id).then(() => {\n              item.LinkedTimelineEventIds = []\n              item.LinkedTimelineEventIds.push(newEvent.Id)\n              commit('addEvent', newEvent)\n            })\n          }\n        })\n      })\n    }\n  },\n  getters: {\n    selectedTimelines: (state) => {\n      return state.timelines.filter(t => t.selected)\n    }\n  },\n  plugins: [createPersistedState({\n    paths: ['currentTimeline']\n })]\n})\n\nnew Vue({\n  render: h => h(app),\n  router,\n  store,\n  methods: {\n    fetchTimelines() {\n      timelines.splice(0, timelines.length)\n      var get = getAll()\n      get.then((data) => {\n        for (var i = 0; i < data.data.Timelines.length; i++) {\n          var item = data.data.Timelines[i]\n          var timeline = {\n             title: item.Title,\n             date: item.CreationTimeStamp,\n             isDeleted: item.isDeleted,\n             id: item.Id,\n             timelineEvents: item.TimelineEvents,\n             selected: false,\n             _rowVariant: ''\n          }\n          timelines.push(timeline)\n        }\n      })\n    }\n  },\n  mounted() {\n    this.fetchTimelines()\n  }\n}).$mount('#app')\n"]}]}