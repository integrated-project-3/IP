{"remainingRequest":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\chris\\Desktop\\aileron\\node_modules\\eslint-loader\\index.js??ref--18-0!C:\\Users\\chris\\Desktop\\aileron\\src\\main.js","dependencies":[{"path":"C:\\Users\\chris\\Desktop\\aileron\\src\\main.js","mtime":1523357037260},{"path":"C:\\Users\\chris\\Desktop\\aileron\\package.json","mtime":1522176194972},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1520545180302},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\eslint-loader\\index.js","mtime":1519638534000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.promise\";\nimport Vue from 'vue/dist/vue.js';\nimport app from './app.vue';\nimport BootstrapVue from 'bootstrap-vue';\nimport VueRouter from 'vue-router';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-vue/dist/bootstrap-vue.css';\nimport Vuex from 'vuex';\nimport createPersistedState from 'vuex-persistedstate';\nimport router from './router';\nimport { getAll, createTimeline as _createTimeline, deleteTimeline as _deleteTimeline, changeTimelineTitle as _changeTimelineTitle, createEvent, linkEventToTimeline, unlinkEventFromEvent, linkEventToEvent, deleteEvent as _deleteEvent, changeEventTitle as _changeEventTitle, unlinkEventFromTimeline, changeEventDescription as _changeEventDescription } from './scripts/api';\nVue.use(BootstrapVue);\nVue.use(VueRouter);\nVue.use(Vuex);\nVue.config.productionTip = false;\nvar timelines = [];\nvar store = new Vuex.Store({\n  state: {\n    timelines: timelines,\n    currentTimeline: null,\n    currentEvent: null\n  },\n  mutations: {\n    addTimeline: function addTimeline(state, timeline) {\n      state.timelines.push(timeline);\n    },\n    addEvent: function addEvent(state, event) {\n      state.currentTimeline.timelineEvents.push(event);\n    },\n    removeTimeline: function removeTimeline(state, id) {\n      for (var i = 0; i < state.timelines.length; i++) {\n        if (state.timelines[i].id === id) {\n          state.timelines.splice(i, 1);\n          if (state.currentTimeline != null) if (state.currentTimeline.id === id) state.currentTimeline = null;\n          return;\n        }\n      }\n    },\n    setCurrentTimeline: function setCurrentTimeline(state, timeline) {\n      state.currentTimeline = timeline;\n    },\n    clearCurrentTimeline: function clearCurrentTimeline(state) {\n      state.currentTimeline = null;\n    },\n    setCurrentEvent: function setCurrentEvent(state, event) {\n      state.currentEvent = event;\n    },\n    clearCurrentEvent: function clearCurrentEvent(state) {\n      state.currentEvent = null;\n    },\n    updateTimelineTitle: function updateTimelineTitle(state, payload) {\n      for (var i = 0; i < state.timelines.length; i++) {\n        if (state.timelines[i].id === payload.id) {\n          state.timelines[i].title = payload.title;\n\n          if (payload.id === state.currentTimeline.id) {\n            state.currentTimeline.title = payload.title;\n          }\n\n          return;\n        }\n      }\n    },\n    removeEvent: function removeEvent(state, id) {\n      for (var i = 0; i < state.currentTimeline.timelineEvents.length; i++) {\n        if (state.currentTimeline.timelineEvents[i].Id === id) {\n          state.currentTimeline.timelineEvents.splice(i, 1);\n          if (state.currentEvent != null) if (state.currentEvent.Id === id) state.currentEvent = null;\n          return;\n        }\n      }\n    },\n    updateEventTitle: function updateEventTitle(state, payload) {\n      for (var i = 0; i < state.currentTimeline.timelineEvents.length; i++) {\n        if (state.currentTimeline.timelineEvents[i].Id === payload.id) {\n          state.currentTimeline.timelineEvents[i].Title = payload.title;\n\n          if (payload.id === state.currentEvent.Id) {\n            state.currentEvent.Title = payload.title;\n          }\n\n          return;\n        }\n      }\n    },\n    updateEventDescription: function updateEventDescription(state, payload) {\n      for (var i = 0; i < state.currentTimeline.timelineEvents.length; i++) {\n        if (state.currentTimeline.timelineEvents[i].Id === payload.id) {\n          state.currentTimeline.timelineEvents[i].Description = payload.description;\n\n          if (payload.id === state.currentEvent.Id) {\n            state.currentEvent.Description = payload.description;\n          }\n\n          return;\n        }\n      }\n    }\n  },\n  actions: {\n    createTimeline: function createTimeline(_ref, title) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve) {\n        _createTimeline(title).then(function (response) {\n          var item = response.data;\n          var timeline = {\n            title: item.Title,\n            date: item.CreationTimeStamp,\n            isDeleted: item.IsDeleted,\n            id: item.Id,\n            selected: false,\n            _rowVariant: ''\n          };\n          timeline.timelineEvents = [];\n          commit('addTimeline', timeline);\n          resolve(timeline);\n        });\n      });\n    },\n    deleteTimeline: function deleteTimeline(_ref2, id) {\n      var commit = _ref2.commit;\n\n      _deleteTimeline(id).then(function () {\n        commit('removeTimeline', id);\n      });\n    },\n    deleteSelectedTimelines: function deleteSelectedTimelines(_ref3) {\n      var state = _ref3.state;\n\n      /*\n        Filter returns an array of all selected timelines.\n        Foreach loops through that returned array,\n        using 'e' as the current timline.\n        Dispatch calls deleteTimeline action.\n        This at the end allows the use of this inside the forEach function.\n      */\n      state.timelines.filter(function (t) {\n        return t.selected;\n      }).forEach(function (e) {\n        this.dispatch('deleteTimeline', e.id);\n      }, this);\n    },\n    changeTimelineTitle: function changeTimelineTitle(_ref4, payload) {\n      var commit = _ref4.commit;\n      var id = payload.id;\n      var title = payload.title;\n\n      _changeTimelineTitle(id, title).then(function () {\n        commit('updateTimelineTitle', {\n          id: id,\n          title: title\n        });\n      });\n    },\n    createEventExact: function createEventExact(_ref5, payload) {\n      var state = _ref5.state,\n          commit = _ref5.commit;\n      var newEvent = {};\n      createEvent(payload).then(function (response) {\n        newEvent = response.data;\n        newEvent.LinkedTimelineEventIds = [];\n        linkEventToTimeline(newEvent.Id, state.currentTimeline.id).then(function () {\n          commit('addEvent', newEvent);\n        });\n      });\n    },\n    createEventBA: function createEventBA(_ref6, payload) {\n      var state = _ref6.state,\n          commit = _ref6.commit;\n      var newEvent = {};\n      createEvent(payload).then(function (response) {\n        newEvent = response.data;\n        linkEventToTimeline(newEvent.Id, state.currentTimeline.id).then(function () {\n          if (payload.beforeAfter === 'before') {\n            /*\n              Create a new timeline, create Event 1 at 12:00.\n              Create Event 2 set as before Event 1.\n              Now if you create Event 3 and also set this as before Event 1,\n              this will find that Event 2 already has a link to Event 1.\n              Replaces Event 2's link to Event 1 with a link to Event 3.\n              Links Event 3 to Event 1.\n              index would be the index of Event 2 in that example\n            */\n            var index = state.currentTimeline.timelineEvents.map(function (e) {\n              if (e.LinkedTimelineEventIds != null) if (e.LinkedTimelineEventIds[0] != null) return e.LinkedTimelineEventIds[0];\n            }).indexOf(payload.eventId);\n\n            if (index != -1) {\n              unlinkEventFromEvent(state.currentTimeline.timelineEvents[index].Id, payload.eventId);\n              linkEventToEvent(state.currentTimeline.timelineEvents[index].Id, newEvent.Id);\n              state.currentTimeline.timelineEvents[index].LinkedTimelineEventIds[0] = newEvent.Id;\n            }\n\n            linkEventToEvent(newEvent.Id, payload.eventId).then(function () {\n              newEvent.LinkedTimelineEventIds = [];\n              newEvent.LinkedTimelineEventIds.push(payload.eventId);\n              commit('addEvent', newEvent);\n            });\n          } else if (payload.beforeAfter === 'after') {\n            var _index = state.currentTimeline.timelineEvents.map(function (e) {\n              return e.Id;\n            }).indexOf(payload.eventId);\n\n            var item = state.currentTimeline.timelineEvents[_index];\n\n            if (item.LinkedTimelineEventIds != null) {\n              if (item.LinkedTimelineEventIds[0] != null) {\n                linkEventToEvent(newEvent.Id, item.LinkedTimelineEventIds[0]);\n                unlinkEventFromEvent(item.Id, item.LinkedTimelineEventIds[0]);\n                newEvent.LinkedTimelineEventIds = [];\n                newEvent.LinkedTimelineEventIds.push(item.LinkedTimelineEventIds[0]);\n              }\n            }\n\n            linkEventToEvent(item.Id, newEvent.Id).then(function () {\n              item.LinkedTimelineEventIds = [];\n              item.LinkedTimelineEventIds.push(newEvent.Id);\n              commit('addEvent', newEvent);\n            });\n          }\n        });\n      });\n    },\n    deleteEvent: function deleteEvent(_ref7, id) {\n      var state = _ref7.state,\n          commit = _ref7.commit;\n      var eventBeforeIndex = state.currentTimeline.timelineEvents.map(function (e) {\n        if (e.LinkedTimelineEventIds != null) if (e.LinkedTimelineEventIds[0] != null) return e.LinkedTimelineEventIds[0];\n      }).indexOf(id);\n      var ev = state.currentTimeline.timelineEvents.filter(function (e) {\n        return e.Id === id;\n      })[0];\n      var eventAfterId = '';\n\n      if (ev.LinkedTimelineEventIds != null) {\n        if (ev.LinkedTimelineEventIds[0] != null) {\n          eventAfterId = ev.LinkedTimelineEventIds[0];\n        }\n      }\n\n      if (eventBeforeIndex != -1) {\n        unlinkEventFromEvent(state.currentTimeline.timelineEvents[eventBeforeIndex].Id, id).then(function () {\n          if (eventAfterId != '') {\n            linkEventToEvent(state.currentTimeline.timelineEvents[eventBeforeIndex].Id, eventAfterId);\n            state.currentTimeline.timelineEvents[eventBeforeIndex].LinkedTimelineEventIds[0] = eventAfterId;\n          } else {\n            state.currentTimeline.timelineEvents[eventBeforeIndex].LinkedTimelineEventIds[0].slice(0, 1);\n          }\n        });\n      }\n\n      _deleteEvent(id).then(function () {\n        unlinkEventFromTimeline(id, state.currentTimeline.id).then(function () {\n          commit('removeEvent', id);\n        });\n      });\n    },\n    changeEventTitle: function changeEventTitle(_ref8, payload) {\n      var commit = _ref8.commit;\n      var id = payload.id;\n      var title = payload.title;\n\n      _changeEventTitle(id, title).then(function () {\n        commit('updateEventTitle', {\n          id: id,\n          title: title\n        });\n      });\n    },\n    changeEventDescription: function changeEventDescription(_ref9, payload) {\n      var commit = _ref9.commit;\n      var id = payload.id;\n      var description = payload.description;\n\n      _changeEventDescription(id, description).then(function () {\n        commit('updateEventDescription', {\n          id: id,\n          description: description\n        });\n      });\n    }\n  },\n  getters: {\n    selectedTimelines: function selectedTimelines(state) {\n      return state.timelines.filter(function (t) {\n        return t.selected;\n      });\n    }\n  },\n  plugins: [createPersistedState({\n    paths: ['currentTimeline', 'currentEvent']\n  })]\n});\nnew Vue({\n  render: function render(h) {\n    return h(app);\n  },\n  router: router,\n  store: store,\n  methods: {\n    fetchTimelines: function fetchTimelines() {\n      var _this = this;\n\n      timelines.splice(0, timelines.length);\n      var get = getAll();\n      get.then(function (data) {\n        for (var i = 0; i < data.data.Timelines.length; i++) {\n          var item = data.data.Timelines[i];\n          var timeline = {\n            title: item.Title,\n            date: item.CreationTimeStamp,\n            isDeleted: item.isDeleted,\n            id: item.Id,\n            timelineEvents: item.TimelineEvents,\n            selected: false,\n            _rowVariant: ''\n          };\n          timelines.push(timeline);\n        }\n\n        _this.updateCurrentTimeline();\n\n        _this.updateCurrentEvent();\n      });\n    },\n    updateCurrentTimeline: function updateCurrentTimeline() {\n      if (this.$store.state.currentTimeline === null) return;\n      if (this.$store.state.timelines === null) return;\n      if (this.$store.state.timelines[0] === null) return;\n      var index = this.$store.state.timelines.map(function (e) {\n        return e.id;\n      }).indexOf(this.$store.state.currentTimeline.id);\n\n      if (index === -1) {\n        this.$store.commit('clearCurrentTimeline');\n      } else {\n        this.$store.commit('setCurrentTimeline', this.$store.state.timelines[index]);\n      }\n    },\n    updateCurrentEvent: function updateCurrentEvent() {\n      if (this.$store.state.currentEvent === null) return;\n      if (this.$store.state.currentTimeline === null) return;\n      if (this.$store.state.currentTimeline.timelineEvents === null) return;\n      if (this.$store.state.currentTimeline.timelineEvents[0] === null) return;\n      var index = this.$store.state.currentTimeline.timelineEvents.map(function (e) {\n        return e.Id;\n      }).indexOf(this.$store.state.currentEvent.Id);\n\n      if (index === -1) {\n        this.$store.commit('clearCurrentEvent');\n      } else {\n        this.$store.commit('setCurrentEvent', this.$store.state.currentTimeline.timelineEvents[index]);\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.fetchTimelines();\n  }\n}).$mount('#app');",{"version":3,"sources":["src\\main.js"],"names":["Vue","app","BootstrapVue","VueRouter","Vuex","createPersistedState","router","getAll","createTimeline","deleteTimeline","changeTimelineTitle","createEvent","linkEventToTimeline","unlinkEventFromEvent","linkEventToEvent","deleteEvent","changeEventTitle","unlinkEventFromTimeline","changeEventDescription","use","config","productionTip","timelines","store","Store","state","currentTimeline","currentEvent","mutations","addTimeline","timeline","push","addEvent","event","timelineEvents","removeTimeline","id","i","length","splice","setCurrentTimeline","clearCurrentTimeline","setCurrentEvent","clearCurrentEvent","updateTimelineTitle","payload","title","removeEvent","Id","updateEventTitle","Title","updateEventDescription","Description","description","actions","commit","Promise","resolve","then","item","response","data","date","CreationTimeStamp","isDeleted","IsDeleted","selected","_rowVariant","deleteSelectedTimelines","filter","t","forEach","e","dispatch","createEventExact","newEvent","LinkedTimelineEventIds","createEventBA","beforeAfter","index","map","indexOf","eventId","eventBeforeIndex","ev","eventAfterId","slice","getters","selectedTimelines","plugins","paths","render","h","methods","fetchTimelines","get","Timelines","TimelineEvents","updateCurrentTimeline","updateCurrentEvent","$store","mounted","$mount"],"mappings":"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","file":"C:\\Users\\chris\\Desktop\\aileron\\src\\main.js","sourceRoot":"C:\\Users\\chris\\Desktop\\aileron","sourcesContent":["import Vue from 'vue/dist/vue.js'\nimport app from './app.vue'\nimport BootstrapVue from 'bootstrap-vue'\nimport VueRouter from 'vue-router'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\nimport Vuex from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\nimport router from './router'\nimport {getAll, createTimeline, deleteTimeline, changeTimelineTitle, createEvent, linkEventToTimeline, unlinkEventFromEvent, linkEventToEvent, deleteEvent, changeEventTitle, unlinkEventFromTimeline, changeEventDescription} from './scripts/api'\n\nVue.use(BootstrapVue)\nVue.use(VueRouter)\nVue.use(Vuex)\n\nVue.config.productionTip = false\n\nvar timelines = []\n\nconst store = new Vuex.Store({\n  state: {\n    timelines,\n    currentTimeline: null,\n    currentEvent: null\n  },\n  mutations: {\n    addTimeline (state, timeline) {\n      state.timelines.push(timeline)\n    },\n    addEvent(state, event) {\n      state.currentTimeline.timelineEvents.push(event)\n    },\n    removeTimeline(state, id) {\n      for (var i = 0; i < state.timelines.length; i++) {\n        if (state.timelines[i].id === id) {\n          state.timelines.splice(i,1)\n          if (state.currentTimeline != null)\n            if (state.currentTimeline.id === id)\n              state.currentTimeline = null\n          return\n        }\n      }\n    },\n    setCurrentTimeline(state, timeline) {\n      state.currentTimeline = timeline\n    },\n    clearCurrentTimeline(state) {\n      state.currentTimeline = null\n    },\n    setCurrentEvent(state, event) {\n      state.currentEvent = event\n    },\n    clearCurrentEvent(state) {\n      state.currentEvent = null\n    },\n    updateTimelineTitle(state, payload) {\n      for (var i = 0; i < state.timelines.length; i++) {\n        if (state.timelines[i].id === payload.id) {\n          state.timelines[i].title = payload.title\n          if(payload.id === state.currentTimeline.id) {\n            state.currentTimeline.title = payload.title\n          }\n          return\n        }\n      }\n    },\n    removeEvent(state, id) {\n      for (var i = 0; i < state.currentTimeline.timelineEvents.length; i++) {\n        if (state.currentTimeline.timelineEvents[i].Id === id) {\n          state.currentTimeline.timelineEvents.splice(i,1)\n          if (state.currentEvent != null)\n            if (state.currentEvent.Id === id)\n              state.currentEvent = null\n          return\n        }\n      }\n    },\n    updateEventTitle(state, payload) {\n      for (var i = 0; i < state.currentTimeline.timelineEvents.length; i++) {\n        if (state.currentTimeline.timelineEvents[i].Id === payload.id) {\n          state.currentTimeline.timelineEvents[i].Title = payload.title\n          if(payload.id === state.currentEvent.Id) {\n            state.currentEvent.Title = payload.title\n          }\n          return\n        }\n      }\n    },\n    updateEventDescription(state, payload) {\n      for (var i = 0; i < state.currentTimeline.timelineEvents.length; i++) {\n        if (state.currentTimeline.timelineEvents[i].Id === payload.id) {\n          state.currentTimeline.timelineEvents[i].Description = payload.description\n          if(payload.id === state.currentEvent.Id) {\n            state.currentEvent.Description = payload.description\n          }\n          return\n        }\n      }\n    }\n  },\n  actions: {\n    createTimeline ({ commit }, title) {\n      return new Promise ((resolve) => {\n        createTimeline(title).then(response => {\n          var item = response.data\n          var timeline = {\n           title: item.Title,\n           date: item.CreationTimeStamp,\n           isDeleted: item.IsDeleted,\n           id: item.Id,\n           selected: false,\n           _rowVariant: ''\n        }\n          timeline.timelineEvents = []\n          commit('addTimeline', timeline)\n          resolve(timeline)\n        })\n      })\n    },\n    deleteTimeline({ commit }, id) {\n      deleteTimeline(id).then(() => {\n        commit('removeTimeline', id)\n      })\n    },\n    deleteSelectedTimelines({ state }) {\n      /*\n        Filter returns an array of all selected timelines.\n        Foreach loops through that returned array,\n        using 'e' as the current timline.\n        Dispatch calls deleteTimeline action.\n        This at the end allows the use of this inside the forEach function.\n      */\n      state.timelines.filter(t => t.selected).forEach(function(e){this.dispatch('deleteTimeline',e.id)}, this)\n    },\n    changeTimelineTitle({ commit }, payload) {\n      var id = payload.id\n      var title = payload.title\n      changeTimelineTitle(id, title).then(() => {\n        commit('updateTimelineTitle', {id, title})\n      })\n    },\n    createEventExact ({state, commit}, payload) {\n      var newEvent = {}\n      createEvent(payload).then(response => {\n        newEvent = response.data\n        newEvent.LinkedTimelineEventIds = []\n        linkEventToTimeline(newEvent.Id, state.currentTimeline.id).then(() => {\n          commit('addEvent', newEvent)\n        })\n      })\n    },\n    createEventBA({state, commit}, payload) {\n      var newEvent = {}\n      createEvent(payload).then(response => {\n        newEvent = response.data\n        linkEventToTimeline(newEvent.Id, state.currentTimeline.id).then(() => {\n          if (payload.beforeAfter === 'before') {\n            /*\n              Create a new timeline, create Event 1 at 12:00.\n              Create Event 2 set as before Event 1.\n              Now if you create Event 3 and also set this as before Event 1,\n              this will find that Event 2 already has a link to Event 1.\n              Replaces Event 2's link to Event 1 with a link to Event 3.\n              Links Event 3 to Event 1.\n              index would be the index of Event 2 in that example\n            */\n            let index = state.currentTimeline.timelineEvents.map(function(e) {if(e.LinkedTimelineEventIds != null)if(e.LinkedTimelineEventIds[0] != null)return e.LinkedTimelineEventIds[0]}).indexOf(payload.eventId)\n            if (index != -1) {\n              unlinkEventFromEvent(state.currentTimeline.timelineEvents[index].Id, payload.eventId)\n              linkEventToEvent(state.currentTimeline.timelineEvents[index].Id, newEvent.Id)\n              state.currentTimeline.timelineEvents[index].LinkedTimelineEventIds[0] = newEvent.Id\n            }\n            linkEventToEvent(newEvent.Id, payload.eventId).then(() => {\n              newEvent.LinkedTimelineEventIds = []\n              newEvent.LinkedTimelineEventIds.push(payload.eventId)\n              commit('addEvent', newEvent)\n            })\n          } else if (payload.beforeAfter === 'after') {\n            let index = state.currentTimeline.timelineEvents.map(function(e) {return e.Id}).indexOf(payload.eventId)\n            let item = state.currentTimeline.timelineEvents[index]\n            if (item.LinkedTimelineEventIds != null) {\n              if (item.LinkedTimelineEventIds[0] != null) {\n                linkEventToEvent(newEvent.Id, item.LinkedTimelineEventIds[0])\n                unlinkEventFromEvent(item.Id, item.LinkedTimelineEventIds[0])\n                newEvent.LinkedTimelineEventIds = []\n                newEvent.LinkedTimelineEventIds.push(item.LinkedTimelineEventIds[0])\n              }\n            }\n            linkEventToEvent(item.Id, newEvent.Id).then(() => {\n              item.LinkedTimelineEventIds = []\n              item.LinkedTimelineEventIds.push(newEvent.Id)\n              commit('addEvent', newEvent)\n            })\n          }\n        })\n      })\n    },\n    deleteEvent({state, commit}, id) {\n      var eventBeforeIndex = state.currentTimeline.timelineEvents.map(function(e) {if(e.LinkedTimelineEventIds != null)if(e.LinkedTimelineEventIds[0] != null)return e.LinkedTimelineEventIds[0]}).indexOf(id)\n      var ev = state.currentTimeline.timelineEvents.filter(e => e.Id === id)[0]\n      var eventAfterId = ''\n\n      if (ev.LinkedTimelineEventIds != null) { if (ev.LinkedTimelineEventIds[0] != null) {\n        eventAfterId = ev.LinkedTimelineEventIds[0]\n      }}\n\n      if (eventBeforeIndex != -1) {\n        unlinkEventFromEvent(state.currentTimeline.timelineEvents[eventBeforeIndex].Id, id).then(() => {\n          if (eventAfterId != '') {\n            linkEventToEvent(state.currentTimeline.timelineEvents[eventBeforeIndex].Id, eventAfterId)\n            state.currentTimeline.timelineEvents[eventBeforeIndex].LinkedTimelineEventIds[0] = eventAfterId\n          } else {\n            state.currentTimeline.timelineEvents[eventBeforeIndex].LinkedTimelineEventIds[0].slice(0,1)\n          }\n        })\n      }\n\n      deleteEvent(id).then(() => {\n        unlinkEventFromTimeline(id, state.currentTimeline.id).then(() => {\n          commit('removeEvent', id)\n        })\n      })\n\n\n    },\n    changeEventTitle({ commit }, payload) {\n      var id = payload.id\n      var title = payload.title\n      changeEventTitle(id, title).then(() => {\n        commit('updateEventTitle', {id, title})\n      })\n    },\n    changeEventDescription({ commit }, payload) {\n      var id = payload.id\n      var description = payload.description\n      changeEventDescription(id, description).then(() => {\n        commit('updateEventDescription', {id, description})\n      })\n    }\n  },\n  getters: {\n    selectedTimelines: (state) => {\n      return state.timelines.filter(t => t.selected)\n    }\n  },\n  plugins: [createPersistedState({\n    paths: ['currentTimeline','currentEvent']\n })]\n})\n\nnew Vue({\n  render: h => h(app),\n  router,\n  store,\n  methods: {\n    fetchTimelines() {\n      timelines.splice(0, timelines.length)\n      var get = getAll()\n      get.then((data) => {\n        for (var i = 0; i < data.data.Timelines.length; i++) {\n          var item = data.data.Timelines[i]\n          var timeline = {\n             title: item.Title,\n             date: item.CreationTimeStamp,\n             isDeleted: item.isDeleted,\n             id: item.Id,\n             timelineEvents: item.TimelineEvents,\n             selected: false,\n             _rowVariant: ''\n          }\n          timelines.push(timeline)\n        }\n        this.updateCurrentTimeline()\n        this.updateCurrentEvent()\n      })\n    },\n    updateCurrentTimeline() {\n      if (this.$store.state.currentTimeline === null) return\n      if (this.$store.state.timelines === null) return\n      if (this.$store.state.timelines[0] === null) return\n      var index = this.$store.state.timelines.map(function(e){return e.id}).indexOf(this.$store.state.currentTimeline.id)\n      if (index === -1) {\n        this.$store.commit('clearCurrentTimeline')\n      } else {\n        this.$store.commit('setCurrentTimeline',this.$store.state.timelines[index])\n      }\n    },\n    updateCurrentEvent() {\n      if (this.$store.state.currentEvent === null) return\n      if (this.$store.state.currentTimeline === null) return\n      if (this.$store.state.currentTimeline.timelineEvents === null) return\n      if (this.$store.state.currentTimeline.timelineEvents[0] === null) return\n      var index = this.$store.state.currentTimeline.timelineEvents.map(function(e){return e.Id}).indexOf(this.$store.state.currentEvent.Id)\n      if (index === -1) {\n        this.$store.commit('clearCurrentEvent')\n      } else {\n        this.$store.commit('setCurrentEvent',this.$store.state.currentTimeline.timelineEvents[index])\n      }\n    }\n  },\n  mounted() {\n    this.fetchTimelines()\n  }\n}).$mount('#app')\n"]}]}