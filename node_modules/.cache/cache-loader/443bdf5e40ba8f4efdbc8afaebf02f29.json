{"remainingRequest":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\chris\\Desktop\\aileron\\node_modules\\eslint-loader\\index.js??ref--18-0!C:\\Users\\chris\\Desktop\\aileron\\src\\main.js","dependencies":[{"path":"C:\\Users\\chris\\Desktop\\aileron\\src\\main.js","mtime":1522249127822},{"path":"C:\\Users\\chris\\Desktop\\aileron\\package.json","mtime":1522176194972},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1520545180302},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\chris\\Desktop\\aileron\\node_modules\\eslint-loader\\index.js","mtime":1519638534000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.promise\";\nimport Vue from 'vue/dist/vue.js';\nimport app from './app.vue';\nimport BootstrapVue from 'bootstrap-vue';\nimport VueRouter from 'vue-router';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-vue/dist/bootstrap-vue.css';\nimport Vuex from 'vuex';\nimport createPersistedState from 'vuex-persistedstate';\nimport router from './router';\nimport InstantSearch from 'vue-instantsearch';\nimport { getAll, createTimeline as _createTimeline, deleteTimeline as _deleteTimeline, changeTimelineTitle as _changeTimelineTitle, createEvent, linkEventToTimeline, unlinkEventFromEvent, linkEventToEvent } from './scripts/api';\n\nvar algoliasearch = require('algoliasearch');\n\nvar client = algoliasearch('8UDBSF0DG7', '67cae2821acc556edf4e80e9ae2e5b8d');\nvar index = client.initIndex('aileron');\nVue.use(BootstrapVue);\nVue.use(VueRouter);\nVue.use(Vuex);\nVue.use(InstantSearch);\nVue.config.productionTip = false;\nvar timelines = [];\nvar store = new Vuex.Store({\n  state: {\n    timelines: timelines,\n    currentTimeline: null\n  },\n  mutations: {\n    addTimeline: function addTimeline(state, timeline) {\n      state.timelines.push(timeline);\n    },\n    addEvent: function addEvent(state, event) {\n      state.currentTimeline.timelineEvents.push(event);\n    },\n    removeTimeline: function removeTimeline(state, id) {\n      for (var i = 0; i < state.timelines.length; i++) {\n        if (state.timelines[i].id === id) {\n          state.timelines.splice(i, 1);\n          return;\n        }\n      }\n    },\n    setCurrentTimeline: function setCurrentTimeline(state, timeline) {\n      state.currentTimeline = timeline;\n    },\n    updateTimelineTitle: function updateTimelineTitle(state, payload) {\n      for (var i = 0; i < state.timelines.length; i++) {\n        if (state.timelines[i].id === payload.id) {\n          state.timelines[i].title = payload.title;\n          return;\n        }\n      }\n    }\n  },\n  actions: {\n    createTimeline: function createTimeline(_ref, title) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve) {\n        _createTimeline(title).then(function (response) {\n          var item = response.data;\n          var timeline = {\n            title: item.Title,\n            date: item.CreationTimeStamp,\n            isDeleted: item.IsDeleted,\n            id: item.Id,\n            selected: false,\n            _rowVariant: ''\n          };\n          timeline.timelineEvents = [];\n          commit('addTimeline', timeline);\n          resolve(timeline);\n        });\n      });\n    },\n    deleteTimeline: function deleteTimeline(_ref2, id) {\n      var commit = _ref2.commit;\n\n      _deleteTimeline(id).then(function () {\n        commit('removeTimeline', id);\n      });\n    },\n    deleteSelectedTimelines: function deleteSelectedTimelines(_ref3) {\n      var state = _ref3.state;\n\n      /*\n        Filter returns an array of all selected timelines.\n        Foreach loops through that returned array,\n        using 'e' as the current timline.\n        Dispatch calls deleteTimeline action.\n        This at the end allows the use of this inside the forEach function.\n      */\n      state.timelines.filter(function (t) {\n        return t.selected;\n      }).forEach(function (e) {\n        this.dispatch('deleteTimeline', e.id);\n      }, this);\n    },\n    changeTimelineTitle: function changeTimelineTitle(_ref4, title) {\n      var commit = _ref4.commit;\n      var id = this.getters.selectedTimelines[0].id;\n\n      _changeTimelineTitle(id, title).then(function () {\n        commit('updateTimelineTitle', {\n          id: id,\n          title: title\n        });\n      });\n    },\n    createEventExact: function createEventExact(_ref5, payload) {\n      var state = _ref5.state,\n          commit = _ref5.commit;\n      var newEvent = {};\n      createEvent(payload).then(function (response) {\n        newEvent = response.data;\n        newEvent.LinkedTimelineEventIds = [];\n        linkEventToTimeline(newEvent.Id, state.currentTimeline.id).then(function () {\n          commit('addEvent', newEvent);\n        });\n      });\n    },\n    createEventBA: function createEventBA(_ref6, payload) {\n      var state = _ref6.state,\n          commit = _ref6.commit;\n      var newEvent = {};\n      createEvent(payload).then(function (response) {\n        newEvent = response.data;\n        linkEventToTimeline(newEvent.Id, state.currentTimeline.id).then(function () {\n          if (payload.beforeAfter === 'before') {\n            /*\n              Create a new timeline, create Event 1 at 12:00.\n              Create Event 2 set as before Event 1.\n              Now if you create Event 3 and also set this as before Event 1,\n              this will find that Event 2 already has a link to Event 1.\n              Replaces Event 2's link to Event 1 with a link to Event 3.\n              Links Event 3 to Event 1.\n              index would be the index of Event 2 in that example\n            */\n            var _index = state.currentTimeline.timelineEvents.map(function (e) {\n              if (e.LinkedTimelineEventIds != null) if (e.LinkedTimelineEventIds[0] != null) return e.LinkedTimelineEventIds[0];\n            }).indexOf(payload.eventId);\n\n            if (_index != -1) {\n              unlinkEventFromEvent(state.currentTimeline.timelineEvents[_index].Id, payload.eventId);\n              linkEventToEvent(state.currentTimeline.timelineEvents[_index].Id, newEvent.Id);\n              state.currentTimeline.timelineEvents[_index].LinkedTimelineEventIds[0] = newEvent.Id;\n            }\n\n            linkEventToEvent(newEvent.Id, payload.eventId).then(function () {\n              newEvent.LinkedTimelineEventIds = [];\n              newEvent.LinkedTimelineEventIds.push(payload.eventId);\n              commit('addEvent', newEvent);\n            });\n          } else if (payload.beforeAfter === 'after') {\n            var _index2 = state.currentTimeline.timelineEvents.map(function (e) {\n              return e.Id;\n            }).indexOf(payload.eventId);\n\n            var item = state.currentTimeline.timelineEvents[_index2];\n\n            if (item.LinkedTimelineEventIds != null) {\n              if (item.LinkedTimelineEventIds[0] != null) {\n                linkEventToEvent(newEvent.Id, item.LinkedTimelineEventIds[0]);\n                unlinkEventFromEvent(item.Id, item.LinkedTimelineEventIds[0]);\n                newEvent.LinkedTimelineEventIds = [];\n                newEvent.LinkedTimelineEventIds.push(item.LinkedTimelineEventIds[0]);\n              }\n            }\n\n            linkEventToEvent(item.Id, newEvent.Id).then(function () {\n              item.LinkedTimelineEventIds = [];\n              item.LinkedTimelineEventIds.push(newEvent.Id);\n              commit('addEvent', newEvent);\n            });\n          }\n        });\n      });\n    }\n  },\n  getters: {\n    selectedTimelines: function selectedTimelines(state) {\n      return state.timelines.filter(function (t) {\n        return t.selected;\n      });\n    }\n  },\n  plugins: [createPersistedState({\n    paths: ['currentTimeline']\n  })]\n});\nnew Vue({\n  render: function render(h) {\n    return h(app);\n  },\n  router: router,\n  store: store,\n  methods: {\n    fetchTimelines: function fetchTimelines() {\n      timelines.splice(0, timelines.length);\n      var get = getAll();\n      get.then(function (data) {\n        for (var i = 0; i < data.data.Timelines.length; i++) {\n          var item = data.data.Timelines[i];\n          var timeline = {\n            title: item.Title,\n            date: item.CreationTimeStamp,\n            isDeleted: item.isDeleted,\n            id: item.Id,\n            timelineEvents: item.TimelineEvents,\n            selected: false,\n            _rowVariant: ''\n          };\n          timelines.push(timeline);\n        }\n\n        index.addObjects(timelines, function (err, content) {\n          console.log(content);\n        });\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.fetchTimelines();\n  }\n}).$mount('#app');",{"version":3,"sources":["src\\main.js"],"names":["Vue","app","BootstrapVue","VueRouter","Vuex","createPersistedState","router","InstantSearch","getAll","createTimeline","deleteTimeline","changeTimelineTitle","createEvent","linkEventToTimeline","unlinkEventFromEvent","linkEventToEvent","algoliasearch","require","client","index","initIndex","use","config","productionTip","timelines","store","Store","state","currentTimeline","mutations","addTimeline","timeline","push","addEvent","event","timelineEvents","removeTimeline","id","i","length","splice","setCurrentTimeline","updateTimelineTitle","payload","title","actions","commit","Promise","resolve","then","item","response","data","Title","date","CreationTimeStamp","isDeleted","IsDeleted","Id","selected","_rowVariant","deleteSelectedTimelines","filter","t","forEach","e","dispatch","getters","selectedTimelines","createEventExact","newEvent","LinkedTimelineEventIds","createEventBA","beforeAfter","map","indexOf","eventId","plugins","paths","render","h","methods","fetchTimelines","get","Timelines","TimelineEvents","addObjects","err","content","console","log","mounted","$mount"],"mappings":"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","file":"C:\\Users\\chris\\Desktop\\aileron\\src\\main.js","sourceRoot":"C:\\Users\\chris\\Desktop\\aileron","sourcesContent":["import Vue from 'vue/dist/vue.js'\nimport app from './app.vue'\nimport BootstrapVue from 'bootstrap-vue'\nimport VueRouter from 'vue-router'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\nimport Vuex from 'vuex'\nimport createPersistedState from 'vuex-persistedstate'\nimport router from './router'\nimport InstantSearch from 'vue-instantsearch';\nimport {getAll, createTimeline, deleteTimeline, changeTimelineTitle, createEvent, linkEventToTimeline, unlinkEventFromEvent, linkEventToEvent} from './scripts/api'\n\nvar algoliasearch = require('algoliasearch')\nvar client = algoliasearch('8UDBSF0DG7','67cae2821acc556edf4e80e9ae2e5b8d')\nvar index = client.initIndex('aileron')\n\nVue.use(BootstrapVue)\nVue.use(VueRouter)\nVue.use(Vuex)\nVue.use(InstantSearch)\n\nVue.config.productionTip = false\n\nvar timelines = []\n\nconst store = new Vuex.Store({\n  state: {\n    timelines,\n    currentTimeline: null\n  },\n  mutations: {\n    addTimeline (state, timeline) {\n      state.timelines.push(timeline)\n    },\n    addEvent(state, event) {\n      state.currentTimeline.timelineEvents.push(event)\n    },\n    removeTimeline(state, id) {\n      for (var i = 0; i < state.timelines.length; i++) {\n        if (state.timelines[i].id === id) {\n          state.timelines.splice(i,1)\n          return\n        }\n      }\n    },\n    setCurrentTimeline(state, timeline) {\n      state.currentTimeline = timeline\n    },\n    updateTimelineTitle(state, payload) {\n      for (var i = 0; i < state.timelines.length; i++) {\n        if (state.timelines[i].id === payload.id) {\n          state.timelines[i].title = payload.title\n          return\n        }\n      }\n    }\n  },\n  actions: {\n    createTimeline ({ commit }, title) {\n      return new Promise ((resolve) => {\n        createTimeline(title).then(response => {\n          var item = response.data\n          var timeline = {\n           title: item.Title,\n           date: item.CreationTimeStamp,\n           isDeleted: item.IsDeleted,\n           id: item.Id,\n           selected: false,\n           _rowVariant: ''\n        }\n          timeline.timelineEvents = []\n          commit('addTimeline', timeline)\n          resolve(timeline)\n        })\n      })\n    },\n    deleteTimeline({ commit }, id) {\n      deleteTimeline(id).then(() => {\n        commit('removeTimeline', id)\n      })\n    },\n    deleteSelectedTimelines({ state }) {\n      /*\n        Filter returns an array of all selected timelines.\n        Foreach loops through that returned array,\n        using 'e' as the current timline.\n        Dispatch calls deleteTimeline action.\n        This at the end allows the use of this inside the forEach function.\n      */\n      state.timelines.filter(t => t.selected).forEach(function(e){this.dispatch('deleteTimeline',e.id)}, this)\n    },\n    changeTimelineTitle({ commit }, title) {\n      var id = this.getters.selectedTimelines[0].id\n      changeTimelineTitle(id, title).then(() => {\n        commit('updateTimelineTitle', {id, title})\n      })\n    },\n    createEventExact ({state, commit}, payload) {\n      var newEvent = {}\n      createEvent(payload).then(response => {\n        newEvent = response.data\n        newEvent.LinkedTimelineEventIds = []\n        linkEventToTimeline(newEvent.Id, state.currentTimeline.id).then(() => {\n          commit('addEvent', newEvent)\n        })\n      })\n    },\n    createEventBA({state, commit}, payload) {\n      var newEvent = {}\n      createEvent(payload).then(response => {\n        newEvent = response.data\n        linkEventToTimeline(newEvent.Id, state.currentTimeline.id).then(() => {\n          if (payload.beforeAfter === 'before') {\n            /*\n              Create a new timeline, create Event 1 at 12:00.\n              Create Event 2 set as before Event 1.\n              Now if you create Event 3 and also set this as before Event 1,\n              this will find that Event 2 already has a link to Event 1.\n              Replaces Event 2's link to Event 1 with a link to Event 3.\n              Links Event 3 to Event 1.\n              index would be the index of Event 2 in that example\n            */\n            let index = state.currentTimeline.timelineEvents.map(function(e) {if(e.LinkedTimelineEventIds != null)if(e.LinkedTimelineEventIds[0] != null)return e.LinkedTimelineEventIds[0]}).indexOf(payload.eventId)\n            if (index != -1) {\n              unlinkEventFromEvent(state.currentTimeline.timelineEvents[index].Id, payload.eventId)\n              linkEventToEvent(state.currentTimeline.timelineEvents[index].Id, newEvent.Id)\n              state.currentTimeline.timelineEvents[index].LinkedTimelineEventIds[0] = newEvent.Id\n            }\n            linkEventToEvent(newEvent.Id, payload.eventId).then(() => {\n              newEvent.LinkedTimelineEventIds = []\n              newEvent.LinkedTimelineEventIds.push(payload.eventId)\n              commit('addEvent', newEvent)\n            })\n          } else if (payload.beforeAfter === 'after') {\n            let index = state.currentTimeline.timelineEvents.map(function(e) {return e.Id}).indexOf(payload.eventId)\n            let item = state.currentTimeline.timelineEvents[index]\n            if (item.LinkedTimelineEventIds != null) {\n              if (item.LinkedTimelineEventIds[0] != null) {\n                linkEventToEvent(newEvent.Id, item.LinkedTimelineEventIds[0])\n                unlinkEventFromEvent(item.Id, item.LinkedTimelineEventIds[0])\n                newEvent.LinkedTimelineEventIds = []\n                newEvent.LinkedTimelineEventIds.push(item.LinkedTimelineEventIds[0])\n              }\n            }\n            linkEventToEvent(item.Id, newEvent.Id).then(() => {\n              item.LinkedTimelineEventIds = []\n              item.LinkedTimelineEventIds.push(newEvent.Id)\n              commit('addEvent', newEvent)\n            })\n          }\n        })\n      })\n    }\n  },\n  getters: {\n    selectedTimelines: (state) => {\n      return state.timelines.filter(t => t.selected)\n    }\n  },\n  plugins: [createPersistedState({\n    paths: ['currentTimeline']\n })]\n})\n\nnew Vue({\n  render: h => h(app),\n  router,\n  store,\n  methods: {\n    fetchTimelines() {\n      timelines.splice(0, timelines.length)\n      var get = getAll()\n      get.then((data) => {\n        for (var i = 0; i < data.data.Timelines.length; i++) {\n          var item = data.data.Timelines[i]\n          var timeline = {\n             title: item.Title,\n             date: item.CreationTimeStamp,\n             isDeleted: item.isDeleted,\n             id: item.Id,\n             timelineEvents: item.TimelineEvents,\n             selected: false,\n             _rowVariant: ''\n          }\n          timelines.push(timeline)\n        }\n        index.addObjects(timelines, function(err, content) {\n          console.log(content)\n        })\n      })\n    }\n  },\n  mounted() {\n    this.fetchTimelines()\n  }\n}).$mount('#app')\n"]}]}