{"version":3,"file":"vuex-persistedstate.umd.js","sources":["../index.js"],"sourcesContent":["import merge from 'deepmerge';\nimport shvl from 'shvl';\n\nexport default function(options, storage, key) {\n  options = options || {};\n  storage = options.storage || (window && window.localStorage);\n  key = options.key || 'vuex';\n\n  function canWriteStorage(storage) {\n    try {\n      storage.setItem('@@', 1);\n      storage.removeItem('@@');\n      return true;\n    } catch (e) {}\n\n    return false;\n  }\n\n  function getState(key, storage, value) {\n    try {\n      return (value = storage.getItem(key)) && typeof value !== 'undefined'\n        ? JSON.parse(value)\n        : undefined;\n    } catch (err) {}\n\n    return undefined;\n  }\n\n  function filter() {\n    return true;\n  }\n\n  function setState(key, state, storage) {\n    return storage.setItem(key, JSON.stringify(state));\n  }\n\n  function reducer(state, paths) {\n    return paths.length === 0\n      ? state\n      : paths.reduce(function(substate, path) {\n          return shvl.set(substate, path, shvl.get(state, path));\n        }, {});\n  }\n\n  function subscriber(store) {\n    return function(handler) {\n      return store.subscribe(handler);\n    };\n  }\n\n  if (!canWriteStorage(storage)) {\n    throw new Error('Invalid storage instance given');\n  }\n\n  return function(store) {\n    const savedState = shvl.get(options, 'getState', getState)(key, storage);\n\n    if (typeof savedState === 'object' && savedState !== null) {\n      store.replaceState(merge(store.state, savedState, {\n        arrayMerge: options.arrayMerger || function (store, saved) { return saved },\n        clone: false,\n      }));\n    }\n\n    (options.subscriber || subscriber)(store)(function(mutation, state) {\n      if ((options.filter || filter)(mutation)) {\n        (options.setState || setState)(\n          key,\n          (options.reducer || reducer)(state, options.paths || []),\n          storage\n        );\n      }\n    });\n  };\n};\n"],"names":["options","storage","key","getState","value","getItem","JSON","parse","undefined","err","window","localStorage","setItem","removeItem","e","canWriteStorage","Error","store","const","savedState","shvl","get","replaceState","merge","state","arrayMerge","arrayMerger","saved","clone","subscriber","handler","subscribe","mutation","filter","setState","stringify","reducer","paths","length","reduce","substate","path","set"],"mappings":"kWAGe,SAASA,EAASC,EAASC,GAexC,SAASC,EAASD,EAAKD,EAASG,GAC9B,IACE,OAAQA,EAAQH,EAAQI,QAAQH,UAA0B,IAAVE,EAC5CE,KAAKC,MAAMH,QACXI,QACGC,KA2BX,GA7CAR,GADAD,EAAUA,OACQC,SAAYS,QAAUA,OAAOC,aAC/CT,EAAMF,EAAQE,KAAO,QAErB,SAAyBD,GACvB,IAGE,OAFAA,EAAQW,QAAQ,KAAM,GACtBX,EAAQY,WAAW,OACZ,QACAC,IAET,OAAO,EAmCJC,CAAgBd,GACnB,MAAM,IAAIe,MAAM,kCAGlB,OAAO,SAASC,GACdC,IAAMC,EAAaC,EAAKC,IAAIrB,EAAS,WAAYG,EAA9BiB,CAAwClB,EAAKD,GAEtC,iBAAfkB,GAA0C,OAAfA,GACpCF,EAAMK,aAAaC,EAAMN,EAAMO,MAAOL,GACpCM,WAAYzB,EAAQ0B,aAAe,SAAUT,EAAOU,GAAS,OAAOA,GACpEC,OAAO,MAIV5B,EAAQ6B,YApBX,SAAoBZ,GAClB,OAAO,SAASa,GACd,OAAOb,EAAMc,UAAUD,MAkBUb,GAAO,SAASe,EAAUR,IACtDxB,EAAQiC,QArCjB,WACE,OAAO,IAoC0BD,KAC5BhC,EAAQkC,UAlCf,SAAkBhC,EAAKsB,EAAOvB,GAC5B,OAAOA,EAAQW,QAAQV,EAAKI,KAAK6B,UAAUX,MAkCrCtB,GACCF,EAAQoC,SAhCjB,SAAiBZ,EAAOa,GACtB,OAAwB,IAAjBA,EAAMC,OACTd,EACAa,EAAME,OAAO,SAASC,EAAUC,GAC9B,OAAOrB,EAAKsB,IAAIF,EAAUC,EAAMrB,EAAKC,IAAIG,EAAOiB,WA4BnBjB,EAAOxB,EAAQqC,WAC5CpC"}